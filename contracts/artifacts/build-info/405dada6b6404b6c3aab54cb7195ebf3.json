{
	"id": "405dada6b6404b6c3aab54cb7195ebf3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ValidatorFactory.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\r\n\r\nimport \"./interfaces/IValidatorFactory.sol\";\r\nimport \"./interfaces/IValidator.sol\";\r\n\r\ncontract  ValidatorFactory is IValidatorFactory {\r\n    address public immutable implementation;\r\n\r\n    bool public isPaused;\r\n    address public pauser;\r\n    \r\n    uint256 public depositFee;\r\n    uint256 public claimFee;\r\n    uint256 public constant MAX_FEE = 300; // 3%\r\n\r\n    address public feeManager;\r\n    address public voter;\r\n    \r\n    mapping(address => mapping(address => address)) private _validatorList;\r\n    address[] public allValidators;\r\n    mapping(address => bool) private _isValidator;\r\n    mapping(address => uint256) public customDepositFee;\r\n    mapping(address => uint256) public customClaimFee;\r\n\r\n    \r\n    constructor(address _implementation) {\r\n        implementation = _implementation;\r\n        voter = msg.sender;\r\n        pauser = msg.sender;\r\n        feeManager = msg.sender;\r\n        isPaused = false;\r\n        depositFee = 5; // 0.05%\r\n        claimFee = 30; // 0.3%\r\n    }\r\n\r\n    /// @inheritdoc IValidatorFactory\r\n    function allValidatorsLength() external view returns (uint256) {\r\n        return allValidators.length;\r\n    }\r\n\r\n    /// @inheritdoc IValidatorFactory\r\n    function getValidator(address token, address owner) external view returns (address) {\r\n        return _validatorList[token][owner];\r\n    }\r\n\r\n    /// @inheritdoc IValidatorFactory\r\n    function isValidatorl(address pool) external view returns (bool) {\r\n        return _isValidator[pool];\r\n    }\r\n\r\n    /// @inheritdoc IValidatorFactory\r\n    function setVoter(address _voter) external {\r\n        if (msg.sender != voter) revert NotVoter();\r\n        voter = _voter;\r\n        emit SetVoter(_voter);\r\n    }\r\n\r\n    function setPauser(address _pauser) external {\r\n        if (msg.sender != pauser) revert NotPauser();\r\n        if (_pauser == address(0)) revert ZeroAddress();\r\n        pauser = _pauser;\r\n        emit SetPauser(_pauser);\r\n    }\r\n\r\n    function setPauseState(bool _state) external {\r\n        if (msg.sender != pauser) revert NotPauser();\r\n        isPaused = _state;\r\n        emit SetPauseState(_state);\r\n    }\r\n\r\n    function setFeeManager(address _feeManager) external {\r\n        if (msg.sender != feeManager) revert NotFeeManager();\r\n        if (_feeManager == address(0)) revert ZeroAddress();\r\n        feeManager = _feeManager;\r\n        emit SetFeeManager(_feeManager);\r\n    }\r\n    \r\n    /// @inheritdoc IValidatorFactory\r\n    function setFee(bool _type, uint256 _fee) external {\r\n        if (msg.sender != feeManager) revert NotFeeManager();\r\n        if (_fee > MAX_FEE) revert FeeTooHigh();\r\n        if (_fee == 0) revert ZeroFee();\r\n        if (_type) {\r\n            depositFee = _fee;\r\n        } else {\r\n            claimFee = _fee;\r\n        }\r\n    }\r\n\r\n    /// @inheritdoc IValidatorFactory\r\n    function setDepositCustomFee(address validator, uint256 fee) external {\r\n        if (msg.sender != feeManager) revert NotFeeManager();\r\n        // if (fee > MAX_FEE && fee != ZERO_FEE_INDICATOR) revert FeeTooHigh();\r\n        if (fee > MAX_FEE) revert FeeTooHigh();\r\n        if (!_isValidator[validator]) revert InvalidValidator();\r\n\r\n        customDepositFee[validator] = fee;\r\n        emit SetDepositCustomFee(validator, fee);\r\n    }\r\n\r\n    /// @inheritdoc IValidatorFactory\r\n    function setClaimCustomFee(address validator, uint256 fee) external {\r\n        if (msg.sender != feeManager) revert NotFeeManager();\r\n        // if (fee > MAX_FEE && fee != ZERO_FEE_INDICATOR) revert FeeTooHigh();\r\n        if (fee > MAX_FEE) revert FeeTooHigh();\r\n        if (!_isValidator[validator]) revert InvalidValidator();\r\n\r\n        customClaimFee[validator] = fee;\r\n        emit SetClaimCustomFee(validator, fee);\r\n    }\r\n\r\n    /// @inheritdoc IValidatorFactory\r\n    function createValidator(address _token, address _owner) public returns (address validator) {\r\n        if (_token == address(0)) revert ZeroAddress();\r\n\r\n        if (_validatorList[_token][_owner] != address(0)) revert PoolAlreadyExists();\r\n\r\n        bytes32 salt = keccak256(abi.encodePacked(_token, _owner)); // salt includes stable as well, 3 parameters\r\n       \r\n        validator = Clones.cloneDeterministic(implementation, salt);\r\n        \r\n        IValidator(validator).initialize(_token, _owner);\r\n        \r\n        _validatorList[_token][_owner] = validator;\r\n\r\n        allValidators.push(validator);\r\n\r\n        _isValidator[validator] = true;\r\n\r\n        emit ValidatorCreated(_token, _owner, validator, allValidators.length);\r\n    }\r\n}"
			},
			"contracts/interfaces/IValidator.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\ninterface IValidator {\r\n    // error DepositsNotEqual();\r\n    // error BelowMinimumK();\r\n    // error FactoryAlreadySet();\r\n    // error InsufficientLiquidity();\r\n    // error InsufficientLiquidityMinted();\r\n    // error InsufficientLiquidityBurned();\r\n    // error InsufficientOutputAmount();\r\n    // error InsufficientInputAmount();\r\n    // error IsPaused();\r\n    // error InvalidTo();\r\n    // error K();\r\n    // error NotEmergencyCouncil();\r\n\r\n    // event Fees(address indexed sender, uint256 amount0, uint256 amount1);\r\n    // event Mint(address indexed sender, uint256 amount0, uint256 amount1);\r\n    // event Burn(address indexed sender, address indexed to, uint256 amount0, uint256 amount1);\r\n    // event Swap(\r\n    //     address indexed sender,\r\n    //     address indexed to,\r\n    //     uint256 amount0In,\r\n    //     uint256 amount1In,\r\n    //     uint256 amount0Out,\r\n    //     uint256 amount1Out\r\n    // );\r\n    // event Sync(uint256 reserve0, uint256 reserve1);\r\n    // event Claim(address indexed sender, address indexed recipient, uint256 amount0, uint256 amount1);\r\n\r\n    // // Struct to capture time period obervations every 30 minutes, used for local oracles\r\n    // struct Observation {\r\n    //     uint256 timestamp;\r\n    //     uint256 reserve0Cumulative;\r\n    //     uint256 reserve1Cumulative;\r\n    // }\r\n\r\n    // /// @notice Returns the decimal (dec), reserves (r), stable (st), and tokens (t) of token0 and token1\r\n    // function metadata()\r\n    //     external\r\n    //     view\r\n    //     returns (uint256 dec0, uint256 dec1, uint256 r0, uint256 r1, bool st, address t0, address t1);\r\n\r\n    // /// @notice Claim accumulated but unclaimed fees (claimable0 and claimable1)\r\n    // function claimFees() external returns (uint256, uint256);\r\n\r\n    // /// @notice Returns [token0, token1]\r\n    // function tokens() external view returns (address, address);\r\n\r\n    // /// @notice Address of token in the pool with the lower address value\r\n    // function token0() external view returns (address);\r\n\r\n    // /// @notice Address of token in the poool with the higher address value\r\n    // function token1() external view returns (address);\r\n\r\n    // /// @notice Address of linked PoolFees.sol\r\n    // function poolFees() external view returns (address);\r\n\r\n    // /// @notice Address of PoolFactory that created this contract\r\n    // function factory() external view returns (address);\r\n\r\n    // /// @notice Capture oracle reading every 30 minutes (1800 seconds)\r\n    // function periodSize() external view returns (uint256);\r\n\r\n    // /// @notice Amount of token0 in pool\r\n    // function reserve0() external view returns (uint256);\r\n\r\n    // /// @notice Amount of token1 in pool\r\n    // function reserve1() external view returns (uint256);\r\n\r\n    // /// @notice Timestamp of last update to pool\r\n    // function blockTimestampLast() external view returns (uint256);\r\n\r\n    // /// @notice Cumulative of reserve0 factoring in time elapsed\r\n    // function reserve0CumulativeLast() external view returns (uint256);\r\n\r\n    // /// @notice Cumulative of reserve1 factoring in time elapsed\r\n    // function reserve1CumulativeLast() external view returns (uint256);\r\n\r\n    // /// @notice Accumulated fees of token0 (global)\r\n    // function index0() external view returns (uint256);\r\n\r\n    // /// @notice Accumulated fees of token1 (global)\r\n    // function index1() external view returns (uint256);\r\n\r\n    // /// @notice Get an LP's relative index0 to index0\r\n    // function supplyIndex0(address) external view returns (uint256);\r\n\r\n    // /// @notice Get an LP's relative index1 to index1\r\n    // function supplyIndex1(address) external view returns (uint256);\r\n\r\n    // /// @notice Amount of unclaimed, but claimable tokens from fees of token0 for an LP\r\n    // function claimable0(address) external view returns (uint256);\r\n\r\n    // /// @notice Amount of unclaimed, but claimable tokens from fees of token1 for an LP\r\n    // function claimable1(address) external view returns (uint256);\r\n\r\n    // /// @notice Returns the value of K in the Pool, based on its reserves.\r\n    // function getK() external returns (uint256);\r\n\r\n    // /// @notice Set pool name\r\n    // ///         Only callable by Voter.emergencyCouncil()\r\n    // /// @param __name String of new name\r\n    // function setName(string calldata __name) external;\r\n\r\n    // /// @notice Set pool symbol\r\n    // ///         Only callable by Voter.emergencyCouncil()\r\n    // /// @param __symbol String of new symbol\r\n    // function setSymbol(string calldata __symbol) external;\r\n\r\n    // /// @notice Get the number of observations recorded\r\n    // function observationLength() external view returns (uint256);\r\n\r\n    // /// @notice Get the value of the most recent observation\r\n    // function lastObservation() external view returns (Observation memory);\r\n\r\n    // /// @notice True if pool is stable, false if volatile\r\n    // function stable() external view returns (bool);\r\n\r\n    // /// @notice Produces the cumulative price using counterfactuals to save gas and avoid a call to sync.\r\n    // function currentCumulativePrices()\r\n    //     external\r\n    //     view\r\n    //     returns (uint256 reserve0Cumulative, uint256 reserve1Cumulative, uint256 blockTimestamp);\r\n\r\n    // /// @notice Provides twap price with user configured granularity, up to the full window size\r\n    // /// @param tokenIn .\r\n    // /// @param amountIn .\r\n    // /// @param granularity .\r\n    // /// @return amountOut .\r\n    // function quote(address tokenIn, uint256 amountIn, uint256 granularity) external view returns (uint256 amountOut);\r\n\r\n    // /// @notice Returns a memory set of TWAP prices\r\n    // ///         Same as calling sample(tokenIn, amountIn, points, 1)\r\n    // /// @param tokenIn .\r\n    // /// @param amountIn .\r\n    // /// @param points Number of points to return\r\n    // /// @return Array of TWAP prices\r\n    // function prices(address tokenIn, uint256 amountIn, uint256 points) external view returns (uint256[] memory);\r\n\r\n    // /// @notice Same as prices with with an additional window argument.\r\n    // ///         Window = 2 means 2 * 30min (or 1 hr) between observations\r\n    // /// @param tokenIn .\r\n    // /// @param amountIn .\r\n    // /// @param points .\r\n    // /// @param window .\r\n    // /// @return Array of TWAP prices\r\n    // function sample(\r\n    //     address tokenIn,\r\n    //     uint256 amountIn,\r\n    //     uint256 points,\r\n    //     uint256 window\r\n    // ) external view returns (uint256[] memory);\r\n\r\n    // /// @notice This low-level function should be called from a contract which performs important safety checks\r\n    // /// @param amount0Out   Amount of token0 to send to `to`\r\n    // /// @param amount1Out   Amount of token1 to send to `to`\r\n    // /// @param to           Address to recieve the swapped output\r\n    // /// @param data         Additional calldata for flashloans\r\n    // function swap(uint256 amount0Out, uint256 amount1Out, address to, bytes calldata data) external;\r\n\r\n    // /// @notice This low-level function should be called from a contract which performs important safety checks\r\n    // ///         standard uniswap v2 implementation\r\n    // /// @param to Address to receive token0 and token1 from burning the pool token\r\n    // /// @return amount0 Amount of token0 returned\r\n    // /// @return amount1 Amount of token1 returned\r\n    // function burn(address to) external returns (uint256 amount0, uint256 amount1);\r\n\r\n    // /// @notice This low-level function should be called by addLiquidity functions in Router.sol, which performs important safety checks\r\n    // ///         standard uniswap v2 implementation\r\n    // /// @param to           Address to receive the minted LP token\r\n    // /// @return liquidity   Amount of LP token minted\r\n    // function mint(address to) external returns (uint256 liquidity);\r\n\r\n    // /// @notice Update reserves and, on the first call per block, price accumulators\r\n    // /// @return _reserve0 .\r\n    // /// @return _reserve1 .\r\n    // /// @return _blockTimestampLast .\r\n    // function getReserves() external view returns (uint256 _reserve0, uint256 _reserve1, uint256 _blockTimestampLast);\r\n\r\n    // /// @notice Get the amount of tokenOut given the amount of tokenIn\r\n    // /// @param amountIn Amount of token in\r\n    // /// @param tokenIn  Address of token\r\n    // /// @return Amount out\r\n    // function getAmountOut(uint256 amountIn, address tokenIn) external view returns (uint256);\r\n\r\n    // /// @notice Force balances to match reserves\r\n    // /// @param to Address to receive any skimmed rewards\r\n    // function skim(address to) external;\r\n\r\n    // /// @notice Force reserves to match balances\r\n    // function sync() external;\r\n\r\n    /// @notice Called on pool creation by PoolFactory\r\n    /// @param _token Address of token\r\n    /// @param _owner Address of owner\r\n    function initialize(address _token, address _owner) external;\r\n}"
			},
			"contracts/interfaces/IValidatorFactory.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\ninterface IValidatorFactory {\r\n    event SetFeeManager(address feeManager);\r\n    event SetPauser(address pauser);\r\n    event SetPauseState(bool state);\r\n    event SetVoter(address voter);\r\n    event SetDepositCustomFee(address indexed validator, uint256 fee);\r\n    event SetClaimCustomFee(address indexed validator, uint256 fee);\r\n    event ValidatorCreated(address indexed token, address indexed owner, address validator, uint256 validatorLength);\r\n\r\n    error FeeTooHigh();\r\n    error InvalidValidator();\r\n    error NotFeeManager();\r\n    error NotPauser();\r\n    error NotVoter();\r\n    error PoolAlreadyExists();\r\n    error ZeroFee();\r\n    error ZeroAddress();\r\n\r\n    /// @notice returns the number of validators created from this factory\r\n    function allValidatorsLength() external view returns (uint256);\r\n\r\n    /// @notice Return address of validator created by this factory\r\n    /// @param token .\r\n    /// @param owner .\r\n    function getValidator(address token, address owner) external view returns (address);\r\n\r\n    /// @notice Is a valid validator created by this factory.\r\n    /// @param validator.\r\n    function isValidatorl(address validator) external view returns (bool);\r\n\r\n    /// @dev Only called once to set to Voter.sol - Voter does not have a function\r\n    ///      to call this contract method, so once set it's immutable.\r\n    ///      This also follows convention of setVoterAndDistributor() in VotingEscrow.sol\r\n    /// @param _voter .\r\n    function setVoter(address _voter) external;\r\n\r\n    function setPauser(address _pauser) external;\r\n\r\n    function setPauseState(bool _state) external;\r\n\r\n    function setFeeManager(address _feeManager) external;\r\n\r\n    /// @notice Set default fee for stable and volatile pools.\r\n    /// @dev Throws if higher than maximum fee.\r\n    ///      Throws if fee is zero.\r\n    /// @param _type Stable or volatile pool.\r\n    /// @param _fee .\r\n    function setFee(bool _type, uint256 _fee) external;\r\n\r\n    /// @notice Set overriding fee for a validator from the default\r\n    /// @dev A custom fee of zero means the default fee will be used.\r\n    function setDepositCustomFee(address _validator, uint256 _fee) external;\r\n\r\n    /// @notice Set overriding fee for a validator from the default\r\n    /// @dev A custom fee of zero means the default fee will be used.\r\n    function setClaimCustomFee(address _validator, uint256 _fee) external;\r\n\r\n    /// @notice Create a validator given token and owner\r\n    /// @dev token order does not matter\r\n    /// @param token .\r\n    /// @param owner .\r\n    function createValidator(address token, address owner) external returns (address validator);\r\n\r\n    function isPaused() external view returns (bool);\r\n\r\n    function voter() external view returns (address);\r\n\r\n    function implementation() external view returns (address);\r\n}"
			},
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/Clones.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"../utils/Errors.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n */\nlibrary Clones {\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        return clone(implementation, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n     * to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function clone(address implementation, uint256 value) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        assembly (\"memory-safe\") {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create(value, 0x09, 0x37)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        return cloneDeterministic(implementation, salt, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n     * a `value` parameter to send native currency to the new contract.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneDeterministic(\n        address implementation,\n        bytes32 salt,\n        uint256 value\n    ) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        assembly (\"memory-safe\") {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create2(value, 0x09, 0x37, salt)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(add(ptr, 0x38), deployer)\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\n            mstore(add(ptr, 0x14), implementation)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n            mstore(add(ptr, 0x58), salt)\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\n            predicted := and(keccak256(add(ptr, 0x43), 0x55), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"Clones": {
					"abi": [],
					"devdoc": {
						"details": "https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for deploying minimal proxy contracts, also known as \"clones\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/Clones.sol\":771:5509  library Clones {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":771:5509  library Clones {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220cdaa60501a91fcaa0cf4e62cec4719fdc64efe68c2f6314775468e37556c27a164736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220cdaa60501a91fcaa0cf4e62cec4719fdc64efe68c2f6314775468e37556c27a164736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xAA PUSH1 0x50 BYTE SWAP2 0xFC 0xAA 0xC DELEGATECALL 0xE6 0x2C 0xEC SELFBALANCE NOT REVERT 0xC6 0x4E INVALID PUSH9 0xC2F6314775468E3755 PUSH13 0x27A164736F6C634300081C0033 ",
							"sourceMap": "771:4738:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220cdaa60501a91fcaa0cf4e62cec4719fdc64efe68c2f6314775468e37556c27a164736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xAA PUSH1 0x50 BYTE SWAP2 0xFC 0xAA 0xC DELEGATECALL 0xE6 0x2C 0xEC SELFBALANCE NOT REVERT 0xC6 0x4E INVALID PUSH9 0xC2F6314775468E3755 PUSH13 0x27A164736F6C634300081C0033 ",
							"sourceMap": "771:4738:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"clone(address)": "infinite",
								"clone(address,uint256)": "infinite",
								"cloneDeterministic(address,bytes32)": "infinite",
								"cloneDeterministic(address,bytes32,uint256)": "infinite",
								"predictDeterministicAddress(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 771,
									"end": 5509,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cdaa60501a91fcaa0cf4e62cec4719fdc64efe68c2f6314775468e37556c27a164736f6c634300081c0033",
									".code": [
										{
											"begin": 771,
											"end": 5509,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 771,
											"end": 5509,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 771,
											"end": 5509,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 771,
											"end": 5509,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 771,
											"end": 5509,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 771,
											"end": 5509,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 771,
											"end": 5509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 771,
											"end": 5509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 771,
											"end": 5509,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"contracts/ValidatorFactory.sol",
								"contracts/interfaces/IValidator.sol",
								"contracts/interfaces/IValidatorFactory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0xf55d01dac75cffdabec6833a79bf3be0c108fc0db10e273daf7adfd3e9e59dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://540002a50a2a1a2b9dafffb976178e55adbf8d3a28db462c69f996921479c6b0\",\"dweb:/ipfs/QmQNAFyMf2FW3U1giM4Yej3zzd1pnxMtAA5GoADj4hTYYD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122051c8d09239a59b6d8127daf01c7a4b484e4331e323787050cc36808ef7dba49564736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122051c8d09239a59b6d8127daf01c7a4b484e4331e323787050cc36808ef7dba49564736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xC8 0xD0 SWAP3 CODECOPY 0xA5 SWAP12 PUSH14 0x8127DAF01C7A4B484E4331E32378 PUSH17 0x50CC36808EF7DBA49564736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "411:484:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122051c8d09239a59b6d8127daf01c7a4b484e4331e323787050cc36808ef7dba49564736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xC8 0xD0 SWAP3 CODECOPY 0xA5 SWAP12 PUSH14 0x8127DAF01C7A4B484E4331E32378 PUSH17 0x50CC36808EF7DBA49564736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "411:484:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122051c8d09239a59b6d8127daf01c7a4b484e4331e323787050cc36808ef7dba49564736f6c634300081c0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"contracts/ValidatorFactory.sol",
								"contracts/interfaces/IValidator.sol",
								"contracts/interfaces/IValidatorFactory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ValidatorFactory.sol": {
				"ValidatorFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FeeTooHigh",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidValidator",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotFeeManager",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotPauser",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotVoter",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PoolAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroFee",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "validator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "SetClaimCustomFee",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "validator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "SetDepositCustomFee",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "feeManager",
									"type": "address"
								}
							],
							"name": "SetFeeManager",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "state",
									"type": "bool"
								}
							],
							"name": "SetPauseState",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "pauser",
									"type": "address"
								}
							],
							"name": "SetPauser",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "voter",
									"type": "address"
								}
							],
							"name": "SetVoter",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "validator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "validatorLength",
									"type": "uint256"
								}
							],
							"name": "ValidatorCreated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MAX_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allValidators",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allValidatorsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "createValidator",
							"outputs": [
								{
									"internalType": "address",
									"name": "validator",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "customClaimFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "customDepositFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "getValidator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPaused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "isValidatorl",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pauser",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "validator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "setClaimCustomFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "validator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "setDepositCustomFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_type",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								}
							],
							"name": "setFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_feeManager",
									"type": "address"
								}
							],
							"name": "setFeeManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_state",
									"type": "bool"
								}
							],
							"name": "setPauseState",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_pauser",
									"type": "address"
								}
							],
							"name": "setPauser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_voter",
									"type": "address"
								}
							],
							"name": "setVoter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "voter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"createValidator(address,address)": {
								"details": "token order does not matter",
								"params": {
									"owner": ".",
									"token": "."
								}
							},
							"getValidator(address,address)": {
								"params": {
									"owner": ".",
									"token": "."
								}
							},
							"isValidatorl(address)": {
								"params": {
									"validator": "."
								}
							},
							"setClaimCustomFee(address,uint256)": {
								"details": "A custom fee of zero means the default fee will be used."
							},
							"setDepositCustomFee(address,uint256)": {
								"details": "A custom fee of zero means the default fee will be used."
							},
							"setFee(bool,uint256)": {
								"details": "Throws if higher than maximum fee.      Throws if fee is zero.",
								"params": {
									"_fee": ".",
									"_type": "Stable or volatile pool."
								}
							},
							"setVoter(address)": {
								"details": "Only called once to set to Voter.sol - Voter does not have a function      to call this contract method, so once set it's immutable.      This also follows convention of setVoterAndDistributor() in VotingEscrow.sol",
								"params": {
									"_voter": "."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ValidatorFactory.sol\":202:4625  contract  ValidatorFactory is IValidatorFactory {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/ValidatorFactory.sol\":833:1107  constructor(address _implementation) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ValidatorFactory.sol\":898:913  _implementation */\n  dup1\n    /* \"contracts/ValidatorFactory.sol\":881:913  implementation = _implementation */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/ValidatorFactory.sol\":932:942  msg.sender */\n  caller\n    /* \"contracts/ValidatorFactory.sol\":924:929  voter */\n  0x04\n  0x00\n    /* \"contracts/ValidatorFactory.sol\":924:942  voter = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ValidatorFactory.sol\":962:972  msg.sender */\n  caller\n    /* \"contracts/ValidatorFactory.sol\":953:959  pauser */\n  0x00\n  0x01\n    /* \"contracts/ValidatorFactory.sol\":953:972  pauser = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ValidatorFactory.sol\":996:1006  msg.sender */\n  caller\n    /* \"contracts/ValidatorFactory.sol\":983:993  feeManager */\n  0x03\n  0x00\n    /* \"contracts/ValidatorFactory.sol\":983:1006  feeManager = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ValidatorFactory.sol\":1028:1033  false */\n  0x00\n    /* \"contracts/ValidatorFactory.sol\":1017:1025  isPaused */\n  0x00\n  0x00\n    /* \"contracts/ValidatorFactory.sol\":1017:1033  isPaused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ValidatorFactory.sol\":1057:1058  5 */\n  0x05\n    /* \"contracts/ValidatorFactory.sol\":1044:1054  depositFee */\n  0x01\n    /* \"contracts/ValidatorFactory.sol\":1044:1058  depositFee = 5 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ValidatorFactory.sol\":1089:1091  30 */\n  0x1e\n    /* \"contracts/ValidatorFactory.sol\":1078:1086  claimFee */\n  0x02\n    /* \"contracts/ValidatorFactory.sol\":1078:1091  claimFee = 30 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ValidatorFactory.sol\":833:1107  constructor(address _implementation) {... */\n  pop\n    /* \"contracts/ValidatorFactory.sol\":202:4625  contract  ValidatorFactory is IValidatorFactory {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ValidatorFactory.sol\":202:4625  contract  ValidatorFactory is IValidatorFactory {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x1a65db4f2ea95c4a38ef67ec9eb02656311df27569f1d2e5f15fb9ffe8498721\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/ValidatorFactory.sol\":202:4625  contract  ValidatorFactory is IValidatorFactory {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x99d32fc4\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xbcecf81b\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xbcecf81b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xcd1a0dd2\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xcdb88ad1\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd0fb0203\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xe1f76b44\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf64ee765\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x99d32fc4\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9fd0506d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa74adceb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb187bd26\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xbc063e1a\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x472d35b9\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x472d35b9\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4bc2a657\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5c60da1b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x67a52793\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x830e4eef\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x984fa01f\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x28a6b3ff\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2c3de946\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2d88af4a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x38ed1793\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x46c96aac\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/ValidatorFactory.sol\":711:762  mapping(address => uint256) public customDepositFee */\n    tag_3:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ValidatorFactory.sol\":2924:3358  function setDepositCustomFee(address validator, uint256 fee) external {... */\n    tag_4:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"contracts/ValidatorFactory.sol\":1820:2047  function setPauser(address _pauser) external {... */\n    tag_5:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      stop\n        /* \"contracts/ValidatorFactory.sol\":1495:1604  function isValidatorl(address pool) external view returns (bool) {... */\n    tag_6:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ValidatorFactory.sol\":512:532  address public voter */\n    tag_7:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ValidatorFactory.sol\":2236:2499  function setFeeManager(address _feeManager) external {... */\n    tag_8:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/ValidatorFactory.sol\":1651:1812  function setVoter(address _voter) external {... */\n    tag_9:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/ValidatorFactory.sol\":257:296  address public immutable implementation */\n    tag_10:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ValidatorFactory.sol\":366:391  uint256 public depositFee */\n    tag_11:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ValidatorFactory.sol\":3880:4622  function createValidator(address _token, address _owner) public returns (address validator) {... */\n    tag_12:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ValidatorFactory.sol\":3405:3833  function setClaimCustomFee(address validator, uint256 fee) external {... */\n    tag_13:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      stop\n        /* \"contracts/ValidatorFactory.sol\":398:421  uint256 public claimFee */\n    tag_14:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ValidatorFactory.sol\":332:353  address public pauser */\n    tag_15:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ValidatorFactory.sol\":769:818  mapping(address => uint256) public customClaimFee */\n    tag_16:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ValidatorFactory.sol\":305:325  bool public isPaused */\n    tag_17:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ValidatorFactory.sol\":428:465  uint256 public constant MAX_FEE = 300 */\n    tag_18:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ValidatorFactory.sol\":622:652  address[] public allValidators */\n    tag_19:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      tag_89\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ValidatorFactory.sol\":1310:1448  function getValidator(address token, address owner) external view returns (address) {... */\n    tag_20:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ValidatorFactory.sol\":2055:2228  function setPauseState(bool _state) external {... */\n    tag_21:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n    tag_95:\n      stop\n        /* \"contracts/ValidatorFactory.sol\":480:505  address public feeManager */\n    tag_22:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ValidatorFactory.sol\":2550:2877  function setFee(bool _type, uint256 _fee) external {... */\n    tag_23:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      tag_105\n      jump\t// in\n    tag_102:\n      stop\n        /* \"contracts/ValidatorFactory.sol\":1154:1263  function allValidatorsLength() external view returns (uint256) {... */\n    tag_24:\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ValidatorFactory.sol\":711:762  mapping(address => uint256) public customDepositFee */\n    tag_31:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/ValidatorFactory.sol\":2924:3358  function setDepositCustomFee(address validator, uint256 fee) external {... */\n    tag_37:\n        /* \"contracts/ValidatorFactory.sol\":3023:3033  feeManager */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ValidatorFactory.sol\":3009:3033  msg.sender != feeManager */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ValidatorFactory.sol\":3009:3019  msg.sender */\n      caller\n        /* \"contracts/ValidatorFactory.sol\":3009:3033  msg.sender != feeManager */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ValidatorFactory.sol\":3005:3057  if (msg.sender != feeManager) revert NotFeeManager() */\n      tag_110\n      jumpi\n        /* \"contracts/ValidatorFactory.sol\":3042:3057  NotFeeManager() */\n      mload(0x40)\n      0xf5d267eb00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ValidatorFactory.sol\":3005:3057  if (msg.sender != feeManager) revert NotFeeManager() */\n    tag_110:\n        /* \"contracts/ValidatorFactory.sol\":462:465  300 */\n      0x012c\n        /* \"contracts/ValidatorFactory.sol\":3153:3156  fee */\n      dup2\n        /* \"contracts/ValidatorFactory.sol\":3153:3166  fee > MAX_FEE */\n      gt\n        /* \"contracts/ValidatorFactory.sol\":3149:3187  if (fee > MAX_FEE) revert FeeTooHigh() */\n      iszero\n      tag_111\n      jumpi\n        /* \"contracts/ValidatorFactory.sol\":3175:3187  FeeTooHigh() */\n      mload(0x40)\n      0xcd4e616700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ValidatorFactory.sol\":3149:3187  if (fee > MAX_FEE) revert FeeTooHigh() */\n    tag_111:\n        /* \"contracts/ValidatorFactory.sol\":3203:3215  _isValidator */\n      0x07\n        /* \"contracts/ValidatorFactory.sol\":3203:3226  _isValidator[validator] */\n      0x00\n        /* \"contracts/ValidatorFactory.sol\":3216:3225  validator */\n      dup4\n        /* \"contracts/ValidatorFactory.sol\":3203:3226  _isValidator[validator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ValidatorFactory.sol\":3198:3253  if (!_isValidator[validator]) revert InvalidValidator() */\n      tag_112\n      jumpi\n        /* \"contracts/ValidatorFactory.sol\":3235:3253  InvalidValidator() */\n      mload(0x40)\n      0x682a6e7c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ValidatorFactory.sol\":3198:3253  if (!_isValidator[validator]) revert InvalidValidator() */\n    tag_112:\n        /* \"contracts/ValidatorFactory.sol\":3296:3299  fee */\n      dup1\n        /* \"contracts/ValidatorFactory.sol\":3266:3282  customDepositFee */\n      0x08\n        /* \"contracts/ValidatorFactory.sol\":3266:3293  customDepositFee[validator] */\n      0x00\n        /* \"contracts/ValidatorFactory.sol\":3283:3292  validator */\n      dup5\n        /* \"contracts/ValidatorFactory.sol\":3266:3293  customDepositFee[validator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ValidatorFactory.sol\":3266:3299  customDepositFee[validator] = fee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ValidatorFactory.sol\":3335:3344  validator */\n      dup2\n        /* \"contracts/ValidatorFactory.sol\":3315:3350  SetDepositCustomFee(validator, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xce78db41faad8d3a613429389971e6dc25f809f59a4e8467ea2b71c71203ec08\n        /* \"contracts/ValidatorFactory.sol\":3346:3349  fee */\n      dup3\n        /* \"contracts/ValidatorFactory.sol\":3315:3350  SetDepositCustomFee(validator, fee) */\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ValidatorFactory.sol\":2924:3358  function setDepositCustomFee(address validator, uint256 fee) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ValidatorFactory.sol\":1820:2047  function setPauser(address _pauser) external {... */\n    tag_40:\n        /* \"contracts/ValidatorFactory.sol\":1894:1900  pauser */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ValidatorFactory.sol\":1880:1900  msg.sender != pauser */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ValidatorFactory.sol\":1880:1890  msg.sender */\n      caller\n        /* \"contracts/ValidatorFactory.sol\":1880:1900  msg.sender != pauser */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ValidatorFactory.sol\":1876:1920  if (msg.sender != pauser) revert NotPauser() */\n      tag_115\n      jumpi\n        /* \"contracts/ValidatorFactory.sol\":1909:1920  NotPauser() */\n      mload(0x40)\n      0x492f678100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ValidatorFactory.sol\":1876:1920  if (msg.sender != pauser) revert NotPauser() */\n    tag_115:\n        /* \"contracts/ValidatorFactory.sol\":1954:1955  0 */\n      0x00\n        /* \"contracts/ValidatorFactory.sol\":1935:1956  _pauser == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ValidatorFactory.sol\":1935:1942  _pauser */\n      dup2\n        /* \"contracts/ValidatorFactory.sol\":1935:1956  _pauser == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ValidatorFactory.sol\":1931:1978  if (_pauser == address(0)) revert ZeroAddress() */\n      tag_116\n      jumpi\n        /* \"contracts/ValidatorFactory.sol\":1965:1978  ZeroAddress() */\n      mload(0x40)\n      0xd92e233d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ValidatorFactory.sol\":1931:1978  if (_pauser == address(0)) revert ZeroAddress() */\n    tag_116:\n        /* \"contracts/ValidatorFactory.sol\":1998:2005  _pauser */\n      dup1\n        /* \"contracts/ValidatorFactory.sol\":1989:1995  pauser */\n      0x00\n      0x01\n        /* \"contracts/ValidatorFactory.sol\":1989:2005  pauser = _pauser */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ValidatorFactory.sol\":2021:2039  SetPauser(_pauser) */\n      0xe02efb9e8f0fc21546730ab32d594f62d586e1bbb15bb5045edd0b1878a77b35\n        /* \"contracts/ValidatorFactory.sol\":2031:2038  _pauser */\n      dup2\n        /* \"contracts/ValidatorFactory.sol\":2021:2039  SetPauser(_pauser) */\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ValidatorFactory.sol\":1820:2047  function setPauser(address _pauser) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/ValidatorFactory.sol\":1495:1604  function isValidatorl(address pool) external view returns (bool) {... */\n    tag_43:\n        /* \"contracts/ValidatorFactory.sol\":1554:1558  bool */\n      0x00\n        /* \"contracts/ValidatorFactory.sol\":1578:1590  _isValidator */\n      0x07\n        /* \"contracts/ValidatorFactory.sol\":1578:1596  _isValidator[pool] */\n      0x00\n        /* \"contracts/ValidatorFactory.sol\":1591:1595  pool */\n      dup4\n        /* \"contracts/ValidatorFactory.sol\":1578:1596  _isValidator[pool] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ValidatorFactory.sol\":1571:1596  return _isValidator[pool] */\n      swap1\n      pop\n        /* \"contracts/ValidatorFactory.sol\":1495:1604  function isValidatorl(address pool) external view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ValidatorFactory.sol\":512:532  address public voter */\n    tag_47:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ValidatorFactory.sol\":2236:2499  function setFeeManager(address _feeManager) external {... */\n    tag_52:\n        /* \"contracts/ValidatorFactory.sol\":2318:2328  feeManager */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ValidatorFactory.sol\":2304:2328  msg.sender != feeManager */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ValidatorFactory.sol\":2304:2314  msg.sender */\n      caller\n        /* \"contracts/ValidatorFactory.sol\":2304:2328  msg.sender != feeManager */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ValidatorFactory.sol\":2300:2352  if (msg.sender != feeManager) revert NotFeeManager() */\n      tag_120\n      jumpi\n        /* \"contracts/ValidatorFactory.sol\":2337:2352  NotFeeManager() */\n      mload(0x40)\n      0xf5d267eb00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ValidatorFactory.sol\":2300:2352  if (msg.sender != feeManager) revert NotFeeManager() */\n    tag_120:\n        /* \"contracts/ValidatorFactory.sol\":2390:2391  0 */\n      0x00\n        /* \"contracts/ValidatorFactory.sol\":2367:2392  _feeManager == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ValidatorFactory.sol\":2367:2378  _feeManager */\n      dup2\n        /* \"contracts/ValidatorFactory.sol\":2367:2392  _feeManager == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ValidatorFactory.sol\":2363:2414  if (_feeManager == address(0)) revert ZeroAddress() */\n      tag_121\n      jumpi\n        /* \"contracts/ValidatorFactory.sol\":2401:2414  ZeroAddress() */\n      mload(0x40)\n      0xd92e233d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ValidatorFactory.sol\":2363:2414  if (_feeManager == address(0)) revert ZeroAddress() */\n    tag_121:\n        /* \"contracts/ValidatorFactory.sol\":2438:2449  _feeManager */\n      dup1\n        /* \"contracts/ValidatorFactory.sol\":2425:2435  feeManager */\n      0x03\n      0x00\n        /* \"contracts/ValidatorFactory.sol\":2425:2449  feeManager = _feeManager */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ValidatorFactory.sol\":2465:2491  SetFeeManager(_feeManager) */\n      0x5d0517e3a4eabea892d9750138cd21d4a6cf3b935b43d0598df7055f463819b2\n        /* \"contracts/ValidatorFactory.sol\":2479:2490  _feeManager */\n      dup2\n        /* \"contracts/ValidatorFactory.sol\":2465:2491  SetFeeManager(_feeManager) */\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ValidatorFactory.sol\":2236:2499  function setFeeManager(address _feeManager) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/ValidatorFactory.sol\":1651:1812  function setVoter(address _voter) external {... */\n    tag_55:\n        /* \"contracts/ValidatorFactory.sol\":1723:1728  voter */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ValidatorFactory.sol\":1709:1728  msg.sender != voter */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ValidatorFactory.sol\":1709:1719  msg.sender */\n      caller\n        /* \"contracts/ValidatorFactory.sol\":1709:1728  msg.sender != voter */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ValidatorFactory.sol\":1705:1747  if (msg.sender != voter) revert NotVoter() */\n      tag_124\n      jumpi\n        /* \"contracts/ValidatorFactory.sol\":1737:1747  NotVoter() */\n      mload(0x40)\n      0xc18384c100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ValidatorFactory.sol\":1705:1747  if (msg.sender != voter) revert NotVoter() */\n    tag_124:\n        /* \"contracts/ValidatorFactory.sol\":1766:1772  _voter */\n      dup1\n        /* \"contracts/ValidatorFactory.sol\":1758:1763  voter */\n      0x04\n      0x00\n        /* \"contracts/ValidatorFactory.sol\":1758:1772  voter = _voter */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ValidatorFactory.sol\":1788:1804  SetVoter(_voter) */\n      0xc6ff127433b785c51da9ae4088ee184c909b1a55b9afd82ae6c64224d3bc15d2\n        /* \"contracts/ValidatorFactory.sol\":1797:1803  _voter */\n      dup2\n        /* \"contracts/ValidatorFactory.sol\":1788:1804  SetVoter(_voter) */\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ValidatorFactory.sol\":1651:1812  function setVoter(address _voter) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/ValidatorFactory.sol\":257:296  address public immutable implementation */\n    tag_57:\n      immutable(\"0x1a65db4f2ea95c4a38ef67ec9eb02656311df27569f1d2e5f15fb9ffe8498721\")\n      dup2\n      jump\t// out\n        /* \"contracts/ValidatorFactory.sol\":366:391  uint256 public depositFee */\n    tag_60:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/ValidatorFactory.sol\":3880:4622  function createValidator(address _token, address _owner) public returns (address validator) {... */\n    tag_65:\n        /* \"contracts/ValidatorFactory.sol\":3953:3970  address validator */\n      0x00\n        /* \"contracts/ValidatorFactory.sol\":4005:4006  0 */\n      0x00\n        /* \"contracts/ValidatorFactory.sol\":3987:4007  _token == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ValidatorFactory.sol\":3987:3993  _token */\n      dup4\n        /* \"contracts/ValidatorFactory.sol\":3987:4007  _token == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ValidatorFactory.sol\":3983:4029  if (_token == address(0)) revert ZeroAddress() */\n      tag_127\n      jumpi\n        /* \"contracts/ValidatorFactory.sol\":4016:4029  ZeroAddress() */\n      mload(0x40)\n      0xd92e233d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ValidatorFactory.sol\":3983:4029  if (_token == address(0)) revert ZeroAddress() */\n    tag_127:\n        /* \"contracts/ValidatorFactory.sol\":4088:4089  0 */\n      0x00\n        /* \"contracts/ValidatorFactory.sol\":4046:4090  _validatorList[_token][_owner] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ValidatorFactory.sol\":4046:4060  _validatorList */\n      0x05\n        /* \"contracts/ValidatorFactory.sol\":4046:4068  _validatorList[_token] */\n      0x00\n        /* \"contracts/ValidatorFactory.sol\":4061:4067  _token */\n      dup6\n        /* \"contracts/ValidatorFactory.sol\":4046:4068  _validatorList[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ValidatorFactory.sol\":4046:4076  _validatorList[_token][_owner] */\n      0x00\n        /* \"contracts/ValidatorFactory.sol\":4069:4075  _owner */\n      dup5\n        /* \"contracts/ValidatorFactory.sol\":4046:4076  _validatorList[_token][_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ValidatorFactory.sol\":4046:4090  _validatorList[_token][_owner] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ValidatorFactory.sol\":4042:4118  if (_validatorList[_token][_owner] != address(0)) revert PoolAlreadyExists() */\n      tag_128\n      jumpi\n        /* \"contracts/ValidatorFactory.sol\":4099:4118  PoolAlreadyExists() */\n      mload(0x40)\n      0x0311932200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ValidatorFactory.sol\":4042:4118  if (_validatorList[_token][_owner] != address(0)) revert PoolAlreadyExists() */\n    tag_128:\n        /* \"contracts/ValidatorFactory.sol\":4131:4143  bytes32 salt */\n      0x00\n        /* \"contracts/ValidatorFactory.sol\":4173:4179  _token */\n      dup4\n        /* \"contracts/ValidatorFactory.sol\":4181:4187  _owner */\n      dup4\n        /* \"contracts/ValidatorFactory.sol\":4156:4188  abi.encodePacked(_token, _owner) */\n      add(0x20, mload(0x40))\n      tag_129\n      swap3\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/ValidatorFactory.sol\":4146:4189  keccak256(abi.encodePacked(_token, _owner)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/ValidatorFactory.sol\":4131:4189  bytes32 salt = keccak256(abi.encodePacked(_token, _owner)) */\n      swap1\n      pop\n        /* \"contracts/ValidatorFactory.sol\":4267:4314  Clones.cloneDeterministic(implementation, salt) */\n      tag_131\n        /* \"contracts/ValidatorFactory.sol\":4293:4307  implementation */\n      immutable(\"0x1a65db4f2ea95c4a38ef67ec9eb02656311df27569f1d2e5f15fb9ffe8498721\")\n        /* \"contracts/ValidatorFactory.sol\":4309:4313  salt */\n      dup3\n        /* \"contracts/ValidatorFactory.sol\":4267:4292  Clones.cloneDeterministic */\n      tag_132\n        /* \"contracts/ValidatorFactory.sol\":4267:4314  Clones.cloneDeterministic(implementation, salt) */\n      jump\t// in\n    tag_131:\n        /* \"contracts/ValidatorFactory.sol\":4255:4314  validator = Clones.cloneDeterministic(implementation, salt) */\n      swap2\n      pop\n        /* \"contracts/ValidatorFactory.sol\":4346:4355  validator */\n      dup2\n        /* \"contracts/ValidatorFactory.sol\":4335:4367  IValidator(validator).initialize */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x485cc955\n        /* \"contracts/ValidatorFactory.sol\":4368:4374  _token */\n      dup6\n        /* \"contracts/ValidatorFactory.sol\":4376:4382  _owner */\n      dup6\n        /* \"contracts/ValidatorFactory.sol\":4335:4383  IValidator(validator).initialize(_token, _owner) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap3\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_135\n      jumpi\n      revert(0x00, 0x00)\n    tag_135:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_137\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_137:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ValidatorFactory.sol\":4437:4446  validator */\n      dup2\n        /* \"contracts/ValidatorFactory.sol\":4404:4418  _validatorList */\n      0x05\n        /* \"contracts/ValidatorFactory.sol\":4404:4426  _validatorList[_token] */\n      0x00\n        /* \"contracts/ValidatorFactory.sol\":4419:4425  _token */\n      dup7\n        /* \"contracts/ValidatorFactory.sol\":4404:4426  _validatorList[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ValidatorFactory.sol\":4404:4434  _validatorList[_token][_owner] */\n      0x00\n        /* \"contracts/ValidatorFactory.sol\":4427:4433  _owner */\n      dup6\n        /* \"contracts/ValidatorFactory.sol\":4404:4434  _validatorList[_token][_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ValidatorFactory.sol\":4404:4446  _validatorList[_token][_owner] = validator */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ValidatorFactory.sol\":4459:4472  allValidators */\n      0x06\n        /* \"contracts/ValidatorFactory.sol\":4478:4487  validator */\n      dup3\n        /* \"contracts/ValidatorFactory.sol\":4459:4488  allValidators.push(validator) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ValidatorFactory.sol\":4527:4531  true */\n      0x01\n        /* \"contracts/ValidatorFactory.sol\":4501:4513  _isValidator */\n      0x07\n        /* \"contracts/ValidatorFactory.sol\":4501:4524  _isValidator[validator] */\n      0x00\n        /* \"contracts/ValidatorFactory.sol\":4514:4523  validator */\n      dup5\n        /* \"contracts/ValidatorFactory.sol\":4501:4524  _isValidator[validator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ValidatorFactory.sol\":4501:4531  _isValidator[validator] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ValidatorFactory.sol\":4574:4580  _owner */\n      dup3\n        /* \"contracts/ValidatorFactory.sol\":4549:4614  ValidatorCreated(_token, _owner, validator, allValidators.length) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ValidatorFactory.sol\":4566:4572  _token */\n      dup5\n        /* \"contracts/ValidatorFactory.sol\":4549:4614  ValidatorCreated(_token, _owner, validator, allValidators.length) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9a07b2753aaebe71b96e78f64ccced2e2b9ff13d98b3c7784285ef0c31631dbf\n        /* \"contracts/ValidatorFactory.sol\":4582:4591  validator */\n      dup5\n        /* \"contracts/ValidatorFactory.sol\":4593:4606  allValidators */\n      0x06\n        /* \"contracts/ValidatorFactory.sol\":4593:4613  allValidators.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/ValidatorFactory.sol\":4549:4614  ValidatorCreated(_token, _owner, validator, allValidators.length) */\n      mload(0x40)\n      tag_139\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ValidatorFactory.sol\":3972:4622  {... */\n      pop\n        /* \"contracts/ValidatorFactory.sol\":3880:4622  function createValidator(address _token, address _owner) public returns (address validator) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ValidatorFactory.sol\":3405:3833  function setClaimCustomFee(address validator, uint256 fee) external {... */\n    tag_69:\n        /* \"contracts/ValidatorFactory.sol\":3502:3512  feeManager */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ValidatorFactory.sol\":3488:3512  msg.sender != feeManager */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ValidatorFactory.sol\":3488:3498  msg.sender */\n      caller\n        /* \"contracts/ValidatorFactory.sol\":3488:3512  msg.sender != feeManager */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ValidatorFactory.sol\":3484:3536  if (msg.sender != feeManager) revert NotFeeManager() */\n      tag_142\n      jumpi\n        /* \"contracts/ValidatorFactory.sol\":3521:3536  NotFeeManager() */\n      mload(0x40)\n      0xf5d267eb00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ValidatorFactory.sol\":3484:3536  if (msg.sender != feeManager) revert NotFeeManager() */\n    tag_142:\n        /* \"contracts/ValidatorFactory.sol\":462:465  300 */\n      0x012c\n        /* \"contracts/ValidatorFactory.sol\":3632:3635  fee */\n      dup2\n        /* \"contracts/ValidatorFactory.sol\":3632:3645  fee > MAX_FEE */\n      gt\n        /* \"contracts/ValidatorFactory.sol\":3628:3666  if (fee > MAX_FEE) revert FeeTooHigh() */\n      iszero\n      tag_143\n      jumpi\n        /* \"contracts/ValidatorFactory.sol\":3654:3666  FeeTooHigh() */\n      mload(0x40)\n      0xcd4e616700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ValidatorFactory.sol\":3628:3666  if (fee > MAX_FEE) revert FeeTooHigh() */\n    tag_143:\n        /* \"contracts/ValidatorFactory.sol\":3682:3694  _isValidator */\n      0x07\n        /* \"contracts/ValidatorFactory.sol\":3682:3705  _isValidator[validator] */\n      0x00\n        /* \"contracts/ValidatorFactory.sol\":3695:3704  validator */\n      dup4\n        /* \"contracts/ValidatorFactory.sol\":3682:3705  _isValidator[validator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/ValidatorFactory.sol\":3677:3732  if (!_isValidator[validator]) revert InvalidValidator() */\n      tag_144\n      jumpi\n        /* \"contracts/ValidatorFactory.sol\":3714:3732  InvalidValidator() */\n      mload(0x40)\n      0x682a6e7c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ValidatorFactory.sol\":3677:3732  if (!_isValidator[validator]) revert InvalidValidator() */\n    tag_144:\n        /* \"contracts/ValidatorFactory.sol\":3773:3776  fee */\n      dup1\n        /* \"contracts/ValidatorFactory.sol\":3745:3759  customClaimFee */\n      0x09\n        /* \"contracts/ValidatorFactory.sol\":3745:3770  customClaimFee[validator] */\n      0x00\n        /* \"contracts/ValidatorFactory.sol\":3760:3769  validator */\n      dup5\n        /* \"contracts/ValidatorFactory.sol\":3745:3770  customClaimFee[validator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ValidatorFactory.sol\":3745:3776  customClaimFee[validator] = fee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ValidatorFactory.sol\":3810:3819  validator */\n      dup2\n        /* \"contracts/ValidatorFactory.sol\":3792:3825  SetClaimCustomFee(validator, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6f6bd3c4b38df451f210a585e872b5a0b6de937fda37f0eb0c7731afb4391985\n        /* \"contracts/ValidatorFactory.sol\":3821:3824  fee */\n      dup3\n        /* \"contracts/ValidatorFactory.sol\":3792:3825  SetClaimCustomFee(validator, fee) */\n      mload(0x40)\n      tag_145\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/ValidatorFactory.sol\":3405:3833  function setClaimCustomFee(address validator, uint256 fee) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ValidatorFactory.sol\":398:421  uint256 public claimFee */\n    tag_71:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/ValidatorFactory.sol\":332:353  address public pauser */\n    tag_74:\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ValidatorFactory.sol\":769:818  mapping(address => uint256) public customClaimFee */\n    tag_78:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/ValidatorFactory.sol\":305:325  bool public isPaused */\n    tag_81:\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ValidatorFactory.sol\":428:465  uint256 public constant MAX_FEE = 300 */\n    tag_84:\n        /* \"contracts/ValidatorFactory.sol\":462:465  300 */\n      0x012c\n        /* \"contracts/ValidatorFactory.sol\":428:465  uint256 public constant MAX_FEE = 300 */\n      dup2\n      jump\t// out\n        /* \"contracts/ValidatorFactory.sol\":622:652  address[] public allValidators */\n    tag_89:\n      0x06\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ValidatorFactory.sol\":1310:1448  function getValidator(address token, address owner) external view returns (address) {... */\n    tag_93:\n        /* \"contracts/ValidatorFactory.sol\":1385:1392  address */\n      0x00\n        /* \"contracts/ValidatorFactory.sol\":1412:1426  _validatorList */\n      0x05\n        /* \"contracts/ValidatorFactory.sol\":1412:1433  _validatorList[token] */\n      0x00\n        /* \"contracts/ValidatorFactory.sol\":1427:1432  token */\n      dup5\n        /* \"contracts/ValidatorFactory.sol\":1412:1433  _validatorList[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ValidatorFactory.sol\":1412:1440  _validatorList[token][owner] */\n      0x00\n        /* \"contracts/ValidatorFactory.sol\":1434:1439  owner */\n      dup4\n        /* \"contracts/ValidatorFactory.sol\":1412:1440  _validatorList[token][owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ValidatorFactory.sol\":1405:1440  return _validatorList[token][owner] */\n      swap1\n      pop\n        /* \"contracts/ValidatorFactory.sol\":1310:1448  function getValidator(address token, address owner) external view returns (address) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ValidatorFactory.sol\":2055:2228  function setPauseState(bool _state) external {... */\n    tag_98:\n        /* \"contracts/ValidatorFactory.sol\":2129:2135  pauser */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ValidatorFactory.sol\":2115:2135  msg.sender != pauser */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ValidatorFactory.sol\":2115:2125  msg.sender */\n      caller\n        /* \"contracts/ValidatorFactory.sol\":2115:2135  msg.sender != pauser */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ValidatorFactory.sol\":2111:2155  if (msg.sender != pauser) revert NotPauser() */\n      tag_150\n      jumpi\n        /* \"contracts/ValidatorFactory.sol\":2144:2155  NotPauser() */\n      mload(0x40)\n      0x492f678100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ValidatorFactory.sol\":2111:2155  if (msg.sender != pauser) revert NotPauser() */\n    tag_150:\n        /* \"contracts/ValidatorFactory.sol\":2177:2183  _state */\n      dup1\n        /* \"contracts/ValidatorFactory.sol\":2166:2174  isPaused */\n      0x00\n      0x00\n        /* \"contracts/ValidatorFactory.sol\":2166:2183  isPaused = _state */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ValidatorFactory.sol\":2199:2220  SetPauseState(_state) */\n      0x0d76538efc408318a051137c2720a9e82902acdbd46b802d488b74ca3a09a116\n        /* \"contracts/ValidatorFactory.sol\":2213:2219  _state */\n      dup2\n        /* \"contracts/ValidatorFactory.sol\":2199:2220  SetPauseState(_state) */\n      mload(0x40)\n      tag_151\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/ValidatorFactory.sol\":2055:2228  function setPauseState(bool _state) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/ValidatorFactory.sol\":480:505  address public feeManager */\n    tag_100:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ValidatorFactory.sol\":2550:2877  function setFee(bool _type, uint256 _fee) external {... */\n    tag_105:\n        /* \"contracts/ValidatorFactory.sol\":2630:2640  feeManager */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ValidatorFactory.sol\":2616:2640  msg.sender != feeManager */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ValidatorFactory.sol\":2616:2626  msg.sender */\n      caller\n        /* \"contracts/ValidatorFactory.sol\":2616:2640  msg.sender != feeManager */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ValidatorFactory.sol\":2612:2664  if (msg.sender != feeManager) revert NotFeeManager() */\n      tag_153\n      jumpi\n        /* \"contracts/ValidatorFactory.sol\":2649:2664  NotFeeManager() */\n      mload(0x40)\n      0xf5d267eb00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ValidatorFactory.sol\":2612:2664  if (msg.sender != feeManager) revert NotFeeManager() */\n    tag_153:\n        /* \"contracts/ValidatorFactory.sol\":462:465  300 */\n      0x012c\n        /* \"contracts/ValidatorFactory.sol\":2679:2683  _fee */\n      dup2\n        /* \"contracts/ValidatorFactory.sol\":2679:2693  _fee > MAX_FEE */\n      gt\n        /* \"contracts/ValidatorFactory.sol\":2675:2714  if (_fee > MAX_FEE) revert FeeTooHigh() */\n      iszero\n      tag_154\n      jumpi\n        /* \"contracts/ValidatorFactory.sol\":2702:2714  FeeTooHigh() */\n      mload(0x40)\n      0xcd4e616700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ValidatorFactory.sol\":2675:2714  if (_fee > MAX_FEE) revert FeeTooHigh() */\n    tag_154:\n        /* \"contracts/ValidatorFactory.sol\":2737:2738  0 */\n      0x00\n        /* \"contracts/ValidatorFactory.sol\":2729:2733  _fee */\n      dup2\n        /* \"contracts/ValidatorFactory.sol\":2729:2738  _fee == 0 */\n      sub\n        /* \"contracts/ValidatorFactory.sol\":2725:2756  if (_fee == 0) revert ZeroFee() */\n      tag_155\n      jumpi\n        /* \"contracts/ValidatorFactory.sol\":2747:2756  ZeroFee() */\n      mload(0x40)\n      0xaf13986d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ValidatorFactory.sol\":2725:2756  if (_fee == 0) revert ZeroFee() */\n    tag_155:\n        /* \"contracts/ValidatorFactory.sol\":2771:2776  _type */\n      dup2\n        /* \"contracts/ValidatorFactory.sol\":2767:2870  if (_type) {... */\n      iszero\n      tag_156\n      jumpi\n        /* \"contracts/ValidatorFactory.sol\":2806:2810  _fee */\n      dup1\n        /* \"contracts/ValidatorFactory.sol\":2793:2803  depositFee */\n      0x01\n        /* \"contracts/ValidatorFactory.sol\":2793:2810  depositFee = _fee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ValidatorFactory.sol\":2767:2870  if (_type) {... */\n      jump(tag_157)\n    tag_156:\n        /* \"contracts/ValidatorFactory.sol\":2854:2858  _fee */\n      dup1\n        /* \"contracts/ValidatorFactory.sol\":2843:2851  claimFee */\n      0x02\n        /* \"contracts/ValidatorFactory.sol\":2843:2858  claimFee = _fee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ValidatorFactory.sol\":2767:2870  if (_type) {... */\n    tag_157:\n        /* \"contracts/ValidatorFactory.sol\":2550:2877  function setFee(bool _type, uint256 _fee) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ValidatorFactory.sol\":1154:1263  function allValidatorsLength() external view returns (uint256) {... */\n    tag_107:\n        /* \"contracts/ValidatorFactory.sol\":1208:1215  uint256 */\n      0x00\n        /* \"contracts/ValidatorFactory.sol\":1235:1248  allValidators */\n      0x06\n        /* \"contracts/ValidatorFactory.sol\":1235:1255  allValidators.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/ValidatorFactory.sol\":1228:1255  return allValidators.length */\n      swap1\n      pop\n        /* \"contracts/ValidatorFactory.sol\":1154:1263  function allValidatorsLength() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2789:2958  function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2873:2889  address instance */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2908:2951  cloneDeterministic(implementation, salt, 0) */\n      tag_160\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2927:2941  implementation */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2943:2947  salt */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2949:2950  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2908:2926  cloneDeterministic */\n      tag_161\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2908:2951  cloneDeterministic(implementation, salt, 0) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2901:2951  return cloneDeterministic(implementation, salt, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2789:2958  function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3384:4358  function cloneDeterministic(... */\n    tag_161:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3513:3529  address instance */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3569:3574  value */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3545:3566  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3545:3574  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3541:3664  if (address(this).balance < value) {... */\n      iszero\n      tag_163\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3624:3645  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3647:3652  value */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3597:3653  Errors.InsufficientBalance(address(this).balance, value) */\n      mload(0x40)\n      0xcf47918100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap3\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3541:3664  if (address(this).balance < value) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3950:3998  0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000 */\n      0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3932:3946  implementation */\n      dup5\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3926:3930  0x60 */\n      0x60\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3922:3947  shl(0x60, implementation) */\n      shl\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3916:3920  0xe8 */\n      0xe8\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3912:3948  shr(0xe8, shl(0x60, implementation)) */\n      shr\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3909:3999  or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000) */\n      or\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3903:3907  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3896:4000  mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000)) */\n      mstore\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4157:4189  0x5af43d82803e903d91602b57fd5bf3 */\n      0x5af43d82803e903d91602b57fd5bf3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4140:4154  implementation */\n      dup5\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4134:4138  0x78 */\n      0x78\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4130:4155  shl(0x78, implementation) */\n      shl\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4127:4190  or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3) */\n      or\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4121:4125  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4114:4191  mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3)) */\n      mstore\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4243:4247  salt */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4237:4241  0x37 */\n      0x37\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4231:4235  0x09 */\n      0x09\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4224:4229  value */\n      dup5\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4216:4248  create2(value, 0x09, 0x37, salt) */\n      create2\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4204:4248  instance := create2(value, 0x09, 0x37, salt) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4291:4292  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4271:4293  instance == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4271:4279  instance */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4271:4293  instance == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4267:4352  if (instance == address(0)) {... */\n      tag_166\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4316:4341  Errors.FailedDeployment() */\n      mload(0x40)\n      0xb06ebf3d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":4267:4352  if (instance == address(0)) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":3384:4358  function cloneDeterministic(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_168:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_170:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_171:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_193\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_170\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_172:\n        /* \"#utility.yul\":641:665   */\n      tag_195\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_171\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_196\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_196:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_173:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_198\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_172\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_30:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_201\n      tag_168\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":917:1036   */\n    tag_200:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_202\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_173\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_174:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_175:\n        /* \"#utility.yul\":1346:1370   */\n      tag_205\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_174\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_33:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_207\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_175\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_176:\n        /* \"#utility.yul\":1684:1708   */\n      tag_209\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_174\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_210\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      0x00\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_210:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_177:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_212\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_176\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2358   */\n    tag_36:\n        /* \"#utility.yul\":1952:1958   */\n      0x00\n        /* \"#utility.yul\":1960:1966   */\n      0x00\n        /* \"#utility.yul\":2009:2011   */\n      0x40\n        /* \"#utility.yul\":1997:2006   */\n      dup4\n        /* \"#utility.yul\":1988:1995   */\n      dup6\n        /* \"#utility.yul\":1984:2007   */\n      sub\n        /* \"#utility.yul\":1980:2012   */\n      slt\n        /* \"#utility.yul\":1977:2096   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":2015:2094   */\n      tag_215\n      tag_168\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":1977:2096   */\n    tag_214:\n        /* \"#utility.yul\":2135:2136   */\n      0x00\n        /* \"#utility.yul\":2160:2213   */\n      tag_216\n        /* \"#utility.yul\":2205:2212   */\n      dup6\n        /* \"#utility.yul\":2196:2202   */\n      dup3\n        /* \"#utility.yul\":2185:2194   */\n      dup7\n        /* \"#utility.yul\":2181:2203   */\n      add\n        /* \"#utility.yul\":2160:2213   */\n      tag_173\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":2150:2213   */\n      swap3\n      pop\n        /* \"#utility.yul\":2106:2223   */\n      pop\n        /* \"#utility.yul\":2262:2264   */\n      0x20\n        /* \"#utility.yul\":2288:2341   */\n      tag_217\n        /* \"#utility.yul\":2333:2340   */\n      dup6\n        /* \"#utility.yul\":2324:2330   */\n      dup3\n        /* \"#utility.yul\":2313:2322   */\n      dup7\n        /* \"#utility.yul\":2309:2331   */\n      add\n        /* \"#utility.yul\":2288:2341   */\n      tag_177\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":2278:2341   */\n      swap2\n      pop\n        /* \"#utility.yul\":2233:2351   */\n      pop\n        /* \"#utility.yul\":1884:2358   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2454   */\n    tag_178:\n        /* \"#utility.yul\":2398:2405   */\n      0x00\n        /* \"#utility.yul\":2441:2446   */\n      dup2\n        /* \"#utility.yul\":2434:2447   */\n      iszero\n        /* \"#utility.yul\":2427:2448   */\n      iszero\n        /* \"#utility.yul\":2416:2448   */\n      swap1\n      pop\n        /* \"#utility.yul\":2364:2454   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2460:2569   */\n    tag_179:\n        /* \"#utility.yul\":2541:2562   */\n      tag_220\n        /* \"#utility.yul\":2556:2561   */\n      dup2\n        /* \"#utility.yul\":2541:2562   */\n      tag_178\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":2536:2539   */\n      dup3\n        /* \"#utility.yul\":2529:2563   */\n      mstore\n        /* \"#utility.yul\":2460:2569   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2575:2785   */\n    tag_45:\n        /* \"#utility.yul\":2662:2666   */\n      0x00\n        /* \"#utility.yul\":2700:2702   */\n      0x20\n        /* \"#utility.yul\":2689:2698   */\n      dup3\n        /* \"#utility.yul\":2685:2703   */\n      add\n        /* \"#utility.yul\":2677:2703   */\n      swap1\n      pop\n        /* \"#utility.yul\":2713:2778   */\n      tag_222\n        /* \"#utility.yul\":2775:2776   */\n      0x00\n        /* \"#utility.yul\":2764:2773   */\n      dup4\n        /* \"#utility.yul\":2760:2777   */\n      add\n        /* \"#utility.yul\":2751:2757   */\n      dup5\n        /* \"#utility.yul\":2713:2778   */\n      tag_179\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":2575:2785   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2791:2909   */\n    tag_180:\n        /* \"#utility.yul\":2878:2902   */\n      tag_224\n        /* \"#utility.yul\":2896:2901   */\n      dup2\n        /* \"#utility.yul\":2878:2902   */\n      tag_171\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":2873:2876   */\n      dup3\n        /* \"#utility.yul\":2866:2903   */\n      mstore\n        /* \"#utility.yul\":2791:2909   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2915:3137   */\n    tag_49:\n        /* \"#utility.yul\":3008:3012   */\n      0x00\n        /* \"#utility.yul\":3046:3048   */\n      0x20\n        /* \"#utility.yul\":3035:3044   */\n      dup3\n        /* \"#utility.yul\":3031:3049   */\n      add\n        /* \"#utility.yul\":3023:3049   */\n      swap1\n      pop\n        /* \"#utility.yul\":3059:3130   */\n      tag_226\n        /* \"#utility.yul\":3127:3128   */\n      0x00\n        /* \"#utility.yul\":3116:3125   */\n      dup4\n        /* \"#utility.yul\":3112:3129   */\n      add\n        /* \"#utility.yul\":3103:3109   */\n      dup5\n        /* \"#utility.yul\":3059:3130   */\n      tag_180\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":2915:3137   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3143:3617   */\n    tag_64:\n        /* \"#utility.yul\":3211:3217   */\n      0x00\n        /* \"#utility.yul\":3219:3225   */\n      0x00\n        /* \"#utility.yul\":3268:3270   */\n      0x40\n        /* \"#utility.yul\":3256:3265   */\n      dup4\n        /* \"#utility.yul\":3247:3254   */\n      dup6\n        /* \"#utility.yul\":3243:3266   */\n      sub\n        /* \"#utility.yul\":3239:3271   */\n      slt\n        /* \"#utility.yul\":3236:3355   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":3274:3353   */\n      tag_229\n      tag_168\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":3236:3355   */\n    tag_228:\n        /* \"#utility.yul\":3394:3395   */\n      0x00\n        /* \"#utility.yul\":3419:3472   */\n      tag_230\n        /* \"#utility.yul\":3464:3471   */\n      dup6\n        /* \"#utility.yul\":3455:3461   */\n      dup3\n        /* \"#utility.yul\":3444:3453   */\n      dup7\n        /* \"#utility.yul\":3440:3462   */\n      add\n        /* \"#utility.yul\":3419:3472   */\n      tag_173\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":3409:3472   */\n      swap3\n      pop\n        /* \"#utility.yul\":3365:3482   */\n      pop\n        /* \"#utility.yul\":3521:3523   */\n      0x20\n        /* \"#utility.yul\":3547:3600   */\n      tag_231\n        /* \"#utility.yul\":3592:3599   */\n      dup6\n        /* \"#utility.yul\":3583:3589   */\n      dup3\n        /* \"#utility.yul\":3572:3581   */\n      dup7\n        /* \"#utility.yul\":3568:3590   */\n      add\n        /* \"#utility.yul\":3547:3600   */\n      tag_173\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":3537:3600   */\n      swap2\n      pop\n        /* \"#utility.yul\":3492:3610   */\n      pop\n        /* \"#utility.yul\":3143:3617   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3623:3952   */\n    tag_88:\n        /* \"#utility.yul\":3682:3688   */\n      0x00\n        /* \"#utility.yul\":3731:3733   */\n      0x20\n        /* \"#utility.yul\":3719:3728   */\n      dup3\n        /* \"#utility.yul\":3710:3717   */\n      dup5\n        /* \"#utility.yul\":3706:3729   */\n      sub\n        /* \"#utility.yul\":3702:3734   */\n      slt\n        /* \"#utility.yul\":3699:3818   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":3737:3816   */\n      tag_234\n      tag_168\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":3699:3818   */\n    tag_233:\n        /* \"#utility.yul\":3857:3858   */\n      0x00\n        /* \"#utility.yul\":3882:3935   */\n      tag_235\n        /* \"#utility.yul\":3927:3934   */\n      dup5\n        /* \"#utility.yul\":3918:3924   */\n      dup3\n        /* \"#utility.yul\":3907:3916   */\n      dup6\n        /* \"#utility.yul\":3903:3925   */\n      add\n        /* \"#utility.yul\":3882:3935   */\n      tag_177\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":3872:3935   */\n      swap2\n      pop\n        /* \"#utility.yul\":3828:3945   */\n      pop\n        /* \"#utility.yul\":3623:3952   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3958:4074   */\n    tag_181:\n        /* \"#utility.yul\":4028:4049   */\n      tag_237\n        /* \"#utility.yul\":4043:4048   */\n      dup2\n        /* \"#utility.yul\":4028:4049   */\n      tag_178\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":4021:4026   */\n      dup2\n        /* \"#utility.yul\":4018:4050   */\n      eq\n        /* \"#utility.yul\":4008:4068   */\n      tag_238\n      jumpi\n        /* \"#utility.yul\":4064:4065   */\n      0x00\n        /* \"#utility.yul\":4061:4062   */\n      0x00\n        /* \"#utility.yul\":4054:4066   */\n      revert\n        /* \"#utility.yul\":4008:4068   */\n    tag_238:\n        /* \"#utility.yul\":3958:4074   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4080:4213   */\n    tag_182:\n        /* \"#utility.yul\":4123:4128   */\n      0x00\n        /* \"#utility.yul\":4161:4167   */\n      dup2\n        /* \"#utility.yul\":4148:4168   */\n      calldataload\n        /* \"#utility.yul\":4139:4168   */\n      swap1\n      pop\n        /* \"#utility.yul\":4177:4207   */\n      tag_240\n        /* \"#utility.yul\":4201:4206   */\n      dup2\n        /* \"#utility.yul\":4177:4207   */\n      tag_181\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":4080:4213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4219:4542   */\n    tag_97:\n        /* \"#utility.yul\":4275:4281   */\n      0x00\n        /* \"#utility.yul\":4324:4326   */\n      0x20\n        /* \"#utility.yul\":4312:4321   */\n      dup3\n        /* \"#utility.yul\":4303:4310   */\n      dup5\n        /* \"#utility.yul\":4299:4322   */\n      sub\n        /* \"#utility.yul\":4295:4327   */\n      slt\n        /* \"#utility.yul\":4292:4411   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":4330:4409   */\n      tag_243\n      tag_168\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":4292:4411   */\n    tag_242:\n        /* \"#utility.yul\":4450:4451   */\n      0x00\n        /* \"#utility.yul\":4475:4525   */\n      tag_244\n        /* \"#utility.yul\":4517:4524   */\n      dup5\n        /* \"#utility.yul\":4508:4514   */\n      dup3\n        /* \"#utility.yul\":4497:4506   */\n      dup6\n        /* \"#utility.yul\":4493:4515   */\n      add\n        /* \"#utility.yul\":4475:4525   */\n      tag_182\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":4465:4525   */\n      swap2\n      pop\n        /* \"#utility.yul\":4421:4535   */\n      pop\n        /* \"#utility.yul\":4219:4542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4548:5016   */\n    tag_104:\n        /* \"#utility.yul\":4613:4619   */\n      0x00\n        /* \"#utility.yul\":4621:4627   */\n      0x00\n        /* \"#utility.yul\":4670:4672   */\n      0x40\n        /* \"#utility.yul\":4658:4667   */\n      dup4\n        /* \"#utility.yul\":4649:4656   */\n      dup6\n        /* \"#utility.yul\":4645:4668   */\n      sub\n        /* \"#utility.yul\":4641:4673   */\n      slt\n        /* \"#utility.yul\":4638:4757   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":4676:4755   */\n      tag_247\n      tag_168\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":4638:4757   */\n    tag_246:\n        /* \"#utility.yul\":4796:4797   */\n      0x00\n        /* \"#utility.yul\":4821:4871   */\n      tag_248\n        /* \"#utility.yul\":4863:4870   */\n      dup6\n        /* \"#utility.yul\":4854:4860   */\n      dup3\n        /* \"#utility.yul\":4843:4852   */\n      dup7\n        /* \"#utility.yul\":4839:4861   */\n      add\n        /* \"#utility.yul\":4821:4871   */\n      tag_182\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":4811:4871   */\n      swap3\n      pop\n        /* \"#utility.yul\":4767:4881   */\n      pop\n        /* \"#utility.yul\":4920:4922   */\n      0x20\n        /* \"#utility.yul\":4946:4999   */\n      tag_249\n        /* \"#utility.yul\":4991:4998   */\n      dup6\n        /* \"#utility.yul\":4982:4988   */\n      dup3\n        /* \"#utility.yul\":4971:4980   */\n      dup7\n        /* \"#utility.yul\":4967:4989   */\n      add\n        /* \"#utility.yul\":4946:4999   */\n      tag_177\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":4936:4999   */\n      swap2\n      pop\n        /* \"#utility.yul\":4891:5009   */\n      pop\n        /* \"#utility.yul\":4548:5016   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5022:5116   */\n    tag_183:\n        /* \"#utility.yul\":5055:5063   */\n      0x00\n        /* \"#utility.yul\":5103:5108   */\n      dup2\n        /* \"#utility.yul\":5099:5101   */\n      0x60\n        /* \"#utility.yul\":5095:5109   */\n      shl\n        /* \"#utility.yul\":5074:5109   */\n      swap1\n      pop\n        /* \"#utility.yul\":5022:5116   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5122:5216   */\n    tag_184:\n        /* \"#utility.yul\":5161:5168   */\n      0x00\n        /* \"#utility.yul\":5190:5210   */\n      tag_252\n        /* \"#utility.yul\":5204:5209   */\n      dup3\n        /* \"#utility.yul\":5190:5210   */\n      tag_183\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":5179:5210   */\n      swap1\n      pop\n        /* \"#utility.yul\":5122:5216   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5222:5322   */\n    tag_185:\n        /* \"#utility.yul\":5261:5268   */\n      0x00\n        /* \"#utility.yul\":5290:5316   */\n      tag_254\n        /* \"#utility.yul\":5310:5315   */\n      dup3\n        /* \"#utility.yul\":5290:5316   */\n      tag_184\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":5279:5316   */\n      swap1\n      pop\n        /* \"#utility.yul\":5222:5322   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5328:5485   */\n    tag_186:\n        /* \"#utility.yul\":5433:5478   */\n      tag_256\n        /* \"#utility.yul\":5453:5477   */\n      tag_257\n        /* \"#utility.yul\":5471:5476   */\n      dup3\n        /* \"#utility.yul\":5453:5477   */\n      tag_171\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":5433:5478   */\n      tag_185\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":5428:5431   */\n      dup3\n        /* \"#utility.yul\":5421:5479   */\n      mstore\n        /* \"#utility.yul\":5328:5485   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5491:5888   */\n    tag_130:\n        /* \"#utility.yul\":5631:5634   */\n      0x00\n        /* \"#utility.yul\":5646:5721   */\n      tag_259\n        /* \"#utility.yul\":5717:5720   */\n      dup3\n        /* \"#utility.yul\":5708:5714   */\n      dup6\n        /* \"#utility.yul\":5646:5721   */\n      tag_186\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":5746:5748   */\n      0x14\n        /* \"#utility.yul\":5741:5744   */\n      dup3\n        /* \"#utility.yul\":5737:5749   */\n      add\n        /* \"#utility.yul\":5730:5749   */\n      swap2\n      pop\n        /* \"#utility.yul\":5759:5834   */\n      tag_260\n        /* \"#utility.yul\":5830:5833   */\n      dup3\n        /* \"#utility.yul\":5821:5827   */\n      dup5\n        /* \"#utility.yul\":5759:5834   */\n      tag_186\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":5859:5861   */\n      0x14\n        /* \"#utility.yul\":5854:5857   */\n      dup3\n        /* \"#utility.yul\":5850:5862   */\n      add\n        /* \"#utility.yul\":5843:5862   */\n      swap2\n      pop\n        /* \"#utility.yul\":5879:5882   */\n      dup2\n        /* \"#utility.yul\":5872:5882   */\n      swap1\n      pop\n        /* \"#utility.yul\":5491:5888   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5894:6226   */\n    tag_134:\n        /* \"#utility.yul\":6015:6019   */\n      0x00\n        /* \"#utility.yul\":6053:6055   */\n      0x40\n        /* \"#utility.yul\":6042:6051   */\n      dup3\n        /* \"#utility.yul\":6038:6056   */\n      add\n        /* \"#utility.yul\":6030:6056   */\n      swap1\n      pop\n        /* \"#utility.yul\":6066:6137   */\n      tag_262\n        /* \"#utility.yul\":6134:6135   */\n      0x00\n        /* \"#utility.yul\":6123:6132   */\n      dup4\n        /* \"#utility.yul\":6119:6136   */\n      add\n        /* \"#utility.yul\":6110:6116   */\n      dup6\n        /* \"#utility.yul\":6066:6137   */\n      tag_180\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":6147:6219   */\n      tag_263\n        /* \"#utility.yul\":6215:6217   */\n      0x20\n        /* \"#utility.yul\":6204:6213   */\n      dup4\n        /* \"#utility.yul\":6200:6218   */\n      add\n        /* \"#utility.yul\":6191:6197   */\n      dup5\n        /* \"#utility.yul\":6147:6219   */\n      tag_180\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":5894:6226   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6232:6564   */\n    tag_140:\n        /* \"#utility.yul\":6353:6357   */\n      0x00\n        /* \"#utility.yul\":6391:6393   */\n      0x40\n        /* \"#utility.yul\":6380:6389   */\n      dup3\n        /* \"#utility.yul\":6376:6394   */\n      add\n        /* \"#utility.yul\":6368:6394   */\n      swap1\n      pop\n        /* \"#utility.yul\":6404:6475   */\n      tag_265\n        /* \"#utility.yul\":6472:6473   */\n      0x00\n        /* \"#utility.yul\":6461:6470   */\n      dup4\n        /* \"#utility.yul\":6457:6474   */\n      add\n        /* \"#utility.yul\":6448:6454   */\n      dup6\n        /* \"#utility.yul\":6404:6475   */\n      tag_180\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":6485:6557   */\n      tag_266\n        /* \"#utility.yul\":6553:6555   */\n      0x20\n        /* \"#utility.yul\":6542:6551   */\n      dup4\n        /* \"#utility.yul\":6538:6556   */\n      add\n        /* \"#utility.yul\":6529:6535   */\n      dup5\n        /* \"#utility.yul\":6485:6557   */\n      tag_175\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":6232:6564   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6570:6902   */\n    tag_165:\n        /* \"#utility.yul\":6691:6695   */\n      0x00\n        /* \"#utility.yul\":6729:6731   */\n      0x40\n        /* \"#utility.yul\":6718:6727   */\n      dup3\n        /* \"#utility.yul\":6714:6732   */\n      add\n        /* \"#utility.yul\":6706:6732   */\n      swap1\n      pop\n        /* \"#utility.yul\":6742:6813   */\n      tag_268\n        /* \"#utility.yul\":6810:6811   */\n      0x00\n        /* \"#utility.yul\":6799:6808   */\n      dup4\n        /* \"#utility.yul\":6795:6812   */\n      add\n        /* \"#utility.yul\":6786:6792   */\n      dup6\n        /* \"#utility.yul\":6742:6813   */\n      tag_175\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":6823:6895   */\n      tag_269\n        /* \"#utility.yul\":6891:6893   */\n      0x20\n        /* \"#utility.yul\":6880:6889   */\n      dup4\n        /* \"#utility.yul\":6876:6894   */\n      add\n        /* \"#utility.yul\":6867:6873   */\n      dup5\n        /* \"#utility.yul\":6823:6895   */\n      tag_175\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":6570:6902   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122038ee56af302644c5c3219a67ba759a7e38127d6270da290af901a7e77178f26e64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_266": {
									"entryPoint": null,
									"id": 266,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 339,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:5",
										"nodeType": "YulBlock",
										"src": "0:1199:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "759:80:5",
													"nodeType": "YulBlock",
													"src": "759:80:5",
													"statements": [
														{
															"nativeSrc": "769:22:5",
															"nodeType": "YulAssignment",
															"src": "769:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:5"
																},
																"nativeSrc": "778:13:5",
																"nodeType": "YulFunctionCall",
																"src": "778:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:5"
																},
																"nativeSrc": "800:33:5",
																"nodeType": "YulFunctionCall",
																"src": "800:33:5"
															},
															"nativeSrc": "800:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:5",
														"nodeType": "YulTypedName",
														"src": "737:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:5",
														"nodeType": "YulTypedName",
														"src": "745:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:5",
														"nodeType": "YulTypedName",
														"src": "753:5:5",
														"type": ""
													}
												],
												"src": "696:143:5"
											},
											{
												"body": {
													"nativeSrc": "922:274:5",
													"nodeType": "YulBlock",
													"src": "922:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:5",
																"nodeType": "YulBlock",
																"src": "968:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:5"
																			},
																			"nativeSrc": "970:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:5"
																		},
																		"nativeSrc": "970:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:5"
																		},
																		"nativeSrc": "939:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:5",
																		"nodeType": "YulLiteral",
																		"src": "964:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:5"
																},
																"nativeSrc": "935:32:5",
																"nodeType": "YulFunctionCall",
																"src": "935:32:5"
															},
															"nativeSrc": "932:119:5",
															"nodeType": "YulIf",
															"src": "932:119:5"
														},
														{
															"nativeSrc": "1061:128:5",
															"nodeType": "YulBlock",
															"src": "1061:128:5",
															"statements": [
																{
																	"nativeSrc": "1076:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:5"
																				},
																				"nativeSrc": "1147:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:5"
																		},
																		"nativeSrc": "1115:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:5",
														"nodeType": "YulTypedName",
														"src": "892:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:5",
														"nodeType": "YulTypedName",
														"src": "903:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:5",
														"nodeType": "YulTypedName",
														"src": "915:6:5",
														"type": ""
													}
												],
												"src": "845:351:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f5ffd5b50604051611a51380380611a51833981810160405281019061003191906101b1565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250503360045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550335f60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503360035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f5f5f6101000a81548160ff0219169083151502179055506005600181905550601e600281905550506101dc565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61018082610157565b9050919050565b61019081610176565b811461019a575f5ffd5b50565b5f815190506101ab81610187565b92915050565b5f602082840312156101c6576101c5610153565b5b5f6101d38482850161019d565b91505092915050565b6080516118566101fb5f395f8181610a640152610c1f01526118565ff3fe608060405234801561000f575f5ffd5b5060043610610140575f3560e01c806399d32fc4116100b6578063bcecf81b1161007a578063bcecf81b14610362578063cd1a0dd214610392578063cdb88ad1146103c2578063d0fb0203146103de578063e1f76b44146103fc578063f64ee7651461041857610140565b806399d32fc4146102ba5780639fd0506d146102d8578063a74adceb146102f6578063b187bd2614610326578063bc063e1a1461034457610140565b8063472d35b911610108578063472d35b9146101fa5780634bc2a657146102165780635c60da1b1461023257806367a5279314610250578063830e4eef1461026e578063984fa01f1461029e57610140565b806328a6b3ff146101445780632c3de946146101745780632d88af4a1461019057806338ed1793146101ac57806346c96aac146101dc575b5f5ffd5b61015e60048036038101906101599190611520565b610436565b60405161016b9190611563565b60405180910390f35b61018e600480360381019061018991906115a6565b61044b565b005b6101aa60048036038101906101a59190611520565b610621565b005b6101c660048036038101906101c19190611520565b610786565b6040516101d391906115fe565b60405180910390f35b6101e46107d8565b6040516101f19190611626565b60405180910390f35b610214600480360381019061020f9190611520565b6107fd565b005b610230600480360381019061022b9190611520565b610962565b005b61023a610a62565b6040516102479190611626565b60405180910390f35b610258610a86565b6040516102659190611563565b60405180910390f35b6102886004803603810190610283919061163f565b610a8c565b6040516102959190611626565b60405180910390f35b6102b860048036038101906102b391906115a6565b610e8c565b005b6102c2611062565b6040516102cf9190611563565b60405180910390f35b6102e0611068565b6040516102ed9190611626565b60405180910390f35b610310600480360381019061030b9190611520565b61108d565b60405161031d9190611563565b60405180910390f35b61032e6110a2565b60405161033b91906115fe565b60405180910390f35b61034c6110b3565b6040516103599190611563565b60405180910390f35b61037c6004803603810190610377919061167d565b6110b9565b6040516103899190611626565b60405180910390f35b6103ac60048036038101906103a7919061163f565b6110f4565b6040516103b99190611626565b60405180910390f35b6103dc60048036038101906103d791906116d2565b611195565b005b6103e661126d565b6040516103f39190611626565b60405180910390f35b610416600480360381019061041191906116fd565b611292565b005b6104206113ab565b60405161042d9190611563565b60405180910390f35b6008602052805f5260405f205f915090505481565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104d1576040517ff5d267eb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61012c81111561050d576040517fcd4e616700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1661058d576040517f682a6e7c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff167fce78db41faad8d3a613429389971e6dc25f809f59a4e8467ea2b71c71203ec08826040516106159190611563565b60405180910390a25050565b5f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106a7576040517f492f678100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361070c576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805f60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fe02efb9e8f0fc21546730ab32d594f62d586e1bbb15bb5045edd0b1878a77b358160405161077b9190611626565b60405180910390a150565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610883576040517ff5d267eb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108e8576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f5d0517e3a4eabea892d9750138cd21d4a6cf3b935b43d0598df7055f463819b2816040516109579190611626565b60405180910390a150565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109e8576040517fc18384c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc6ff127433b785c51da9ae4088ee184c909b1a55b9afd82ae6c64224d3bc15d281604051610a579190611626565b60405180910390a150565b7f000000000000000000000000000000000000000000000000000000000000000081565b60015481565b5f5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610af2576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bee576040517f0311932200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8383604051602001610c02929190611780565b604051602081830303815290604052805190602001209050610c447f0000000000000000000000000000000000000000000000000000000000000000826113b7565b91508173ffffffffffffffffffffffffffffffffffffffff1663485cc95585856040518363ffffffff1660e01b8152600401610c819291906117ab565b5f604051808303815f87803b158015610c98575f5ffd5b505af1158015610caa573d5f5f3e3d5ffd5b505050508160055f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600682908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f9a07b2753aaebe71b96e78f64ccced2e2b9ff13d98b3c7784285ef0c31631dbf84600680549050604051610e7d9291906117d2565b60405180910390a35092915050565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f12576040517ff5d267eb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61012c811115610f4e576040517fcd4e616700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610fce576040517f682a6e7c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060095f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff167f6f6bd3c4b38df451f210a585e872b5a0b6de937fda37f0eb0c7731afb4391985826040516110569190611563565b60405180910390a25050565b60025481565b5f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6009602052805f5260405f205f915090505481565b5f5f9054906101000a900460ff1681565b61012c81565b600681815481106110c8575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b5f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461121b576040517f492f678100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805f5f6101000a81548160ff0219169083151502179055507f0d76538efc408318a051137c2720a9e82902acdbd46b802d488b74ca3a09a1168160405161126291906115fe565b60405180910390a150565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611318576040517ff5d267eb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61012c811115611354576040517fcd4e616700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f810361138d576040517faf13986d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b811561139f57806001819055506113a7565b806002819055505b5050565b5f600680549050905090565b5f6113c383835f6113cb565b905092915050565b5f814710156114135747826040517fcf47918100000000000000000000000000000000000000000000000000000000815260040161140a9291906117f9565b60405180910390fd5b763d602d80600a3d3981f3363d3d373d3d3d363d730000008460601b60e81c175f526e5af43d82803e903d91602b57fd5bf38460781b17602052826037600984f590505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114bb576040517fb06ebf3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6114ef826114c6565b9050919050565b6114ff816114e5565b8114611509575f5ffd5b50565b5f8135905061151a816114f6565b92915050565b5f60208284031215611535576115346114c2565b5b5f6115428482850161150c565b91505092915050565b5f819050919050565b61155d8161154b565b82525050565b5f6020820190506115765f830184611554565b92915050565b6115858161154b565b811461158f575f5ffd5b50565b5f813590506115a08161157c565b92915050565b5f5f604083850312156115bc576115bb6114c2565b5b5f6115c98582860161150c565b92505060206115da85828601611592565b9150509250929050565b5f8115159050919050565b6115f8816115e4565b82525050565b5f6020820190506116115f8301846115ef565b92915050565b611620816114e5565b82525050565b5f6020820190506116395f830184611617565b92915050565b5f5f60408385031215611655576116546114c2565b5b5f6116628582860161150c565b92505060206116738582860161150c565b9150509250929050565b5f60208284031215611692576116916114c2565b5b5f61169f84828501611592565b91505092915050565b6116b1816115e4565b81146116bb575f5ffd5b50565b5f813590506116cc816116a8565b92915050565b5f602082840312156116e7576116e66114c2565b5b5f6116f4848285016116be565b91505092915050565b5f5f60408385031215611713576117126114c2565b5b5f611720858286016116be565b925050602061173185828601611592565b9150509250929050565b5f8160601b9050919050565b5f6117518261173b565b9050919050565b5f61176282611747565b9050919050565b61177a611775826114e5565b611758565b82525050565b5f61178b8285611769565b60148201915061179b8284611769565b6014820191508190509392505050565b5f6040820190506117be5f830185611617565b6117cb6020830184611617565b9392505050565b5f6040820190506117e55f830185611617565b6117f26020830184611554565b9392505050565b5f60408201905061180c5f830185611554565b6118196020830184611554565b939250505056fea264697066735822122038ee56af302644c5c3219a67ba759a7e38127d6270da290af901a7e77178f26e64736f6c634300081c0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1A51 CODESIZE SUB DUP1 PUSH2 0x1A51 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x1B1 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP CALLER PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1E PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP PUSH2 0x1DC JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x180 DUP3 PUSH2 0x157 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x190 DUP2 PUSH2 0x176 JUMP JUMPDEST DUP2 EQ PUSH2 0x19A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AB DUP2 PUSH2 0x187 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C6 JUMPI PUSH2 0x1C5 PUSH2 0x153 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D3 DUP5 DUP3 DUP6 ADD PUSH2 0x19D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1856 PUSH2 0x1FB PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0xA64 ADD MSTORE PUSH2 0xC1F ADD MSTORE PUSH2 0x1856 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x140 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x99D32FC4 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xBCECF81B GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xBCECF81B EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0xCD1A0DD2 EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0xCDB88AD1 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0xD0FB0203 EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0xE1F76B44 EQ PUSH2 0x3FC JUMPI DUP1 PUSH4 0xF64EE765 EQ PUSH2 0x418 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x99D32FC4 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x9FD0506D EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xA74ADCEB EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0xB187BD26 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x344 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x472D35B9 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x472D35B9 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x4BC2A657 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x67A52793 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x830E4EEF EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x984FA01F EQ PUSH2 0x29E JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x28A6B3FF EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x2C3DE946 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x2D88AF4A EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x38ED1793 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x46C96AAC EQ PUSH2 0x1DC JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x15A6 JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x786 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x15FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E4 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x962 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23A PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH2 0xA86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x288 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x15A6 JUMP JUMPDEST PUSH2 0xE8C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C2 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E0 PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x310 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x108D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32E PUSH2 0x10A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x15FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34C PUSH2 0x10B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x167D JUMP JUMPDEST PUSH2 0x10B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST PUSH2 0x1195 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E6 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F3 SWAP2 SWAP1 PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x416 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x16FD JUMP JUMPDEST PUSH2 0x1292 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x420 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF5D267EB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12C DUP2 GT ISZERO PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH32 0xCD4E616700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x58D JUMPI PUSH1 0x40 MLOAD PUSH32 0x682A6E7C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCE78DB41FAAD8D3A613429389971E6DC25F809F59A4E8467EA2B71C71203EC08 DUP3 PUSH1 0x40 MLOAD PUSH2 0x615 SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x492F678100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x70C JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xE02EFB9E8F0FC21546730AB32D594F62D586E1BBB15BB5045EDD0B1878A77B35 DUP2 PUSH1 0x40 MLOAD PUSH2 0x77B SWAP2 SWAP1 PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x883 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF5D267EB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x5D0517E3A4EABEA892D9750138CD21D4A6CF3B935B43D0598DF7055F463819B2 DUP2 PUSH1 0x40 MLOAD PUSH2 0x957 SWAP2 SWAP1 PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC18384C100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC6FF127433B785C51DA9AE4088EE184C909B1A55B9AFD82AE6C64224D3BC15D2 DUP2 PUSH1 0x40 MLOAD PUSH2 0xA57 SWAP2 SWAP1 PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBEE JUMPI PUSH1 0x40 MLOAD PUSH32 0x311932200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC02 SWAP3 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0xC44 PUSH32 0x0 DUP3 PUSH2 0x13B7 JUMP JUMPDEST SWAP2 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x485CC955 DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC81 SWAP3 SWAP2 SWAP1 PUSH2 0x17AB JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC98 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCAA JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP2 PUSH1 0x5 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9A07B2753AAEBE71B96E78F64CCCED2E2B9FF13D98B3C7784285EF0C31631DBF DUP5 PUSH1 0x6 DUP1 SLOAD SWAP1 POP PUSH1 0x40 MLOAD PUSH2 0xE7D SWAP3 SWAP2 SWAP1 PUSH2 0x17D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF12 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF5D267EB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12C DUP2 GT ISZERO PUSH2 0xF4E JUMPI PUSH1 0x40 MLOAD PUSH32 0xCD4E616700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x682A6E7C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6F6BD3C4B38DF451F210A585E872B5A0B6DE937FDA37F0EB0C7731AFB4391985 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1056 SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x12C DUP2 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x10C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x121B JUMPI PUSH1 0x40 MLOAD PUSH32 0x492F678100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xD76538EFC408318A051137C2720A9E82902ACDBD46B802D488B74CA3A09A116 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1262 SWAP2 SWAP1 PUSH2 0x15FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1318 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF5D267EB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12C DUP2 GT ISZERO PUSH2 0x1354 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCD4E616700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0x138D JUMPI PUSH1 0x40 MLOAD PUSH32 0xAF13986D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x139F JUMPI DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x13A7 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x13C3 DUP4 DUP4 PUSH0 PUSH2 0x13CB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SELFBALANCE LT ISZERO PUSH2 0x1413 JUMPI SELFBALANCE DUP3 PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x140A SWAP3 SWAP2 SWAP1 PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP5 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP5 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE DUP3 PUSH1 0x37 PUSH1 0x9 DUP5 CREATE2 SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14BB JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06EBF3D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14EF DUP3 PUSH2 0x14C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14FF DUP2 PUSH2 0x14E5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1509 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x151A DUP2 PUSH2 0x14F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1535 JUMPI PUSH2 0x1534 PUSH2 0x14C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1542 DUP5 DUP3 DUP6 ADD PUSH2 0x150C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x155D DUP2 PUSH2 0x154B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1576 PUSH0 DUP4 ADD DUP5 PUSH2 0x1554 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1585 DUP2 PUSH2 0x154B JUMP JUMPDEST DUP2 EQ PUSH2 0x158F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15A0 DUP2 PUSH2 0x157C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15BC JUMPI PUSH2 0x15BB PUSH2 0x14C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15C9 DUP6 DUP3 DUP7 ADD PUSH2 0x150C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15DA DUP6 DUP3 DUP7 ADD PUSH2 0x1592 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15F8 DUP2 PUSH2 0x15E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1611 PUSH0 DUP4 ADD DUP5 PUSH2 0x15EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1620 DUP2 PUSH2 0x14E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1639 PUSH0 DUP4 ADD DUP5 PUSH2 0x1617 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x14C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1662 DUP6 DUP3 DUP7 ADD PUSH2 0x150C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1673 DUP6 DUP3 DUP7 ADD PUSH2 0x150C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1692 JUMPI PUSH2 0x1691 PUSH2 0x14C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x169F DUP5 DUP3 DUP6 ADD PUSH2 0x1592 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16B1 DUP2 PUSH2 0x15E4 JUMP JUMPDEST DUP2 EQ PUSH2 0x16BB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16CC DUP2 PUSH2 0x16A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16E7 JUMPI PUSH2 0x16E6 PUSH2 0x14C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16F4 DUP5 DUP3 DUP6 ADD PUSH2 0x16BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1713 JUMPI PUSH2 0x1712 PUSH2 0x14C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1720 DUP6 DUP3 DUP7 ADD PUSH2 0x16BE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1731 DUP6 DUP3 DUP7 ADD PUSH2 0x1592 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1751 DUP3 PUSH2 0x173B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1762 DUP3 PUSH2 0x1747 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x177A PUSH2 0x1775 DUP3 PUSH2 0x14E5 JUMP JUMPDEST PUSH2 0x1758 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x178B DUP3 DUP6 PUSH2 0x1769 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x179B DUP3 DUP5 PUSH2 0x1769 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x17BE PUSH0 DUP4 ADD DUP6 PUSH2 0x1617 JUMP JUMPDEST PUSH2 0x17CB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1617 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x17E5 PUSH0 DUP4 ADD DUP6 PUSH2 0x1617 JUMP JUMPDEST PUSH2 0x17F2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1554 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x180C PUSH0 DUP4 ADD DUP6 PUSH2 0x1554 JUMP JUMPDEST PUSH2 0x1819 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1554 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0xEE JUMP 0xAF ADDRESS 0x26 PREVRANDAO 0xC5 0xC3 0x21 SWAP11 PUSH8 0xBA759A7E38127D62 PUSH17 0xDA290AF901A7E77178F26E64736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "202:4423:2:-:0;;;833:274;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;898:15;881:32;;;;;;;;;;932:10;924:5;;:18;;;;;;;;;;;;;;;;;;962:10;953:6;;:19;;;;;;;;;;;;;;;;;;996:10;983;;:23;;;;;;;;;;;;;;;;;;1028:5;1017:8;;:16;;;;;;;;;;;;;;;;;;1057:1;1044:10;:14;;;;1089:2;1078:8;:13;;;;833:274;202:4423;;88:117:5;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;202:4423:2:-;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MAX_FEE_204": {
									"entryPoint": 4275,
									"id": 204,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allValidatorsLength_276": {
									"entryPoint": 5035,
									"id": 276,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@allValidators_217": {
									"entryPoint": 4281,
									"id": 217,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimFee_201": {
									"entryPoint": 4194,
									"id": 201,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@cloneDeterministic_127": {
									"entryPoint": 5067,
									"id": 127,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@cloneDeterministic_80": {
									"entryPoint": 5047,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@createValidator_633": {
									"entryPoint": 2700,
									"id": 633,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@customClaimFee_229": {
									"entryPoint": 4237,
									"id": 229,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@customDepositFee_225": {
									"entryPoint": 1078,
									"id": 225,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositFee_199": {
									"entryPoint": 2694,
									"id": 199,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feeManager_206": {
									"entryPoint": 4717,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getValidator_293": {
									"entryPoint": 4340,
									"id": 293,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@implementation_193": {
									"entryPoint": 2658,
									"id": 193,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isPaused_195": {
									"entryPoint": 4258,
									"id": 195,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isValidatorl_306": {
									"entryPoint": 1926,
									"id": 306,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@pauser_197": {
									"entryPoint": 4200,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setClaimCustomFee_544": {
									"entryPoint": 3724,
									"id": 544,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setDepositCustomFee_501": {
									"entryPoint": 1099,
									"id": 501,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setFeeManager_415": {
									"entryPoint": 2045,
									"id": 415,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFee_458": {
									"entryPoint": 4754,
									"id": 458,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setPauseState_383": {
									"entryPoint": 4501,
									"id": 383,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPauser_361": {
									"entryPoint": 1569,
									"id": 361,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setVoter_329": {
									"entryPoint": 2402,
									"id": 329,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@voter_208": {
									"entryPoint": 2008,
									"id": 208,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 5842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_boolt_uint256": {
									"entryPoint": 5885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 5993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6016,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 6059,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6098,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6137,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 5976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 5959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5314,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_96": {
									"entryPoint": 5947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 5366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5800,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6905:5",
										"nodeType": "YulBlock",
										"src": "0:6905:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "748:87:5",
													"nodeType": "YulBlock",
													"src": "748:87:5",
													"statements": [
														{
															"nativeSrc": "758:29:5",
															"nodeType": "YulAssignment",
															"src": "758:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:5"
																},
																"nativeSrc": "767:20:5",
																"nodeType": "YulFunctionCall",
																"src": "767:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:5"
																},
																"nativeSrc": "796:33:5",
																"nodeType": "YulFunctionCall",
																"src": "796:33:5"
															},
															"nativeSrc": "796:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:5",
														"nodeType": "YulTypedName",
														"src": "726:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:5",
														"nodeType": "YulTypedName",
														"src": "734:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:5",
														"nodeType": "YulTypedName",
														"src": "742:5:5",
														"type": ""
													}
												],
												"src": "696:139:5"
											},
											{
												"body": {
													"nativeSrc": "907:263:5",
													"nodeType": "YulBlock",
													"src": "907:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:5",
																"nodeType": "YulBlock",
																"src": "953:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:5"
																			},
																			"nativeSrc": "955:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:5"
																		},
																		"nativeSrc": "955:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:5"
																		},
																		"nativeSrc": "924:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:5",
																		"nodeType": "YulLiteral",
																		"src": "949:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:5"
																},
																"nativeSrc": "920:32:5",
																"nodeType": "YulFunctionCall",
																"src": "920:32:5"
															},
															"nativeSrc": "917:119:5",
															"nodeType": "YulIf",
															"src": "917:119:5"
														},
														{
															"nativeSrc": "1046:117:5",
															"nodeType": "YulBlock",
															"src": "1046:117:5",
															"statements": [
																{
																	"nativeSrc": "1061:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:5"
																				},
																				"nativeSrc": "1121:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:5"
																		},
																		"nativeSrc": "1100:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:5",
														"nodeType": "YulTypedName",
														"src": "877:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:5",
														"nodeType": "YulTypedName",
														"src": "888:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:5",
														"nodeType": "YulTypedName",
														"src": "900:6:5",
														"type": ""
													}
												],
												"src": "841:329:5"
											},
											{
												"body": {
													"nativeSrc": "1221:32:5",
													"nodeType": "YulBlock",
													"src": "1221:32:5",
													"statements": [
														{
															"nativeSrc": "1231:16:5",
															"nodeType": "YulAssignment",
															"src": "1231:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:5",
																"nodeType": "YulIdentifier",
																"src": "1242:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:5",
														"nodeType": "YulTypedName",
														"src": "1203:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:5",
														"nodeType": "YulTypedName",
														"src": "1213:7:5",
														"type": ""
													}
												],
												"src": "1176:77:5"
											},
											{
												"body": {
													"nativeSrc": "1324:53:5",
													"nodeType": "YulBlock",
													"src": "1324:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:5"
																		},
																		"nativeSrc": "1346:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:5"
																},
																"nativeSrc": "1334:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:5"
															},
															"nativeSrc": "1334:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:5",
														"nodeType": "YulTypedName",
														"src": "1312:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:5",
														"nodeType": "YulTypedName",
														"src": "1319:3:5",
														"type": ""
													}
												],
												"src": "1259:118:5"
											},
											{
												"body": {
													"nativeSrc": "1481:124:5",
													"nodeType": "YulBlock",
													"src": "1481:124:5",
													"statements": [
														{
															"nativeSrc": "1491:26:5",
															"nodeType": "YulAssignment",
															"src": "1491:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:5"
																},
																"nativeSrc": "1499:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:5"
																		},
																		"nativeSrc": "1580:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:5"
																},
																"nativeSrc": "1527:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:5"
															},
															"nativeSrc": "1527:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:5",
														"nodeType": "YulTypedName",
														"src": "1453:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:5",
														"nodeType": "YulTypedName",
														"src": "1465:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:5",
														"nodeType": "YulTypedName",
														"src": "1476:4:5",
														"type": ""
													}
												],
												"src": "1383:222:5"
											},
											{
												"body": {
													"nativeSrc": "1654:79:5",
													"nodeType": "YulBlock",
													"src": "1654:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1711:16:5",
																"nodeType": "YulBlock",
																"src": "1711:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1723:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1713:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:5"
																			},
																			"nativeSrc": "1713:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:5"
																		},
																		"nativeSrc": "1713:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1677:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1702:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1684:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:5"
																				},
																				"nativeSrc": "1684:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1674:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:5"
																		},
																		"nativeSrc": "1674:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1667:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:5"
																},
																"nativeSrc": "1667:43:5",
																"nodeType": "YulFunctionCall",
																"src": "1667:43:5"
															},
															"nativeSrc": "1664:63:5",
															"nodeType": "YulIf",
															"src": "1664:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1611:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:5",
														"nodeType": "YulTypedName",
														"src": "1647:5:5",
														"type": ""
													}
												],
												"src": "1611:122:5"
											},
											{
												"body": {
													"nativeSrc": "1791:87:5",
													"nodeType": "YulBlock",
													"src": "1791:87:5",
													"statements": [
														{
															"nativeSrc": "1801:29:5",
															"nodeType": "YulAssignment",
															"src": "1801:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1823:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1810:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:5"
																},
																"nativeSrc": "1810:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1810:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1801:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1866:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1839:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:5"
																},
																"nativeSrc": "1839:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1839:33:5"
															},
															"nativeSrc": "1839:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1739:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:5",
														"nodeType": "YulTypedName",
														"src": "1769:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1777:3:5",
														"nodeType": "YulTypedName",
														"src": "1777:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1785:5:5",
														"nodeType": "YulTypedName",
														"src": "1785:5:5",
														"type": ""
													}
												],
												"src": "1739:139:5"
											},
											{
												"body": {
													"nativeSrc": "1967:391:5",
													"nodeType": "YulBlock",
													"src": "1967:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2013:83:5",
																"nodeType": "YulBlock",
																"src": "2013:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2015:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2015:77:5"
																			},
																			"nativeSrc": "2015:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2015:79:5"
																		},
																		"nativeSrc": "2015:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2015:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1988:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1988:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1997:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1997:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1984:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1984:3:5"
																		},
																		"nativeSrc": "1984:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1984:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2009:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2009:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1980:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1980:3:5"
																},
																"nativeSrc": "1980:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1980:32:5"
															},
															"nativeSrc": "1977:119:5",
															"nodeType": "YulIf",
															"src": "1977:119:5"
														},
														{
															"nativeSrc": "2106:117:5",
															"nodeType": "YulBlock",
															"src": "2106:117:5",
															"statements": [
																{
																	"nativeSrc": "2121:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2121:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2135:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2135:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2125:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2125:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2150:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2150:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2185:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2185:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2196:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2196:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2181:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2181:3:5"
																				},
																				"nativeSrc": "2181:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2181:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2205:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2205:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2160:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2160:20:5"
																		},
																		"nativeSrc": "2160:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2160:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2150:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2150:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2233:118:5",
															"nodeType": "YulBlock",
															"src": "2233:118:5",
															"statements": [
																{
																	"nativeSrc": "2248:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2248:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2262:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2262:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2252:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2252:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2278:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2278:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2313:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2313:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2324:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2324:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2309:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2309:3:5"
																				},
																				"nativeSrc": "2309:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2309:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2333:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2333:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2288:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2288:20:5"
																		},
																		"nativeSrc": "2288:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2288:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2278:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2278:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1884:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1929:9:5",
														"nodeType": "YulTypedName",
														"src": "1929:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1940:7:5",
														"nodeType": "YulTypedName",
														"src": "1940:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1952:6:5",
														"nodeType": "YulTypedName",
														"src": "1952:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1960:6:5",
														"nodeType": "YulTypedName",
														"src": "1960:6:5",
														"type": ""
													}
												],
												"src": "1884:474:5"
											},
											{
												"body": {
													"nativeSrc": "2406:48:5",
													"nodeType": "YulBlock",
													"src": "2406:48:5",
													"statements": [
														{
															"nativeSrc": "2416:32:5",
															"nodeType": "YulAssignment",
															"src": "2416:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2441:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2441:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2434:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2434:6:5"
																		},
																		"nativeSrc": "2434:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2434:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2427:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2427:6:5"
																},
																"nativeSrc": "2427:21:5",
																"nodeType": "YulFunctionCall",
																"src": "2427:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2416:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "2416:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2364:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2388:5:5",
														"nodeType": "YulTypedName",
														"src": "2388:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2398:7:5",
														"nodeType": "YulTypedName",
														"src": "2398:7:5",
														"type": ""
													}
												],
												"src": "2364:90:5"
											},
											{
												"body": {
													"nativeSrc": "2519:50:5",
													"nodeType": "YulBlock",
													"src": "2519:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2536:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2536:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2556:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2556:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2541:14:5",
																			"nodeType": "YulIdentifier",
																			"src": "2541:14:5"
																		},
																		"nativeSrc": "2541:21:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2541:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2529:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2529:6:5"
																},
																"nativeSrc": "2529:34:5",
																"nodeType": "YulFunctionCall",
																"src": "2529:34:5"
															},
															"nativeSrc": "2529:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "2529:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2460:109:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2507:5:5",
														"nodeType": "YulTypedName",
														"src": "2507:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2514:3:5",
														"nodeType": "YulTypedName",
														"src": "2514:3:5",
														"type": ""
													}
												],
												"src": "2460:109:5"
											},
											{
												"body": {
													"nativeSrc": "2667:118:5",
													"nodeType": "YulBlock",
													"src": "2667:118:5",
													"statements": [
														{
															"nativeSrc": "2677:26:5",
															"nodeType": "YulAssignment",
															"src": "2677:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2689:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2689:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2700:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2700:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2685:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2685:3:5"
																},
																"nativeSrc": "2685:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2685:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2677:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2677:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2751:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2751:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2764:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2764:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2775:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2775:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2760:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2760:3:5"
																		},
																		"nativeSrc": "2760:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2760:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2713:37:5",
																	"nodeType": "YulIdentifier",
																	"src": "2713:37:5"
																},
																"nativeSrc": "2713:65:5",
																"nodeType": "YulFunctionCall",
																"src": "2713:65:5"
															},
															"nativeSrc": "2713:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "2713:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2575:210:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2639:9:5",
														"nodeType": "YulTypedName",
														"src": "2639:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2651:6:5",
														"nodeType": "YulTypedName",
														"src": "2651:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2662:4:5",
														"nodeType": "YulTypedName",
														"src": "2662:4:5",
														"type": ""
													}
												],
												"src": "2575:210:5"
											},
											{
												"body": {
													"nativeSrc": "2856:53:5",
													"nodeType": "YulBlock",
													"src": "2856:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2873:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2873:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2896:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2896:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2878:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2878:17:5"
																		},
																		"nativeSrc": "2878:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2878:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2866:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2866:6:5"
																},
																"nativeSrc": "2866:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2866:37:5"
															},
															"nativeSrc": "2866:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2866:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2791:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2844:5:5",
														"nodeType": "YulTypedName",
														"src": "2844:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2851:3:5",
														"nodeType": "YulTypedName",
														"src": "2851:3:5",
														"type": ""
													}
												],
												"src": "2791:118:5"
											},
											{
												"body": {
													"nativeSrc": "3013:124:5",
													"nodeType": "YulBlock",
													"src": "3013:124:5",
													"statements": [
														{
															"nativeSrc": "3023:26:5",
															"nodeType": "YulAssignment",
															"src": "3023:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3035:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3035:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3046:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3046:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3031:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3031:3:5"
																},
																"nativeSrc": "3031:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3031:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3023:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3023:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3103:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3103:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3116:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3116:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3127:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3127:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3112:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3112:3:5"
																		},
																		"nativeSrc": "3112:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3112:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3059:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3059:43:5"
																},
																"nativeSrc": "3059:71:5",
																"nodeType": "YulFunctionCall",
																"src": "3059:71:5"
															},
															"nativeSrc": "3059:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "3059:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2915:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2985:9:5",
														"nodeType": "YulTypedName",
														"src": "2985:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2997:6:5",
														"nodeType": "YulTypedName",
														"src": "2997:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3008:4:5",
														"nodeType": "YulTypedName",
														"src": "3008:4:5",
														"type": ""
													}
												],
												"src": "2915:222:5"
											},
											{
												"body": {
													"nativeSrc": "3226:391:5",
													"nodeType": "YulBlock",
													"src": "3226:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3272:83:5",
																"nodeType": "YulBlock",
																"src": "3272:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3274:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3274:77:5"
																			},
																			"nativeSrc": "3274:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3274:79:5"
																		},
																		"nativeSrc": "3274:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3274:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3247:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3247:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3256:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3256:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3243:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3243:3:5"
																		},
																		"nativeSrc": "3243:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3243:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3268:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3268:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3239:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3239:3:5"
																},
																"nativeSrc": "3239:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3239:32:5"
															},
															"nativeSrc": "3236:119:5",
															"nodeType": "YulIf",
															"src": "3236:119:5"
														},
														{
															"nativeSrc": "3365:117:5",
															"nodeType": "YulBlock",
															"src": "3365:117:5",
															"statements": [
																{
																	"nativeSrc": "3380:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3380:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3394:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3394:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3384:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3384:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3409:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3409:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3444:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3444:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3455:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3455:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3440:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3440:3:5"
																				},
																				"nativeSrc": "3440:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3440:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3464:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3464:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3419:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3419:20:5"
																		},
																		"nativeSrc": "3419:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3419:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3409:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3409:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3492:118:5",
															"nodeType": "YulBlock",
															"src": "3492:118:5",
															"statements": [
																{
																	"nativeSrc": "3507:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3507:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3521:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3521:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3511:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3511:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3537:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3537:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3572:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3572:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3583:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3583:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3568:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3568:3:5"
																				},
																				"nativeSrc": "3568:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3568:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3592:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3592:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3547:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3547:20:5"
																		},
																		"nativeSrc": "3547:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3547:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3537:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3537:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3143:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3188:9:5",
														"nodeType": "YulTypedName",
														"src": "3188:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3199:7:5",
														"nodeType": "YulTypedName",
														"src": "3199:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3211:6:5",
														"nodeType": "YulTypedName",
														"src": "3211:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3219:6:5",
														"nodeType": "YulTypedName",
														"src": "3219:6:5",
														"type": ""
													}
												],
												"src": "3143:474:5"
											},
											{
												"body": {
													"nativeSrc": "3689:263:5",
													"nodeType": "YulBlock",
													"src": "3689:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3735:83:5",
																"nodeType": "YulBlock",
																"src": "3735:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3737:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "3737:77:5"
																			},
																			"nativeSrc": "3737:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3737:79:5"
																		},
																		"nativeSrc": "3737:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3737:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3710:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3710:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3719:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3719:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3706:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3706:3:5"
																		},
																		"nativeSrc": "3706:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3706:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3731:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3731:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3702:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3702:3:5"
																},
																"nativeSrc": "3702:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3702:32:5"
															},
															"nativeSrc": "3699:119:5",
															"nodeType": "YulIf",
															"src": "3699:119:5"
														},
														{
															"nativeSrc": "3828:117:5",
															"nodeType": "YulBlock",
															"src": "3828:117:5",
															"statements": [
																{
																	"nativeSrc": "3843:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3843:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3857:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3857:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3847:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3847:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3872:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3872:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3907:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3907:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3918:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3918:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3903:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3903:3:5"
																				},
																				"nativeSrc": "3903:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3903:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3927:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3927:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3882:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3882:20:5"
																		},
																		"nativeSrc": "3882:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3882:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3872:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3872:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3623:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3659:9:5",
														"nodeType": "YulTypedName",
														"src": "3659:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3670:7:5",
														"nodeType": "YulTypedName",
														"src": "3670:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3682:6:5",
														"nodeType": "YulTypedName",
														"src": "3682:6:5",
														"type": ""
													}
												],
												"src": "3623:329:5"
											},
											{
												"body": {
													"nativeSrc": "3998:76:5",
													"nodeType": "YulBlock",
													"src": "3998:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4052:16:5",
																"nodeType": "YulBlock",
																"src": "4052:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4061:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4061:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4064:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4064:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4054:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4054:6:5"
																			},
																			"nativeSrc": "4054:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4054:12:5"
																		},
																		"nativeSrc": "4054:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4054:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4021:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4021:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4043:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4043:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "4028:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "4028:14:5"
																				},
																				"nativeSrc": "4028:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4028:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4018:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "4018:2:5"
																		},
																		"nativeSrc": "4018:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4018:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4011:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4011:6:5"
																},
																"nativeSrc": "4011:40:5",
																"nodeType": "YulFunctionCall",
																"src": "4011:40:5"
															},
															"nativeSrc": "4008:60:5",
															"nodeType": "YulIf",
															"src": "4008:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "3958:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3991:5:5",
														"nodeType": "YulTypedName",
														"src": "3991:5:5",
														"type": ""
													}
												],
												"src": "3958:116:5"
											},
											{
												"body": {
													"nativeSrc": "4129:84:5",
													"nodeType": "YulBlock",
													"src": "4129:84:5",
													"statements": [
														{
															"nativeSrc": "4139:29:5",
															"nodeType": "YulAssignment",
															"src": "4139:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4161:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4161:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4148:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "4148:12:5"
																},
																"nativeSrc": "4148:20:5",
																"nodeType": "YulFunctionCall",
																"src": "4148:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4139:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4139:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4201:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "4201:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "4177:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "4177:23:5"
																},
																"nativeSrc": "4177:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4177:30:5"
															},
															"nativeSrc": "4177:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "4177:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "4080:133:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4107:6:5",
														"nodeType": "YulTypedName",
														"src": "4107:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4115:3:5",
														"nodeType": "YulTypedName",
														"src": "4115:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4123:5:5",
														"nodeType": "YulTypedName",
														"src": "4123:5:5",
														"type": ""
													}
												],
												"src": "4080:133:5"
											},
											{
												"body": {
													"nativeSrc": "4282:260:5",
													"nodeType": "YulBlock",
													"src": "4282:260:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4328:83:5",
																"nodeType": "YulBlock",
																"src": "4328:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4330:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "4330:77:5"
																			},
																			"nativeSrc": "4330:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4330:79:5"
																		},
																		"nativeSrc": "4330:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4330:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4303:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4303:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4312:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4312:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4299:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4299:3:5"
																		},
																		"nativeSrc": "4299:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4299:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4324:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4324:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4295:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4295:3:5"
																},
																"nativeSrc": "4295:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4295:32:5"
															},
															"nativeSrc": "4292:119:5",
															"nodeType": "YulIf",
															"src": "4292:119:5"
														},
														{
															"nativeSrc": "4421:114:5",
															"nodeType": "YulBlock",
															"src": "4421:114:5",
															"statements": [
																{
																	"nativeSrc": "4436:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4436:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4450:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4450:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4440:6:5",
																			"nodeType": "YulTypedName",
																			"src": "4440:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4465:60:5",
																	"nodeType": "YulAssignment",
																	"src": "4465:60:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4497:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "4497:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4508:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4508:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4493:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4493:3:5"
																				},
																				"nativeSrc": "4493:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4493:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4517:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4517:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "4475:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "4475:17:5"
																		},
																		"nativeSrc": "4475:50:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4475:50:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4465:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4465:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nativeSrc": "4219:323:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4252:9:5",
														"nodeType": "YulTypedName",
														"src": "4252:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4263:7:5",
														"nodeType": "YulTypedName",
														"src": "4263:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4275:6:5",
														"nodeType": "YulTypedName",
														"src": "4275:6:5",
														"type": ""
													}
												],
												"src": "4219:323:5"
											},
											{
												"body": {
													"nativeSrc": "4628:388:5",
													"nodeType": "YulBlock",
													"src": "4628:388:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4674:83:5",
																"nodeType": "YulBlock",
																"src": "4674:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4676:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "4676:77:5"
																			},
																			"nativeSrc": "4676:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4676:79:5"
																		},
																		"nativeSrc": "4676:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4676:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4649:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4649:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4658:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4658:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4645:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4645:3:5"
																		},
																		"nativeSrc": "4645:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4645:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4670:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4670:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4641:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4641:3:5"
																},
																"nativeSrc": "4641:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4641:32:5"
															},
															"nativeSrc": "4638:119:5",
															"nodeType": "YulIf",
															"src": "4638:119:5"
														},
														{
															"nativeSrc": "4767:114:5",
															"nodeType": "YulBlock",
															"src": "4767:114:5",
															"statements": [
																{
																	"nativeSrc": "4782:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4782:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4796:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4796:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4786:6:5",
																			"nodeType": "YulTypedName",
																			"src": "4786:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4811:60:5",
																	"nodeType": "YulAssignment",
																	"src": "4811:60:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4843:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "4843:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4854:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4854:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4839:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4839:3:5"
																				},
																				"nativeSrc": "4839:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4839:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4863:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4863:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "4821:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "4821:17:5"
																		},
																		"nativeSrc": "4821:50:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4821:50:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4811:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4811:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4891:118:5",
															"nodeType": "YulBlock",
															"src": "4891:118:5",
															"statements": [
																{
																	"nativeSrc": "4906:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4906:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4920:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4920:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4910:6:5",
																			"nodeType": "YulTypedName",
																			"src": "4910:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4936:63:5",
																	"nodeType": "YulAssignment",
																	"src": "4936:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4971:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "4971:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4982:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4982:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4967:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4967:3:5"
																				},
																				"nativeSrc": "4967:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4967:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4991:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4991:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4946:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "4946:20:5"
																		},
																		"nativeSrc": "4946:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4946:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4936:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4936:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_boolt_uint256",
												"nativeSrc": "4548:468:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4590:9:5",
														"nodeType": "YulTypedName",
														"src": "4590:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4601:7:5",
														"nodeType": "YulTypedName",
														"src": "4601:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4613:6:5",
														"nodeType": "YulTypedName",
														"src": "4613:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4621:6:5",
														"nodeType": "YulTypedName",
														"src": "4621:6:5",
														"type": ""
													}
												],
												"src": "4548:468:5"
											},
											{
												"body": {
													"nativeSrc": "5064:52:5",
													"nodeType": "YulBlock",
													"src": "5064:52:5",
													"statements": [
														{
															"nativeSrc": "5074:35:5",
															"nodeType": "YulAssignment",
															"src": "5074:35:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5099:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5099:2:5",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5103:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "5103:5:5"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5095:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5095:3:5"
																},
																"nativeSrc": "5095:14:5",
																"nodeType": "YulFunctionCall",
																"src": "5095:14:5"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5074:8:5",
																	"nodeType": "YulIdentifier",
																	"src": "5074:8:5"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nativeSrc": "5022:94:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5045:5:5",
														"nodeType": "YulTypedName",
														"src": "5045:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5055:8:5",
														"nodeType": "YulTypedName",
														"src": "5055:8:5",
														"type": ""
													}
												],
												"src": "5022:94:5"
											},
											{
												"body": {
													"nativeSrc": "5169:47:5",
													"nodeType": "YulBlock",
													"src": "5169:47:5",
													"statements": [
														{
															"nativeSrc": "5179:31:5",
															"nodeType": "YulAssignment",
															"src": "5179:31:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5204:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "5204:5:5"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nativeSrc": "5190:13:5",
																	"nodeType": "YulIdentifier",
																	"src": "5190:13:5"
																},
																"nativeSrc": "5190:20:5",
																"nodeType": "YulFunctionCall",
																"src": "5190:20:5"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "5179:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "5179:7:5"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nativeSrc": "5122:94:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5151:5:5",
														"nodeType": "YulTypedName",
														"src": "5151:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "5161:7:5",
														"nodeType": "YulTypedName",
														"src": "5161:7:5",
														"type": ""
													}
												],
												"src": "5122:94:5"
											},
											{
												"body": {
													"nativeSrc": "5269:53:5",
													"nodeType": "YulBlock",
													"src": "5269:53:5",
													"statements": [
														{
															"nativeSrc": "5279:37:5",
															"nodeType": "YulAssignment",
															"src": "5279:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5310:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "5310:5:5"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nativeSrc": "5290:19:5",
																	"nodeType": "YulIdentifier",
																	"src": "5290:19:5"
																},
																"nativeSrc": "5290:26:5",
																"nodeType": "YulFunctionCall",
																"src": "5290:26:5"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "5279:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "5279:7:5"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nativeSrc": "5222:100:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5251:5:5",
														"nodeType": "YulTypedName",
														"src": "5251:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "5261:7:5",
														"nodeType": "YulTypedName",
														"src": "5261:7:5",
														"type": ""
													}
												],
												"src": "5222:100:5"
											},
											{
												"body": {
													"nativeSrc": "5411:74:5",
													"nodeType": "YulBlock",
													"src": "5411:74:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5428:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5428:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5471:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "5471:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "5453:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "5453:17:5"
																				},
																				"nativeSrc": "5453:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5453:24:5"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nativeSrc": "5433:19:5",
																			"nodeType": "YulIdentifier",
																			"src": "5433:19:5"
																		},
																		"nativeSrc": "5433:45:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5433:45:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5421:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5421:6:5"
																},
																"nativeSrc": "5421:58:5",
																"nodeType": "YulFunctionCall",
																"src": "5421:58:5"
															},
															"nativeSrc": "5421:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "5421:58:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nativeSrc": "5328:157:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5399:5:5",
														"nodeType": "YulTypedName",
														"src": "5399:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5406:3:5",
														"nodeType": "YulTypedName",
														"src": "5406:3:5",
														"type": ""
													}
												],
												"src": "5328:157:5"
											},
											{
												"body": {
													"nativeSrc": "5635:253:5",
													"nodeType": "YulBlock",
													"src": "5635:253:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5708:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5708:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5717:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5717:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "5646:61:5",
																	"nodeType": "YulIdentifier",
																	"src": "5646:61:5"
																},
																"nativeSrc": "5646:75:5",
																"nodeType": "YulFunctionCall",
																"src": "5646:75:5"
															},
															"nativeSrc": "5646:75:5",
															"nodeType": "YulExpressionStatement",
															"src": "5646:75:5"
														},
														{
															"nativeSrc": "5730:19:5",
															"nodeType": "YulAssignment",
															"src": "5730:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5741:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5741:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5746:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5746:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5737:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5737:3:5"
																},
																"nativeSrc": "5737:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5737:12:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5730:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5730:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5821:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5821:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5830:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5830:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "5759:61:5",
																	"nodeType": "YulIdentifier",
																	"src": "5759:61:5"
																},
																"nativeSrc": "5759:75:5",
																"nodeType": "YulFunctionCall",
																"src": "5759:75:5"
															},
															"nativeSrc": "5759:75:5",
															"nodeType": "YulExpressionStatement",
															"src": "5759:75:5"
														},
														{
															"nativeSrc": "5843:19:5",
															"nodeType": "YulAssignment",
															"src": "5843:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5854:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5854:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5859:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5859:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5850:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5850:3:5"
																},
																"nativeSrc": "5850:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5850:12:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5843:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5843:3:5"
																}
															]
														},
														{
															"nativeSrc": "5872:10:5",
															"nodeType": "YulAssignment",
															"src": "5872:10:5",
															"value": {
																"name": "pos",
																"nativeSrc": "5879:3:5",
																"nodeType": "YulIdentifier",
																"src": "5879:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5872:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5872:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "5491:397:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5606:3:5",
														"nodeType": "YulTypedName",
														"src": "5606:3:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5612:6:5",
														"nodeType": "YulTypedName",
														"src": "5612:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5620:6:5",
														"nodeType": "YulTypedName",
														"src": "5620:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5631:3:5",
														"nodeType": "YulTypedName",
														"src": "5631:3:5",
														"type": ""
													}
												],
												"src": "5491:397:5"
											},
											{
												"body": {
													"nativeSrc": "6020:206:5",
													"nodeType": "YulBlock",
													"src": "6020:206:5",
													"statements": [
														{
															"nativeSrc": "6030:26:5",
															"nodeType": "YulAssignment",
															"src": "6030:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6042:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6042:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6053:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6053:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6038:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6038:3:5"
																},
																"nativeSrc": "6038:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6038:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6030:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6030:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6110:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6110:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6123:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6123:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6134:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6134:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6119:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6119:3:5"
																		},
																		"nativeSrc": "6119:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6119:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6066:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6066:43:5"
																},
																"nativeSrc": "6066:71:5",
																"nodeType": "YulFunctionCall",
																"src": "6066:71:5"
															},
															"nativeSrc": "6066:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "6066:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6191:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6191:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6204:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6204:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6215:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6215:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6200:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6200:3:5"
																		},
																		"nativeSrc": "6200:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6200:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6147:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6147:43:5"
																},
																"nativeSrc": "6147:72:5",
																"nodeType": "YulFunctionCall",
																"src": "6147:72:5"
															},
															"nativeSrc": "6147:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "6147:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "5894:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5984:9:5",
														"nodeType": "YulTypedName",
														"src": "5984:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5996:6:5",
														"nodeType": "YulTypedName",
														"src": "5996:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6004:6:5",
														"nodeType": "YulTypedName",
														"src": "6004:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6015:4:5",
														"nodeType": "YulTypedName",
														"src": "6015:4:5",
														"type": ""
													}
												],
												"src": "5894:332:5"
											},
											{
												"body": {
													"nativeSrc": "6358:206:5",
													"nodeType": "YulBlock",
													"src": "6358:206:5",
													"statements": [
														{
															"nativeSrc": "6368:26:5",
															"nodeType": "YulAssignment",
															"src": "6368:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6380:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6380:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6391:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6391:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6376:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6376:3:5"
																},
																"nativeSrc": "6376:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6376:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6368:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6368:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6448:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6448:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6461:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6461:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6472:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6472:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6457:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6457:3:5"
																		},
																		"nativeSrc": "6457:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6457:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6404:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6404:43:5"
																},
																"nativeSrc": "6404:71:5",
																"nodeType": "YulFunctionCall",
																"src": "6404:71:5"
															},
															"nativeSrc": "6404:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "6404:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6529:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6529:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6542:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6542:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6553:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6553:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6538:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6538:3:5"
																		},
																		"nativeSrc": "6538:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6538:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6485:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6485:43:5"
																},
																"nativeSrc": "6485:72:5",
																"nodeType": "YulFunctionCall",
																"src": "6485:72:5"
															},
															"nativeSrc": "6485:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "6485:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6232:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6322:9:5",
														"nodeType": "YulTypedName",
														"src": "6322:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6334:6:5",
														"nodeType": "YulTypedName",
														"src": "6334:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6342:6:5",
														"nodeType": "YulTypedName",
														"src": "6342:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6353:4:5",
														"nodeType": "YulTypedName",
														"src": "6353:4:5",
														"type": ""
													}
												],
												"src": "6232:332:5"
											},
											{
												"body": {
													"nativeSrc": "6696:206:5",
													"nodeType": "YulBlock",
													"src": "6696:206:5",
													"statements": [
														{
															"nativeSrc": "6706:26:5",
															"nodeType": "YulAssignment",
															"src": "6706:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6718:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6718:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6729:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6729:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6714:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6714:3:5"
																},
																"nativeSrc": "6714:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6714:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6706:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6706:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6786:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6786:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6799:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6799:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6810:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6810:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6795:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6795:3:5"
																		},
																		"nativeSrc": "6795:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6795:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6742:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6742:43:5"
																},
																"nativeSrc": "6742:71:5",
																"nodeType": "YulFunctionCall",
																"src": "6742:71:5"
															},
															"nativeSrc": "6742:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "6742:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6867:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6867:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6880:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6880:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6891:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6891:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6876:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6876:3:5"
																		},
																		"nativeSrc": "6876:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6876:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6823:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6823:43:5"
																},
																"nativeSrc": "6823:72:5",
																"nodeType": "YulFunctionCall",
																"src": "6823:72:5"
															},
															"nativeSrc": "6823:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "6823:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6570:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6660:9:5",
														"nodeType": "YulTypedName",
														"src": "6660:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6672:6:5",
														"nodeType": "YulTypedName",
														"src": "6672:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6680:6:5",
														"nodeType": "YulTypedName",
														"src": "6680:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6691:4:5",
														"nodeType": "YulTypedName",
														"src": "6691:4:5",
														"type": ""
													}
												],
												"src": "6570:332:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_boolt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"193": [
									{
										"length": 32,
										"start": 2660
									},
									{
										"length": 32,
										"start": 3103
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610140575f3560e01c806399d32fc4116100b6578063bcecf81b1161007a578063bcecf81b14610362578063cd1a0dd214610392578063cdb88ad1146103c2578063d0fb0203146103de578063e1f76b44146103fc578063f64ee7651461041857610140565b806399d32fc4146102ba5780639fd0506d146102d8578063a74adceb146102f6578063b187bd2614610326578063bc063e1a1461034457610140565b8063472d35b911610108578063472d35b9146101fa5780634bc2a657146102165780635c60da1b1461023257806367a5279314610250578063830e4eef1461026e578063984fa01f1461029e57610140565b806328a6b3ff146101445780632c3de946146101745780632d88af4a1461019057806338ed1793146101ac57806346c96aac146101dc575b5f5ffd5b61015e60048036038101906101599190611520565b610436565b60405161016b9190611563565b60405180910390f35b61018e600480360381019061018991906115a6565b61044b565b005b6101aa60048036038101906101a59190611520565b610621565b005b6101c660048036038101906101c19190611520565b610786565b6040516101d391906115fe565b60405180910390f35b6101e46107d8565b6040516101f19190611626565b60405180910390f35b610214600480360381019061020f9190611520565b6107fd565b005b610230600480360381019061022b9190611520565b610962565b005b61023a610a62565b6040516102479190611626565b60405180910390f35b610258610a86565b6040516102659190611563565b60405180910390f35b6102886004803603810190610283919061163f565b610a8c565b6040516102959190611626565b60405180910390f35b6102b860048036038101906102b391906115a6565b610e8c565b005b6102c2611062565b6040516102cf9190611563565b60405180910390f35b6102e0611068565b6040516102ed9190611626565b60405180910390f35b610310600480360381019061030b9190611520565b61108d565b60405161031d9190611563565b60405180910390f35b61032e6110a2565b60405161033b91906115fe565b60405180910390f35b61034c6110b3565b6040516103599190611563565b60405180910390f35b61037c6004803603810190610377919061167d565b6110b9565b6040516103899190611626565b60405180910390f35b6103ac60048036038101906103a7919061163f565b6110f4565b6040516103b99190611626565b60405180910390f35b6103dc60048036038101906103d791906116d2565b611195565b005b6103e661126d565b6040516103f39190611626565b60405180910390f35b610416600480360381019061041191906116fd565b611292565b005b6104206113ab565b60405161042d9190611563565b60405180910390f35b6008602052805f5260405f205f915090505481565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104d1576040517ff5d267eb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61012c81111561050d576040517fcd4e616700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1661058d576040517f682a6e7c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff167fce78db41faad8d3a613429389971e6dc25f809f59a4e8467ea2b71c71203ec08826040516106159190611563565b60405180910390a25050565b5f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106a7576040517f492f678100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361070c576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805f60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fe02efb9e8f0fc21546730ab32d594f62d586e1bbb15bb5045edd0b1878a77b358160405161077b9190611626565b60405180910390a150565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610883576040517ff5d267eb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108e8576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f5d0517e3a4eabea892d9750138cd21d4a6cf3b935b43d0598df7055f463819b2816040516109579190611626565b60405180910390a150565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109e8576040517fc18384c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc6ff127433b785c51da9ae4088ee184c909b1a55b9afd82ae6c64224d3bc15d281604051610a579190611626565b60405180910390a150565b7f000000000000000000000000000000000000000000000000000000000000000081565b60015481565b5f5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610af2576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bee576040517f0311932200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8383604051602001610c02929190611780565b604051602081830303815290604052805190602001209050610c447f0000000000000000000000000000000000000000000000000000000000000000826113b7565b91508173ffffffffffffffffffffffffffffffffffffffff1663485cc95585856040518363ffffffff1660e01b8152600401610c819291906117ab565b5f604051808303815f87803b158015610c98575f5ffd5b505af1158015610caa573d5f5f3e3d5ffd5b505050508160055f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600682908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f9a07b2753aaebe71b96e78f64ccced2e2b9ff13d98b3c7784285ef0c31631dbf84600680549050604051610e7d9291906117d2565b60405180910390a35092915050565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f12576040517ff5d267eb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61012c811115610f4e576040517fcd4e616700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610fce576040517f682a6e7c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060095f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff167f6f6bd3c4b38df451f210a585e872b5a0b6de937fda37f0eb0c7731afb4391985826040516110569190611563565b60405180910390a25050565b60025481565b5f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6009602052805f5260405f205f915090505481565b5f5f9054906101000a900460ff1681565b61012c81565b600681815481106110c8575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b5f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461121b576040517f492f678100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805f5f6101000a81548160ff0219169083151502179055507f0d76538efc408318a051137c2720a9e82902acdbd46b802d488b74ca3a09a1168160405161126291906115fe565b60405180910390a150565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611318576040517ff5d267eb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61012c811115611354576040517fcd4e616700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f810361138d576040517faf13986d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b811561139f57806001819055506113a7565b806002819055505b5050565b5f600680549050905090565b5f6113c383835f6113cb565b905092915050565b5f814710156114135747826040517fcf47918100000000000000000000000000000000000000000000000000000000815260040161140a9291906117f9565b60405180910390fd5b763d602d80600a3d3981f3363d3d373d3d3d363d730000008460601b60e81c175f526e5af43d82803e903d91602b57fd5bf38460781b17602052826037600984f590505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114bb576040517fb06ebf3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6114ef826114c6565b9050919050565b6114ff816114e5565b8114611509575f5ffd5b50565b5f8135905061151a816114f6565b92915050565b5f60208284031215611535576115346114c2565b5b5f6115428482850161150c565b91505092915050565b5f819050919050565b61155d8161154b565b82525050565b5f6020820190506115765f830184611554565b92915050565b6115858161154b565b811461158f575f5ffd5b50565b5f813590506115a08161157c565b92915050565b5f5f604083850312156115bc576115bb6114c2565b5b5f6115c98582860161150c565b92505060206115da85828601611592565b9150509250929050565b5f8115159050919050565b6115f8816115e4565b82525050565b5f6020820190506116115f8301846115ef565b92915050565b611620816114e5565b82525050565b5f6020820190506116395f830184611617565b92915050565b5f5f60408385031215611655576116546114c2565b5b5f6116628582860161150c565b92505060206116738582860161150c565b9150509250929050565b5f60208284031215611692576116916114c2565b5b5f61169f84828501611592565b91505092915050565b6116b1816115e4565b81146116bb575f5ffd5b50565b5f813590506116cc816116a8565b92915050565b5f602082840312156116e7576116e66114c2565b5b5f6116f4848285016116be565b91505092915050565b5f5f60408385031215611713576117126114c2565b5b5f611720858286016116be565b925050602061173185828601611592565b9150509250929050565b5f8160601b9050919050565b5f6117518261173b565b9050919050565b5f61176282611747565b9050919050565b61177a611775826114e5565b611758565b82525050565b5f61178b8285611769565b60148201915061179b8284611769565b6014820191508190509392505050565b5f6040820190506117be5f830185611617565b6117cb6020830184611617565b9392505050565b5f6040820190506117e55f830185611617565b6117f26020830184611554565b9392505050565b5f60408201905061180c5f830185611554565b6118196020830184611554565b939250505056fea264697066735822122038ee56af302644c5c3219a67ba759a7e38127d6270da290af901a7e77178f26e64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x140 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x99D32FC4 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xBCECF81B GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xBCECF81B EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0xCD1A0DD2 EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0xCDB88AD1 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0xD0FB0203 EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0xE1F76B44 EQ PUSH2 0x3FC JUMPI DUP1 PUSH4 0xF64EE765 EQ PUSH2 0x418 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x99D32FC4 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x9FD0506D EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xA74ADCEB EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0xB187BD26 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x344 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x472D35B9 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x472D35B9 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x4BC2A657 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x67A52793 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x830E4EEF EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x984FA01F EQ PUSH2 0x29E JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x28A6B3FF EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x2C3DE946 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x2D88AF4A EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x38ED1793 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x46C96AAC EQ PUSH2 0x1DC JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x436 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x15A6 JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x786 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x15FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E4 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x962 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23A PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH2 0xA86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x288 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0xA8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x15A6 JUMP JUMPDEST PUSH2 0xE8C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C2 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E0 PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x310 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x108D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32E PUSH2 0x10A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x15FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34C PUSH2 0x10B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x167D JUMP JUMPDEST PUSH2 0x10B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST PUSH2 0x1195 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E6 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F3 SWAP2 SWAP1 PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x416 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x16FD JUMP JUMPDEST PUSH2 0x1292 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x420 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF5D267EB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12C DUP2 GT ISZERO PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH32 0xCD4E616700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x58D JUMPI PUSH1 0x40 MLOAD PUSH32 0x682A6E7C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCE78DB41FAAD8D3A613429389971E6DC25F809F59A4E8467EA2B71C71203EC08 DUP3 PUSH1 0x40 MLOAD PUSH2 0x615 SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x492F678100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x70C JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xE02EFB9E8F0FC21546730AB32D594F62D586E1BBB15BB5045EDD0B1878A77B35 DUP2 PUSH1 0x40 MLOAD PUSH2 0x77B SWAP2 SWAP1 PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x883 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF5D267EB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x5D0517E3A4EABEA892D9750138CD21D4A6CF3B935B43D0598DF7055F463819B2 DUP2 PUSH1 0x40 MLOAD PUSH2 0x957 SWAP2 SWAP1 PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC18384C100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC6FF127433B785C51DA9AE4088EE184C909B1A55B9AFD82AE6C64224D3BC15D2 DUP2 PUSH1 0x40 MLOAD PUSH2 0xA57 SWAP2 SWAP1 PUSH2 0x1626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBEE JUMPI PUSH1 0x40 MLOAD PUSH32 0x311932200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC02 SWAP3 SWAP2 SWAP1 PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0xC44 PUSH32 0x0 DUP3 PUSH2 0x13B7 JUMP JUMPDEST SWAP2 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x485CC955 DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC81 SWAP3 SWAP2 SWAP1 PUSH2 0x17AB JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC98 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCAA JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP2 PUSH1 0x5 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9A07B2753AAEBE71B96E78F64CCCED2E2B9FF13D98B3C7784285EF0C31631DBF DUP5 PUSH1 0x6 DUP1 SLOAD SWAP1 POP PUSH1 0x40 MLOAD PUSH2 0xE7D SWAP3 SWAP2 SWAP1 PUSH2 0x17D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF12 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF5D267EB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12C DUP2 GT ISZERO PUSH2 0xF4E JUMPI PUSH1 0x40 MLOAD PUSH32 0xCD4E616700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x682A6E7C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6F6BD3C4B38DF451F210A585E872B5A0B6DE937FDA37F0EB0C7731AFB4391985 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1056 SWAP2 SWAP1 PUSH2 0x1563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x12C DUP2 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x10C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x121B JUMPI PUSH1 0x40 MLOAD PUSH32 0x492F678100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xD76538EFC408318A051137C2720A9E82902ACDBD46B802D488B74CA3A09A116 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1262 SWAP2 SWAP1 PUSH2 0x15FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1318 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF5D267EB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12C DUP2 GT ISZERO PUSH2 0x1354 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCD4E616700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0x138D JUMPI PUSH1 0x40 MLOAD PUSH32 0xAF13986D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x139F JUMPI DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x13A7 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x13C3 DUP4 DUP4 PUSH0 PUSH2 0x13CB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SELFBALANCE LT ISZERO PUSH2 0x1413 JUMPI SELFBALANCE DUP3 PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x140A SWAP3 SWAP2 SWAP1 PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP5 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP5 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE DUP3 PUSH1 0x37 PUSH1 0x9 DUP5 CREATE2 SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14BB JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06EBF3D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14EF DUP3 PUSH2 0x14C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14FF DUP2 PUSH2 0x14E5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1509 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x151A DUP2 PUSH2 0x14F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1535 JUMPI PUSH2 0x1534 PUSH2 0x14C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1542 DUP5 DUP3 DUP6 ADD PUSH2 0x150C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x155D DUP2 PUSH2 0x154B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1576 PUSH0 DUP4 ADD DUP5 PUSH2 0x1554 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1585 DUP2 PUSH2 0x154B JUMP JUMPDEST DUP2 EQ PUSH2 0x158F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15A0 DUP2 PUSH2 0x157C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15BC JUMPI PUSH2 0x15BB PUSH2 0x14C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15C9 DUP6 DUP3 DUP7 ADD PUSH2 0x150C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15DA DUP6 DUP3 DUP7 ADD PUSH2 0x1592 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15F8 DUP2 PUSH2 0x15E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1611 PUSH0 DUP4 ADD DUP5 PUSH2 0x15EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1620 DUP2 PUSH2 0x14E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1639 PUSH0 DUP4 ADD DUP5 PUSH2 0x1617 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x14C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1662 DUP6 DUP3 DUP7 ADD PUSH2 0x150C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1673 DUP6 DUP3 DUP7 ADD PUSH2 0x150C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1692 JUMPI PUSH2 0x1691 PUSH2 0x14C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x169F DUP5 DUP3 DUP6 ADD PUSH2 0x1592 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16B1 DUP2 PUSH2 0x15E4 JUMP JUMPDEST DUP2 EQ PUSH2 0x16BB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16CC DUP2 PUSH2 0x16A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16E7 JUMPI PUSH2 0x16E6 PUSH2 0x14C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16F4 DUP5 DUP3 DUP6 ADD PUSH2 0x16BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1713 JUMPI PUSH2 0x1712 PUSH2 0x14C2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1720 DUP6 DUP3 DUP7 ADD PUSH2 0x16BE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1731 DUP6 DUP3 DUP7 ADD PUSH2 0x1592 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1751 DUP3 PUSH2 0x173B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1762 DUP3 PUSH2 0x1747 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x177A PUSH2 0x1775 DUP3 PUSH2 0x14E5 JUMP JUMPDEST PUSH2 0x1758 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x178B DUP3 DUP6 PUSH2 0x1769 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x179B DUP3 DUP5 PUSH2 0x1769 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x17BE PUSH0 DUP4 ADD DUP6 PUSH2 0x1617 JUMP JUMPDEST PUSH2 0x17CB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1617 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x17E5 PUSH0 DUP4 ADD DUP6 PUSH2 0x1617 JUMP JUMPDEST PUSH2 0x17F2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1554 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x180C PUSH0 DUP4 ADD DUP6 PUSH2 0x1554 JUMP JUMPDEST PUSH2 0x1819 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1554 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0xEE JUMP 0xAF ADDRESS 0x26 PREVRANDAO 0xC5 0xC3 0x21 SWAP11 PUSH8 0xBA759A7E38127D62 PUSH17 0xDA290AF901A7E77178F26E64736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "202:4423:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;711:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2924:434;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1820:227;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1495:109;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;512:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2236:263;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1651:161;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;257:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;366:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3880:742;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3405:428;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;398:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;332:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;769:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;305:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;428:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;622:30;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1310:138;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2055:173;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;480:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2550:327;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1154:109;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;711:51;;;;;;;;;;;;;;;;;:::o;2924:434::-;3023:10;;;;;;;;;;;3009:24;;:10;:24;;;3005:52;;3042:15;;;;;;;;;;;;;;3005:52;462:3;3153;:13;3149:38;;;3175:12;;;;;;;;;;;;;;3149:38;3203:12;:23;3216:9;3203:23;;;;;;;;;;;;;;;;;;;;;;;;;3198:55;;3235:18;;;;;;;;;;;;;;3198:55;3296:3;3266:16;:27;3283:9;3266:27;;;;;;;;;;;;;;;:33;;;;3335:9;3315:35;;;3346:3;3315:35;;;;;;:::i;:::-;;;;;;;;2924:434;;:::o;1820:227::-;1894:6;;;;;;;;;;;1880:20;;:10;:20;;;1876:44;;1909:11;;;;;;;;;;;;;;1876:44;1954:1;1935:21;;:7;:21;;;1931:47;;1965:13;;;;;;;;;;;;;;1931:47;1998:7;1989:6;;:16;;;;;;;;;;;;;;;;;;2021:18;2031:7;2021:18;;;;;;:::i;:::-;;;;;;;;1820:227;:::o;1495:109::-;1554:4;1578:12;:18;1591:4;1578:18;;;;;;;;;;;;;;;;;;;;;;;;;1571:25;;1495:109;;;:::o;512:20::-;;;;;;;;;;;;;:::o;2236:263::-;2318:10;;;;;;;;;;;2304:24;;:10;:24;;;2300:52;;2337:15;;;;;;;;;;;;;;2300:52;2390:1;2367:25;;:11;:25;;;2363:51;;2401:13;;;;;;;;;;;;;;2363:51;2438:11;2425:10;;:24;;;;;;;;;;;;;;;;;;2465:26;2479:11;2465:26;;;;;;:::i;:::-;;;;;;;;2236:263;:::o;1651:161::-;1723:5;;;;;;;;;;;1709:19;;:10;:19;;;1705:42;;1737:10;;;;;;;;;;;;;;1705:42;1766:6;1758:5;;:14;;;;;;;;;;;;;;;;;;1788:16;1797:6;1788:16;;;;;;:::i;:::-;;;;;;;;1651:161;:::o;257:39::-;;;:::o;366:25::-;;;;:::o;3880:742::-;3953:17;4005:1;3987:20;;:6;:20;;;3983:46;;4016:13;;;;;;;;;;;;;;3983:46;4088:1;4046:44;;:14;:22;4061:6;4046:22;;;;;;;;;;;;;;;:30;4069:6;4046:30;;;;;;;;;;;;;;;;;;;;;;;;;:44;;;4042:76;;4099:19;;;;;;;;;;;;;;4042:76;4131:12;4173:6;4181;4156:32;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4146:43;;;;;;4131:58;;4267:47;4293:14;4309:4;4267:25;:47::i;:::-;4255:59;;4346:9;4335:32;;;4368:6;4376;4335:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4437:9;4404:14;:22;4419:6;4404:22;;;;;;;;;;;;;;;:30;4427:6;4404:30;;;;;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;4459:13;4478:9;4459:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4527:4;4501:12;:23;4514:9;4501:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;4574:6;4549:65;;4566:6;4549:65;;;4582:9;4593:13;:20;;;;4549:65;;;;;;;:::i;:::-;;;;;;;;3972:650;3880:742;;;;:::o;3405:428::-;3502:10;;;;;;;;;;;3488:24;;:10;:24;;;3484:52;;3521:15;;;;;;;;;;;;;;3484:52;462:3;3632;:13;3628:38;;;3654:12;;;;;;;;;;;;;;3628:38;3682:12;:23;3695:9;3682:23;;;;;;;;;;;;;;;;;;;;;;;;;3677:55;;3714:18;;;;;;;;;;;;;;3677:55;3773:3;3745:14;:25;3760:9;3745:25;;;;;;;;;;;;;;;:31;;;;3810:9;3792:33;;;3821:3;3792:33;;;;;;:::i;:::-;;;;;;;;3405:428;;:::o;398:23::-;;;;:::o;332:21::-;;;;;;;;;;;;;:::o;769:49::-;;;;;;;;;;;;;;;;;:::o;305:20::-;;;;;;;;;;;;;:::o;428:37::-;462:3;428:37;:::o;622:30::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1310:138::-;1385:7;1412:14;:21;1427:5;1412:21;;;;;;;;;;;;;;;:28;1434:5;1412:28;;;;;;;;;;;;;;;;;;;;;;;;;1405:35;;1310:138;;;;:::o;2055:173::-;2129:6;;;;;;;;;;;2115:20;;:10;:20;;;2111:44;;2144:11;;;;;;;;;;;;;;2111:44;2177:6;2166:8;;:17;;;;;;;;;;;;;;;;;;2199:21;2213:6;2199:21;;;;;;:::i;:::-;;;;;;;;2055:173;:::o;480:25::-;;;;;;;;;;;;;:::o;2550:327::-;2630:10;;;;;;;;;;;2616:24;;:10;:24;;;2612:52;;2649:15;;;;;;;;;;;;;;2612:52;462:3;2679:4;:14;2675:39;;;2702:12;;;;;;;;;;;;;;2675:39;2737:1;2729:4;:9;2725:31;;2747:9;;;;;;;;;;;;;;2725:31;2771:5;2767:103;;;2806:4;2793:10;:17;;;;2767:103;;;2854:4;2843:8;:15;;;;2767:103;2550:327;;:::o;1154:109::-;1208:7;1235:13;:20;;;;1228:27;;1154:109;:::o;2789:169:0:-;2873:16;2908:43;2927:14;2943:4;2949:1;2908:18;:43::i;:::-;2901:50;;2789:169;;;;:::o;3384:974::-;3513:16;3569:5;3545:21;:29;3541:123;;;3624:21;3647:5;3597:56;;;;;;;;;;;;:::i;:::-;;;;;;;;3541:123;3950:48;3932:14;3926:4;3922:25;3916:4;3912:36;3909:90;3903:4;3896:104;4157:32;4140:14;4134:4;4130:25;4127:63;4121:4;4114:77;4243:4;4237;4231;4224:5;4216:32;4204:44;;4291:1;4271:22;;:8;:22;;;4267:85;;4316:25;;;;;;;;;;;;;;4267:85;3384:974;;;;;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:474::-;1952:6;1960;2009:2;1997:9;1988:7;1984:23;1980:32;1977:119;;;2015:79;;:::i;:::-;1977:119;2135:1;2160:53;2205:7;2196:6;2185:9;2181:22;2160:53;:::i;:::-;2150:63;;2106:117;2262:2;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2233:118;1884:474;;;;;:::o;2364:90::-;2398:7;2441:5;2434:13;2427:21;2416:32;;2364:90;;;:::o;2460:109::-;2541:21;2556:5;2541:21;:::i;:::-;2536:3;2529:34;2460:109;;:::o;2575:210::-;2662:4;2700:2;2689:9;2685:18;2677:26;;2713:65;2775:1;2764:9;2760:17;2751:6;2713:65;:::i;:::-;2575:210;;;;:::o;2791:118::-;2878:24;2896:5;2878:24;:::i;:::-;2873:3;2866:37;2791:118;;:::o;2915:222::-;3008:4;3046:2;3035:9;3031:18;3023:26;;3059:71;3127:1;3116:9;3112:17;3103:6;3059:71;:::i;:::-;2915:222;;;;:::o;3143:474::-;3211:6;3219;3268:2;3256:9;3247:7;3243:23;3239:32;3236:119;;;3274:79;;:::i;:::-;3236:119;3394:1;3419:53;3464:7;3455:6;3444:9;3440:22;3419:53;:::i;:::-;3409:63;;3365:117;3521:2;3547:53;3592:7;3583:6;3572:9;3568:22;3547:53;:::i;:::-;3537:63;;3492:118;3143:474;;;;;:::o;3623:329::-;3682:6;3731:2;3719:9;3710:7;3706:23;3702:32;3699:119;;;3737:79;;:::i;:::-;3699:119;3857:1;3882:53;3927:7;3918:6;3907:9;3903:22;3882:53;:::i;:::-;3872:63;;3828:117;3623:329;;;;:::o;3958:116::-;4028:21;4043:5;4028:21;:::i;:::-;4021:5;4018:32;4008:60;;4064:1;4061;4054:12;4008:60;3958:116;:::o;4080:133::-;4123:5;4161:6;4148:20;4139:29;;4177:30;4201:5;4177:30;:::i;:::-;4080:133;;;;:::o;4219:323::-;4275:6;4324:2;4312:9;4303:7;4299:23;4295:32;4292:119;;;4330:79;;:::i;:::-;4292:119;4450:1;4475:50;4517:7;4508:6;4497:9;4493:22;4475:50;:::i;:::-;4465:60;;4421:114;4219:323;;;;:::o;4548:468::-;4613:6;4621;4670:2;4658:9;4649:7;4645:23;4641:32;4638:119;;;4676:79;;:::i;:::-;4638:119;4796:1;4821:50;4863:7;4854:6;4843:9;4839:22;4821:50;:::i;:::-;4811:60;;4767:114;4920:2;4946:53;4991:7;4982:6;4971:9;4967:22;4946:53;:::i;:::-;4936:63;;4891:118;4548:468;;;;;:::o;5022:94::-;5055:8;5103:5;5099:2;5095:14;5074:35;;5022:94;;;:::o;5122:::-;5161:7;5190:20;5204:5;5190:20;:::i;:::-;5179:31;;5122:94;;;:::o;5222:100::-;5261:7;5290:26;5310:5;5290:26;:::i;:::-;5279:37;;5222:100;;;:::o;5328:157::-;5433:45;5453:24;5471:5;5453:24;:::i;:::-;5433:45;:::i;:::-;5428:3;5421:58;5328:157;;:::o;5491:397::-;5631:3;5646:75;5717:3;5708:6;5646:75;:::i;:::-;5746:2;5741:3;5737:12;5730:19;;5759:75;5830:3;5821:6;5759:75;:::i;:::-;5859:2;5854:3;5850:12;5843:19;;5879:3;5872:10;;5491:397;;;;;:::o;5894:332::-;6015:4;6053:2;6042:9;6038:18;6030:26;;6066:71;6134:1;6123:9;6119:17;6110:6;6066:71;:::i;:::-;6147:72;6215:2;6204:9;6200:18;6191:6;6147:72;:::i;:::-;5894:332;;;;;:::o;6232:::-;6353:4;6391:2;6380:9;6376:18;6368:26;;6404:71;6472:1;6461:9;6457:17;6448:6;6404:71;:::i;:::-;6485:72;6553:2;6542:9;6538:18;6529:6;6485:72;:::i;:::-;6232:332;;;;;:::o;6570:::-;6691:4;6729:2;6718:9;6714:18;6706:26;;6742:71;6810:1;6799:9;6795:17;6786:6;6742:71;:::i;:::-;6823:72;6891:2;6880:9;6876:18;6867:6;6823:72;:::i;:::-;6570:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1246000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MAX_FEE()": "436",
								"allValidators(uint256)": "4966",
								"allValidatorsLength()": "2572",
								"claimFee()": "2448",
								"createValidator(address,address)": "infinite",
								"customClaimFee(address)": "2869",
								"customDepositFee(address)": "2826",
								"depositFee()": "2514",
								"feeManager()": "2596",
								"getValidator(address,address)": "infinite",
								"implementation()": "infinite",
								"isPaused()": "2554",
								"isValidatorl(address)": "2960",
								"pauser()": "2603",
								"setClaimCustomFee(address,uint256)": "infinite",
								"setDepositCustomFee(address,uint256)": "infinite",
								"setFee(bool,uint256)": "25049",
								"setFeeManager(address)": "infinite",
								"setPauseState(bool)": "infinite",
								"setPauser(address)": "infinite",
								"setVoter(address)": "infinite",
								"voter()": "2620"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 4625,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 202,
									"end": 4625,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 202,
									"end": 4625,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 833,
									"end": 1107,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 898,
									"end": 913,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 881,
									"end": 913,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 881,
									"end": 913,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 881,
									"end": 913,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 881,
									"end": 913,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 881,
									"end": 913,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 881,
									"end": 913,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 881,
									"end": 913,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 881,
									"end": 913,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 881,
									"end": 913,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 881,
									"end": 913,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 932,
									"end": 942,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 924,
									"end": 929,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 924,
									"end": 929,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 924,
									"end": 942,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 924,
									"end": 942,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 924,
									"end": 942,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 924,
									"end": 942,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 924,
									"end": 942,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 924,
									"end": 942,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 924,
									"end": 942,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 924,
									"end": 942,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 924,
									"end": 942,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 924,
									"end": 942,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 924,
									"end": 942,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 924,
									"end": 942,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 924,
									"end": 942,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 924,
									"end": 942,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 924,
									"end": 942,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 924,
									"end": 942,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 924,
									"end": 942,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 924,
									"end": 942,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 962,
									"end": 972,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 953,
									"end": 959,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 953,
									"end": 959,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 953,
									"end": 972,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 953,
									"end": 972,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 953,
									"end": 972,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 953,
									"end": 972,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 953,
									"end": 972,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 953,
									"end": 972,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 953,
									"end": 972,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 953,
									"end": 972,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 953,
									"end": 972,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 953,
									"end": 972,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 953,
									"end": 972,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 953,
									"end": 972,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 953,
									"end": 972,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 953,
									"end": 972,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 953,
									"end": 972,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 953,
									"end": 972,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 953,
									"end": 972,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 953,
									"end": 972,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1006,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 983,
									"end": 993,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 983,
									"end": 993,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 983,
									"end": 1006,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 983,
									"end": 1006,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1006,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1006,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1006,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1006,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 983,
									"end": 1006,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1006,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1006,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1006,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1006,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1006,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 983,
									"end": 1006,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1006,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1006,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1006,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1006,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 983,
									"end": 1006,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1033,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1017,
									"end": 1025,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1017,
									"end": 1025,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1017,
									"end": 1033,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1017,
									"end": 1033,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1017,
									"end": 1033,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1017,
									"end": 1033,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1017,
									"end": 1033,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1017,
									"end": 1033,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1017,
									"end": 1033,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1017,
									"end": 1033,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1017,
									"end": 1033,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1017,
									"end": 1033,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1017,
									"end": 1033,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1017,
									"end": 1033,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1017,
									"end": 1033,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1017,
									"end": 1033,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1017,
									"end": 1033,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1017,
									"end": 1033,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1017,
									"end": 1033,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1017,
									"end": 1033,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1057,
									"end": 1058,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1044,
									"end": 1054,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1044,
									"end": 1058,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1044,
									"end": 1058,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1044,
									"end": 1058,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1044,
									"end": 1058,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1089,
									"end": 1091,
									"name": "PUSH",
									"source": 2,
									"value": "1E"
								},
								{
									"begin": 1078,
									"end": 1086,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1078,
									"end": 1091,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1078,
									"end": 1091,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1078,
									"end": 1091,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1078,
									"end": 1091,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 833,
									"end": 1107,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 202,
									"end": 4625,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 202,
									"end": 4625,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 202,
									"end": 4625,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 202,
									"end": 4625,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 202,
									"end": 4625,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 202,
									"end": 4625,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 202,
									"end": 4625,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 4625,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 4625,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 4625,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 202,
									"end": 4625,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 4625,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "193"
								},
								{
									"begin": 202,
									"end": 4625,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 4625,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 4625,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122038ee56af302644c5c3219a67ba759a7e38127d6270da290af901a7e77178f26e64736f6c634300081c0033",
									".code": [
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "99D32FC4"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "BCECF81B"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "BCECF81B"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "CD1A0DD2"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "CDB88AD1"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "D0FB0203"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "E1F76B44"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "F64EE765"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "99D32FC4"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "9FD0506D"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "A74ADCEB"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "B187BD26"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "BC063E1A"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "472D35B9"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "472D35B9"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "4BC2A657"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "5C60DA1B"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "67A52793"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "830E4EEF"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "984FA01F"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "28A6B3FF"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "2C3DE946"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "2D88AF4A"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "38ED1793"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "46C96AAC"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 4625,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 711,
											"end": 762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 711,
											"end": 762,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 711,
											"end": 762,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 711,
											"end": 762,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 711,
											"end": 762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 711,
											"end": 762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 711,
											"end": 762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 711,
											"end": 762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 711,
											"end": 762,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 711,
											"end": 762,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 711,
											"end": 762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 711,
											"end": 762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 711,
											"end": 762,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 3358,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2924,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2924,
											"end": 3358,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2924,
											"end": 3358,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 3358,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 3358,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 3358,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 3358,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 3358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2924,
											"end": 3358,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 3358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2924,
											"end": 3358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 3358,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2924,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2924,
											"end": 3358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 3358,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2924,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 3358,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1820,
											"end": 2047,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1820,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1820,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1820,
											"end": 2047,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1820,
											"end": 2047,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1820,
											"end": 2047,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1820,
											"end": 2047,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1820,
											"end": 2047,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1820,
											"end": 2047,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1820,
											"end": 2047,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1820,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1820,
											"end": 2047,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1820,
											"end": 2047,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1820,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1820,
											"end": 2047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1820,
											"end": 2047,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1820,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1820,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1820,
											"end": 2047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1820,
											"end": 2047,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1820,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1820,
											"end": 2047,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1495,
											"end": 1604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1495,
											"end": 1604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1495,
											"end": 1604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 512,
											"end": 532,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 512,
											"end": 532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 512,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 512,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 512,
											"end": 532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 512,
											"end": 532,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 512,
											"end": 532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 512,
											"end": 532,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 512,
											"end": 532,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 512,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 512,
											"end": 532,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 512,
											"end": 532,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 512,
											"end": 532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 512,
											"end": 532,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 512,
											"end": 532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 512,
											"end": 532,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 512,
											"end": 532,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 512,
											"end": 532,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 532,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 512,
											"end": 532,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 512,
											"end": 532,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 532,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2236,
											"end": 2499,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2236,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2236,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2236,
											"end": 2499,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2236,
											"end": 2499,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2236,
											"end": 2499,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2236,
											"end": 2499,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2236,
											"end": 2499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2236,
											"end": 2499,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2236,
											"end": 2499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2236,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2236,
											"end": 2499,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2236,
											"end": 2499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2236,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2236,
											"end": 2499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2236,
											"end": 2499,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2236,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2236,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2236,
											"end": 2499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2236,
											"end": 2499,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2236,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2236,
											"end": 2499,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1812,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1651,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1651,
											"end": 1812,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1651,
											"end": 1812,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1812,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1812,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1812,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1651,
											"end": 1812,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1651,
											"end": 1812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1812,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1651,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1651,
											"end": 1812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1812,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1651,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1812,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 257,
											"end": 296,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 257,
											"end": 296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 257,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 257,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 257,
											"end": 296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 257,
											"end": 296,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 257,
											"end": 296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 257,
											"end": 296,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 257,
											"end": 296,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 257,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 257,
											"end": 296,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 257,
											"end": 296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 257,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 257,
											"end": 296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 257,
											"end": 296,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 257,
											"end": 296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 257,
											"end": 296,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 257,
											"end": 296,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 257,
											"end": 296,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 257,
											"end": 296,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 257,
											"end": 296,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 257,
											"end": 296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 257,
											"end": 296,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 366,
											"end": 391,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 366,
											"end": 391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 366,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 366,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 366,
											"end": 391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 366,
											"end": 391,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 366,
											"end": 391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 366,
											"end": 391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 366,
											"end": 391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 366,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 366,
											"end": 391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 366,
											"end": 391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 366,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 366,
											"end": 391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 366,
											"end": 391,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 366,
											"end": 391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 366,
											"end": 391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 366,
											"end": 391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 366,
											"end": 391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 366,
											"end": 391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 366,
											"end": 391,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 366,
											"end": 391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 366,
											"end": 391,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3880,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3880,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3880,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3833,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3405,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3405,
											"end": 3833,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3833,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3833,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3833,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3833,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3833,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3833,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3405,
											"end": 3833,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3833,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3405,
											"end": 3833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3833,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3405,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3405,
											"end": 3833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3833,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3405,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3833,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 398,
											"end": 421,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 398,
											"end": 421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 398,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 398,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 398,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 398,
											"end": 421,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 398,
											"end": 421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 398,
											"end": 421,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 398,
											"end": 421,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 398,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 398,
											"end": 421,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 398,
											"end": 421,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 398,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 398,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 398,
											"end": 421,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 398,
											"end": 421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 398,
											"end": 421,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 398,
											"end": 421,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 398,
											"end": 421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 398,
											"end": 421,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 398,
											"end": 421,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 398,
											"end": 421,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 398,
											"end": 421,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 332,
											"end": 353,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 332,
											"end": 353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 332,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 332,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 332,
											"end": 353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 332,
											"end": 353,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 332,
											"end": 353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 332,
											"end": 353,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 332,
											"end": 353,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 332,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 332,
											"end": 353,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 332,
											"end": 353,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 332,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 332,
											"end": 353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 332,
											"end": 353,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 332,
											"end": 353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 332,
											"end": 353,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 332,
											"end": 353,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 332,
											"end": 353,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 332,
											"end": 353,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 332,
											"end": 353,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 332,
											"end": 353,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 332,
											"end": 353,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 769,
											"end": 818,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 769,
											"end": 818,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 769,
											"end": 818,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 769,
											"end": 818,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 769,
											"end": 818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 769,
											"end": 818,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 769,
											"end": 818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 769,
											"end": 818,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 818,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 769,
											"end": 818,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 769,
											"end": 818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 769,
											"end": 818,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 818,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 305,
											"end": 325,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 305,
											"end": 325,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 305,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 305,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 305,
											"end": 325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 305,
											"end": 325,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 305,
											"end": 325,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 305,
											"end": 325,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 305,
											"end": 325,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 305,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 305,
											"end": 325,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 305,
											"end": 325,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 305,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 305,
											"end": 325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 305,
											"end": 325,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 305,
											"end": 325,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 305,
											"end": 325,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 305,
											"end": 325,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 305,
											"end": 325,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 305,
											"end": 325,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 305,
											"end": 325,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 305,
											"end": 325,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 305,
											"end": 325,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 428,
											"end": 465,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 428,
											"end": 465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 428,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 428,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 428,
											"end": 465,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 428,
											"end": 465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 428,
											"end": 465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 428,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 428,
											"end": 465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 428,
											"end": 465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 428,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 428,
											"end": 465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 428,
											"end": 465,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 428,
											"end": 465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 428,
											"end": 465,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 465,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 428,
											"end": 465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 428,
											"end": 465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 428,
											"end": 465,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 428,
											"end": 465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 428,
											"end": 465,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 622,
											"end": 652,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 622,
											"end": 652,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 622,
											"end": 652,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 622,
											"end": 652,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 622,
											"end": 652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 622,
											"end": 652,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 622,
											"end": 652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 622,
											"end": 652,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 652,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 622,
											"end": 652,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 622,
											"end": 652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 622,
											"end": 652,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 652,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1310,
											"end": 1448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1310,
											"end": 1448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1310,
											"end": 1448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2228,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2055,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2055,
											"end": 2228,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2055,
											"end": 2228,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2228,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2228,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2228,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2228,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2228,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2055,
											"end": 2228,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2228,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2055,
											"end": 2228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2228,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2055,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2055,
											"end": 2228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2228,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2055,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2228,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 480,
											"end": 505,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 480,
											"end": 505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 480,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 480,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 480,
											"end": 505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 480,
											"end": 505,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 480,
											"end": 505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 480,
											"end": 505,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 505,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 480,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 480,
											"end": 505,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 480,
											"end": 505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 480,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 480,
											"end": 505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 480,
											"end": 505,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 480,
											"end": 505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 480,
											"end": 505,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 505,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 480,
											"end": 505,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 480,
											"end": 505,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 480,
											"end": 505,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 480,
											"end": 505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 480,
											"end": 505,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2877,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2550,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2550,
											"end": 2877,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2550,
											"end": 2877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2877,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2877,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2550,
											"end": 2877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2550,
											"end": 2877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2877,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2550,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2550,
											"end": 2877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2877,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2550,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2877,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1263,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1154,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1154,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1154,
											"end": 1263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1263,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1154,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1154,
											"end": 1263,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1154,
											"end": 1263,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1154,
											"end": 1263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1263,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1154,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1154,
											"end": 1263,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1263,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1263,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1263,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1263,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 711,
											"end": 762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 711,
											"end": 762,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 711,
											"end": 762,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 762,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 711,
											"end": 762,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 762,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 762,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 711,
											"end": 762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 3358,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2924,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3033,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3023,
											"end": 3033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3033,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3033,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3023,
											"end": 3033,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3033,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3023,
											"end": 3033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3023,
											"end": 3033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3009,
											"end": 3033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3019,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3009,
											"end": 3033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3033,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3005,
											"end": 3057,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3042,
											"end": 3057,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3042,
											"end": 3057,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3042,
											"end": 3057,
											"name": "PUSH",
											"source": 2,
											"value": "F5D267EB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3042,
											"end": 3057,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3042,
											"end": 3057,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3042,
											"end": 3057,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3042,
											"end": 3057,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3042,
											"end": 3057,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3042,
											"end": 3057,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3042,
											"end": 3057,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3042,
											"end": 3057,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3042,
											"end": 3057,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3042,
											"end": 3057,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3042,
											"end": 3057,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3057,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3005,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 462,
											"end": 465,
											"name": "PUSH",
											"source": 2,
											"value": "12C"
										},
										{
											"begin": 3153,
											"end": 3156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3166,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3149,
											"end": 3187,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3149,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3149,
											"end": 3187,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3175,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3175,
											"end": 3187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3175,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "CD4E616700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3175,
											"end": 3187,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3175,
											"end": 3187,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3175,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3175,
											"end": 3187,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3175,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3175,
											"end": 3187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3175,
											"end": 3187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3175,
											"end": 3187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3175,
											"end": 3187,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3175,
											"end": 3187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3175,
											"end": 3187,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3149,
											"end": 3187,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3149,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3215,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3203,
											"end": 3226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3216,
											"end": 3225,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3226,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3203,
											"end": 3226,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3226,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3203,
											"end": 3226,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3226,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3226,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3226,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3203,
											"end": 3226,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3226,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3226,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3226,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3203,
											"end": 3226,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3226,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3226,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3226,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3203,
											"end": 3226,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3226,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3226,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3203,
											"end": 3226,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3198,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3198,
											"end": 3253,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "PUSH",
											"source": 2,
											"value": "682A6E7C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3198,
											"end": 3253,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3198,
											"end": 3253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3266,
											"end": 3282,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3266,
											"end": 3293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3283,
											"end": 3292,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3266,
											"end": 3293,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3266,
											"end": 3293,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3266,
											"end": 3293,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3266,
											"end": 3293,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3266,
											"end": 3293,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3266,
											"end": 3293,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3266,
											"end": 3293,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3266,
											"end": 3293,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3266,
											"end": 3293,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3266,
											"end": 3293,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3266,
											"end": 3293,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3266,
											"end": 3293,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3266,
											"end": 3293,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3266,
											"end": 3293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3266,
											"end": 3293,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3266,
											"end": 3299,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3266,
											"end": 3299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3266,
											"end": 3299,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3266,
											"end": 3299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3335,
											"end": 3344,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3350,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3315,
											"end": 3350,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3350,
											"name": "PUSH",
											"source": 2,
											"value": "CE78DB41FAAD8D3A613429389971E6DC25F809F59A4E8467EA2B71C71203EC08"
										},
										{
											"begin": 3346,
											"end": 3349,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3350,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3350,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3315,
											"end": 3350,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3350,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3315,
											"end": 3350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3350,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3315,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3350,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3350,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3350,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3350,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3350,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3350,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3350,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 3358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 3358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 3358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1820,
											"end": 2047,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1820,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 1900,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1900,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1894,
											"end": 1900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 1900,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 1900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 1900,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1894,
											"end": 1900,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 1900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 1900,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 1900,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1894,
											"end": 1900,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 1900,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1880,
											"end": 1900,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 1890,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 1900,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1880,
											"end": 1900,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 1900,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1876,
											"end": 1920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1876,
											"end": 1920,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1920,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1909,
											"end": 1920,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1920,
											"name": "PUSH",
											"source": 2,
											"value": "492F678100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1909,
											"end": 1920,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1920,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1920,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1909,
											"end": 1920,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1920,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1909,
											"end": 1920,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1920,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1920,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1920,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1920,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1876,
											"end": 1920,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1876,
											"end": 1920,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1954,
											"end": 1955,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 1956,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1935,
											"end": 1956,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1935,
											"end": 1942,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1935,
											"end": 1956,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1935,
											"end": 1956,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1935,
											"end": 1956,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1931,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1931,
											"end": 1978,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1965,
											"end": 1978,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1965,
											"end": 1978,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1965,
											"end": 1978,
											"name": "PUSH",
											"source": 2,
											"value": "D92E233D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1965,
											"end": 1978,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1965,
											"end": 1978,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1965,
											"end": 1978,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1965,
											"end": 1978,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1965,
											"end": 1978,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1965,
											"end": 1978,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1965,
											"end": 1978,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1965,
											"end": 1978,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1965,
											"end": 1978,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1965,
											"end": 1978,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1965,
											"end": 1978,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1931,
											"end": 1978,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 1931,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1998,
											"end": 2005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2021,
											"end": 2039,
											"name": "PUSH",
											"source": 2,
											"value": "E02EFB9E8F0FC21546730AB32D594F62D586E1BBB15BB5045EDD0B1878A77B35"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2021,
											"end": 2039,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2039,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2021,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2021,
											"end": 2039,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2021,
											"end": 2039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2021,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2021,
											"end": 2039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2021,
											"end": 2039,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2021,
											"end": 2039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2021,
											"end": 2039,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2039,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2021,
											"end": 2039,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2021,
											"end": 2039,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2021,
											"end": 2039,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2021,
											"end": 2039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2021,
											"end": 2039,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 1820,
											"end": 2047,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1820,
											"end": 2047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1558,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1578,
											"end": 1596,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1591,
											"end": 1595,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1596,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1578,
											"end": 1596,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1596,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1578,
											"end": 1596,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1596,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1596,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1578,
											"end": 1596,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1596,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1596,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1596,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1578,
											"end": 1596,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1596,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1578,
											"end": 1596,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1596,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1578,
											"end": 1596,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1596,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1596,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1596,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1578,
											"end": 1596,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1596,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1596,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1596,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1578,
											"end": 1596,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1596,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1495,
											"end": 1604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 512,
											"end": 532,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 512,
											"end": 532,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 512,
											"end": 532,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 512,
											"end": 532,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 512,
											"end": 532,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 532,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 512,
											"end": 532,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 532,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 512,
											"end": 532,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 512,
											"end": 532,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 512,
											"end": 532,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 512,
											"end": 532,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 532,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 512,
											"end": 532,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 512,
											"end": 532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2236,
											"end": 2499,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2236,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2328,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2318,
											"end": 2328,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2318,
											"end": 2328,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2328,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2328,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2328,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2318,
											"end": 2328,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2328,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2328,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2328,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2318,
											"end": 2328,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2304,
											"end": 2328,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2304,
											"end": 2328,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2304,
											"end": 2314,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2304,
											"end": 2328,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2304,
											"end": 2328,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2304,
											"end": 2328,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2300,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2300,
											"end": 2352,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2337,
											"end": 2352,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2337,
											"end": 2352,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2337,
											"end": 2352,
											"name": "PUSH",
											"source": 2,
											"value": "F5D267EB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2337,
											"end": 2352,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2337,
											"end": 2352,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2337,
											"end": 2352,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2337,
											"end": 2352,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2337,
											"end": 2352,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2337,
											"end": 2352,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2337,
											"end": 2352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2337,
											"end": 2352,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2337,
											"end": 2352,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2337,
											"end": 2352,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2337,
											"end": 2352,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2300,
											"end": 2352,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2300,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2391,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2392,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2367,
											"end": 2392,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2378,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2392,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2367,
											"end": 2392,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2392,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2363,
											"end": 2414,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2401,
											"end": 2414,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2414,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2401,
											"end": 2414,
											"name": "PUSH",
											"source": 2,
											"value": "D92E233D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2401,
											"end": 2414,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2401,
											"end": 2414,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2401,
											"end": 2414,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2401,
											"end": 2414,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2401,
											"end": 2414,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2414,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2401,
											"end": 2414,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2401,
											"end": 2414,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2401,
											"end": 2414,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2401,
											"end": 2414,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2401,
											"end": 2414,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2363,
											"end": 2414,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2363,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2449,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2435,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2425,
											"end": 2435,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2425,
											"end": 2449,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2425,
											"end": 2449,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2449,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2449,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2449,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2449,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2425,
											"end": 2449,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2449,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2449,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2449,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2449,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2449,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2425,
											"end": 2449,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2449,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2449,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2449,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2449,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2465,
											"end": 2491,
											"name": "PUSH",
											"source": 2,
											"value": "5D0517E3A4EABEA892D9750138CD21D4A6CF3B935B43D0598DF7055F463819B2"
										},
										{
											"begin": 2479,
											"end": 2490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2465,
											"end": 2491,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2465,
											"end": 2491,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2465,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2465,
											"end": 2491,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2465,
											"end": 2491,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2465,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2465,
											"end": 2491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2465,
											"end": 2491,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2465,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2465,
											"end": 2491,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2465,
											"end": 2491,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2465,
											"end": 2491,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2465,
											"end": 2491,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2465,
											"end": 2491,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2465,
											"end": 2491,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2465,
											"end": 2491,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2236,
											"end": 2499,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2236,
											"end": 2499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1812,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1651,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1723,
											"end": 1728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1723,
											"end": 1728,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1723,
											"end": 1728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1723,
											"end": 1728,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1723,
											"end": 1728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1723,
											"end": 1728,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1723,
											"end": 1728,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1723,
											"end": 1728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1723,
											"end": 1728,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1723,
											"end": 1728,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1723,
											"end": 1728,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1709,
											"end": 1728,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1709,
											"end": 1728,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1709,
											"end": 1719,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1709,
											"end": 1728,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1709,
											"end": 1728,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1709,
											"end": 1728,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1705,
											"end": 1747,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "C18384C100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 1747,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 1705,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1758,
											"end": 1763,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1758,
											"end": 1763,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1758,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1758,
											"end": 1772,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1758,
											"end": 1772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1758,
											"end": 1772,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1758,
											"end": 1772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1758,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1758,
											"end": 1772,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1758,
											"end": 1772,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1758,
											"end": 1772,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1758,
											"end": 1772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1758,
											"end": 1772,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1758,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1758,
											"end": 1772,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1758,
											"end": 1772,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1758,
											"end": 1772,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1758,
											"end": 1772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1758,
											"end": 1772,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1758,
											"end": 1772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1788,
											"end": 1804,
											"name": "PUSH",
											"source": 2,
											"value": "C6FF127433B785C51DA9AE4088EE184C909B1A55B9AFD82AE6C64224D3BC15D2"
										},
										{
											"begin": 1797,
											"end": 1803,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1788,
											"end": 1804,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1788,
											"end": 1804,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1788,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1788,
											"end": 1804,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1788,
											"end": 1804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1788,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1788,
											"end": 1804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1788,
											"end": 1804,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1788,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1788,
											"end": 1804,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1788,
											"end": 1804,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1788,
											"end": 1804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1788,
											"end": 1804,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1788,
											"end": 1804,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1788,
											"end": 1804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1788,
											"end": 1804,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 257,
											"end": 296,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 257,
											"end": 296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 257,
											"end": 296,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 257,
											"end": 296,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 257,
											"end": 296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 366,
											"end": 391,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 366,
											"end": 391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 366,
											"end": 391,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 366,
											"end": 391,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 366,
											"end": 391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 366,
											"end": 391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4005,
											"end": 4006,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 3993,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4007,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3983,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3983,
											"end": 4029,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4029,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4016,
											"end": 4029,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4029,
											"name": "PUSH",
											"source": 2,
											"value": "D92E233D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4016,
											"end": 4029,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4029,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4029,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4016,
											"end": 4029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4029,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4016,
											"end": 4029,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4029,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4029,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4029,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4029,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3983,
											"end": 4029,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3983,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4088,
											"end": 4089,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4046,
											"end": 4090,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4046,
											"end": 4090,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4060,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4046,
											"end": 4068,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4061,
											"end": 4067,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4068,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4046,
											"end": 4068,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4068,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4046,
											"end": 4068,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4068,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4068,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4068,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4046,
											"end": 4068,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4068,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4068,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4068,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4068,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4046,
											"end": 4068,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4068,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4046,
											"end": 4068,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4069,
											"end": 4075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4076,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4046,
											"end": 4076,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4076,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4046,
											"end": 4076,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4076,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4076,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4046,
											"end": 4076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4076,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4076,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4046,
											"end": 4076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4046,
											"end": 4076,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4046,
											"end": 4076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4076,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4076,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4046,
											"end": 4076,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4076,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4076,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4046,
											"end": 4076,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4090,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4046,
											"end": 4090,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4090,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4042,
											"end": 4118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 4042,
											"end": 4118,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4099,
											"end": 4118,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4099,
											"end": 4118,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4099,
											"end": 4118,
											"name": "PUSH",
											"source": 2,
											"value": "311932200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4099,
											"end": 4118,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4099,
											"end": 4118,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4099,
											"end": 4118,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4099,
											"end": 4118,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4099,
											"end": 4118,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4099,
											"end": 4118,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4099,
											"end": 4118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4099,
											"end": 4118,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4099,
											"end": 4118,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4099,
											"end": 4118,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4099,
											"end": 4118,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4042,
											"end": 4118,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 4042,
											"end": 4118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4143,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4173,
											"end": 4179,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4181,
											"end": 4187,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4188,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4156,
											"end": 4188,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4188,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4156,
											"end": 4188,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 4156,
											"end": 4188,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4188,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4188,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4156,
											"end": 4188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4188,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 4156,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4188,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4156,
											"end": 4188,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4188,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4156,
											"end": 4188,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4188,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4188,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4188,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4188,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4188,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4188,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4188,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4156,
											"end": 4188,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4146,
											"end": 4189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4146,
											"end": 4189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4146,
											"end": 4189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4146,
											"end": 4189,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4146,
											"end": 4189,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4146,
											"end": 4189,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4189,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4267,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 4293,
											"end": 4307,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 4309,
											"end": 4313,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4267,
											"end": 4292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 4267,
											"end": 4314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4267,
											"end": 4314,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 4267,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4255,
											"end": 4314,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4255,
											"end": 4314,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4346,
											"end": 4355,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4367,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4335,
											"end": 4367,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4367,
											"name": "PUSH",
											"source": 2,
											"value": "485CC955"
										},
										{
											"begin": 4368,
											"end": 4374,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4376,
											"end": 4382,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4335,
											"end": 4383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4335,
											"end": 4383,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4437,
											"end": 4446,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4418,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4404,
											"end": 4426,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4419,
											"end": 4425,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4426,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4404,
											"end": 4426,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4426,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4404,
											"end": 4426,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4426,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4426,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4426,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4404,
											"end": 4426,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4426,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4426,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4426,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4426,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4404,
											"end": 4426,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4426,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4404,
											"end": 4426,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4434,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4427,
											"end": 4433,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4434,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4404,
											"end": 4434,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4434,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4404,
											"end": 4434,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4434,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4434,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4404,
											"end": 4434,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4434,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4434,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4434,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4404,
											"end": 4434,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4434,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4404,
											"end": 4434,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4434,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4404,
											"end": 4446,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4404,
											"end": 4446,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4446,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4446,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4446,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4446,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4404,
											"end": 4446,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4446,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4446,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4446,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4446,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4404,
											"end": 4446,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4446,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4446,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4446,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4446,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4478,
											"end": 4487,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4459,
											"end": 4488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4501,
											"end": 4513,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4501,
											"end": 4524,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4514,
											"end": 4523,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4524,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4501,
											"end": 4524,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4524,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4501,
											"end": 4524,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4524,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4524,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4501,
											"end": 4524,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4524,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4524,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4501,
											"end": 4524,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4524,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4501,
											"end": 4524,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4524,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4501,
											"end": 4531,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4501,
											"end": 4531,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4531,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4531,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4531,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4531,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4501,
											"end": 4531,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4531,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4531,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4531,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4531,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4531,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4531,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4531,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4531,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4531,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4574,
											"end": 4580,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4549,
											"end": 4614,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4549,
											"end": 4614,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4566,
											"end": 4572,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4549,
											"end": 4614,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4549,
											"end": 4614,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4549,
											"end": 4614,
											"name": "PUSH",
											"source": 2,
											"value": "9A07B2753AAEBE71B96E78F64CCCED2E2B9FF13D98B3C7784285EF0C31631DBF"
										},
										{
											"begin": 4582,
											"end": 4591,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4593,
											"end": 4606,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4593,
											"end": 4613,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4593,
											"end": 4613,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4593,
											"end": 4613,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4593,
											"end": 4613,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4549,
											"end": 4614,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4549,
											"end": 4614,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4549,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4549,
											"end": 4614,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4549,
											"end": 4614,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4549,
											"end": 4614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4549,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4549,
											"end": 4614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4549,
											"end": 4614,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4549,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4549,
											"end": 4614,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4549,
											"end": 4614,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4549,
											"end": 4614,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4549,
											"end": 4614,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4549,
											"end": 4614,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4549,
											"end": 4614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4549,
											"end": 4614,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 3972,
											"end": 4622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3833,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3405,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3502,
											"end": 3512,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3502,
											"end": 3512,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3502,
											"end": 3512,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3502,
											"end": 3512,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3502,
											"end": 3512,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3502,
											"end": 3512,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3502,
											"end": 3512,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3502,
											"end": 3512,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3502,
											"end": 3512,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3502,
											"end": 3512,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3502,
											"end": 3512,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3512,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3488,
											"end": 3512,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3498,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3512,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3488,
											"end": 3512,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3512,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3484,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 3484,
											"end": 3536,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3536,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3521,
											"end": 3536,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3536,
											"name": "PUSH",
											"source": 2,
											"value": "F5D267EB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3521,
											"end": 3536,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3536,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3536,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3521,
											"end": 3536,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3536,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3521,
											"end": 3536,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3536,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3536,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3536,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3536,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3536,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3484,
											"end": 3536,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 3484,
											"end": 3536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 462,
											"end": 465,
											"name": "PUSH",
											"source": 2,
											"value": "12C"
										},
										{
											"begin": 3632,
											"end": 3635,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3632,
											"end": 3645,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3666,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3654,
											"end": 3666,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3666,
											"name": "PUSH",
											"source": 2,
											"value": "CD4E616700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3654,
											"end": 3666,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3666,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3666,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3654,
											"end": 3666,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3666,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3654,
											"end": 3666,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3666,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3666,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3666,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3666,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3666,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3682,
											"end": 3694,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3682,
											"end": 3705,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3704,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3682,
											"end": 3705,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3682,
											"end": 3705,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3682,
											"end": 3705,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3682,
											"end": 3705,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3682,
											"end": 3705,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3682,
											"end": 3705,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3682,
											"end": 3705,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3682,
											"end": 3705,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3682,
											"end": 3705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3682,
											"end": 3705,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3682,
											"end": 3705,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3682,
											"end": 3705,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3682,
											"end": 3705,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3682,
											"end": 3705,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3682,
											"end": 3705,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3682,
											"end": 3705,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3682,
											"end": 3705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3682,
											"end": 3705,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3682,
											"end": 3705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3682,
											"end": 3705,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3682,
											"end": 3705,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3682,
											"end": 3705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3682,
											"end": 3705,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3682,
											"end": 3705,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3682,
											"end": 3705,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 3677,
											"end": 3732,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "PUSH",
											"source": 2,
											"value": "682A6E7C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3677,
											"end": 3732,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 3677,
											"end": 3732,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3773,
											"end": 3776,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3759,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3745,
											"end": 3770,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3760,
											"end": 3769,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3770,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3745,
											"end": 3770,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3770,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3745,
											"end": 3770,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3770,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3770,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3770,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3745,
											"end": 3770,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3770,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3770,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3770,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3745,
											"end": 3770,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3770,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3745,
											"end": 3770,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3776,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3776,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3776,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3810,
											"end": 3819,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3792,
											"end": 3825,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3792,
											"end": 3825,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3792,
											"end": 3825,
											"name": "PUSH",
											"source": 2,
											"value": "6F6BD3C4B38DF451F210A585E872B5A0B6DE937FDA37F0EB0C7731AFB4391985"
										},
										{
											"begin": 3821,
											"end": 3824,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3792,
											"end": 3825,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3792,
											"end": 3825,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3792,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3792,
											"end": 3825,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3792,
											"end": 3825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3792,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3792,
											"end": 3825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3792,
											"end": 3825,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3792,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3792,
											"end": 3825,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3792,
											"end": 3825,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3792,
											"end": 3825,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3792,
											"end": 3825,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3792,
											"end": 3825,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3792,
											"end": 3825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3792,
											"end": 3825,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3833,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3833,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 398,
											"end": 421,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 398,
											"end": 421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 398,
											"end": 421,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 398,
											"end": 421,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 398,
											"end": 421,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 398,
											"end": 421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 332,
											"end": 353,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 332,
											"end": 353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 332,
											"end": 353,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 353,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 332,
											"end": 353,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 332,
											"end": 353,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 332,
											"end": 353,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 332,
											"end": 353,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 332,
											"end": 353,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 332,
											"end": 353,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 332,
											"end": 353,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 332,
											"end": 353,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 332,
											"end": 353,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 332,
											"end": 353,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 332,
											"end": 353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 769,
											"end": 818,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 769,
											"end": 818,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 818,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 818,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 818,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 818,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 818,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 769,
											"end": 818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 305,
											"end": 325,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 305,
											"end": 325,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 305,
											"end": 325,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 305,
											"end": 325,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 305,
											"end": 325,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 305,
											"end": 325,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 305,
											"end": 325,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 305,
											"end": 325,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 305,
											"end": 325,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 305,
											"end": 325,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 305,
											"end": 325,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 305,
											"end": 325,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 305,
											"end": 325,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 305,
											"end": 325,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 305,
											"end": 325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 428,
											"end": 465,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 428,
											"end": 465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 462,
											"end": 465,
											"name": "PUSH",
											"source": 2,
											"value": "12C"
										},
										{
											"begin": 428,
											"end": 465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 428,
											"end": 465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 622,
											"end": 652,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 622,
											"end": 652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 622,
											"end": 652,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 652,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 622,
											"end": 652,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 652,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 652,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 652,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 652,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 622,
											"end": 652,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 622,
											"end": 652,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 622,
											"end": 652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1392,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1412,
											"end": 1426,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1412,
											"end": 1433,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1433,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1433,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1433,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1433,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1433,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1433,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1433,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1433,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1433,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1433,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1433,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1433,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1433,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1433,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1412,
											"end": 1433,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1440,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1434,
											"end": 1439,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1440,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1440,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1440,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1440,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1440,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1440,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1440,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1440,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1440,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1440,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1440,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1440,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1440,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1440,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1412,
											"end": 1440,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1440,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1412,
											"end": 1440,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1440,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1440,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1440,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1412,
											"end": 1440,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1440,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1440,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1440,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1440,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1440,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1448,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2228,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2055,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2129,
											"end": 2135,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2129,
											"end": 2135,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2129,
											"end": 2135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2129,
											"end": 2135,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2129,
											"end": 2135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2129,
											"end": 2135,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2129,
											"end": 2135,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2129,
											"end": 2135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2129,
											"end": 2135,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2129,
											"end": 2135,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2129,
											"end": 2135,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2115,
											"end": 2135,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2115,
											"end": 2135,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2115,
											"end": 2125,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2115,
											"end": 2135,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2115,
											"end": 2135,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2115,
											"end": 2135,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2111,
											"end": 2155,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2155,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2155,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2155,
											"name": "PUSH",
											"source": 2,
											"value": "492F678100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2144,
											"end": 2155,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2155,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2155,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2144,
											"end": 2155,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2155,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2155,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2155,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2155,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2155,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2155,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2155,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2111,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2174,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2174,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2183,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2166,
											"end": 2183,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2183,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2183,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2166,
											"end": 2183,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2183,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2183,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2183,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2183,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2183,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2183,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2183,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2183,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2183,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2183,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2183,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2220,
											"name": "PUSH",
											"source": 2,
											"value": "D76538EFC408318A051137C2720A9E82902ACDBD46B802D488B74CA3A09A116"
										},
										{
											"begin": 2213,
											"end": 2219,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2220,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2199,
											"end": 2220,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2199,
											"end": 2220,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2220,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2199,
											"end": 2220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2220,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2199,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2220,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2199,
											"end": 2220,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2220,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2220,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2220,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2220,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2220,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2228,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 480,
											"end": 505,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 480,
											"end": 505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 480,
											"end": 505,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 480,
											"end": 505,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 480,
											"end": 505,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 480,
											"end": 505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 480,
											"end": 505,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 480,
											"end": 505,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 480,
											"end": 505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 480,
											"end": 505,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 480,
											"end": 505,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 480,
											"end": 505,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 480,
											"end": 505,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 480,
											"end": 505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2877,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2550,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2630,
											"end": 2640,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2630,
											"end": 2640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2630,
											"end": 2640,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2630,
											"end": 2640,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2630,
											"end": 2640,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2630,
											"end": 2640,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2630,
											"end": 2640,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2630,
											"end": 2640,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2630,
											"end": 2640,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2630,
											"end": 2640,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2630,
											"end": 2640,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2616,
											"end": 2640,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2616,
											"end": 2640,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2616,
											"end": 2626,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2616,
											"end": 2640,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2616,
											"end": 2640,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2616,
											"end": 2640,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2612,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2612,
											"end": 2664,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2649,
											"end": 2664,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "F5D267EB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2649,
											"end": 2664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2649,
											"end": 2664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2664,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2649,
											"end": 2664,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2664,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2664,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2664,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2612,
											"end": 2664,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2612,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 462,
											"end": 465,
											"name": "PUSH",
											"source": 2,
											"value": "12C"
										},
										{
											"begin": 2679,
											"end": 2683,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2679,
											"end": 2693,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2675,
											"end": 2714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 2714,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2702,
											"end": 2714,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 2714,
											"name": "PUSH",
											"source": 2,
											"value": "CD4E616700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2702,
											"end": 2714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 2714,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 2714,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2702,
											"end": 2714,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 2714,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2702,
											"end": 2714,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 2714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 2714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 2714,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 2714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2702,
											"end": 2714,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2714,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2675,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2733,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2729,
											"end": 2738,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2725,
											"end": 2756,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "PUSH",
											"source": 2,
											"value": "AF13986D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2756,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2725,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2771,
											"end": 2776,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2870,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 2767,
											"end": 2870,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2806,
											"end": 2810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2793,
											"end": 2803,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2793,
											"end": 2810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2793,
											"end": 2810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2793,
											"end": 2810,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2793,
											"end": 2810,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2767,
											"end": 2870,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2870,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 2767,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2854,
											"end": 2858,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2851,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2843,
											"end": 2858,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2858,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2858,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2858,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2870,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2767,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1263,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1154,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1208,
											"end": 1215,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1235,
											"end": 1248,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1235,
											"end": 1255,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1235,
											"end": 1255,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1235,
											"end": 1255,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1235,
											"end": 1255,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1255,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1228,
											"end": 1255,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2958,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2789,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2873,
											"end": 2889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2927,
											"end": 2941,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2943,
											"end": 2947,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2949,
											"end": 2950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2908,
											"end": 2951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2908,
											"end": 2951,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2908,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2958,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2958,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4358,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 3384,
											"end": 4358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3569,
											"end": 3574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3566,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3574,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3664,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 3541,
											"end": 3664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 3647,
											"end": 3652,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3653,
											"name": "PUSH",
											"source": 0,
											"value": "CF47918100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3597,
											"end": 3653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3653,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3597,
											"end": 3653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3597,
											"end": 3653,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 3597,
											"end": 3653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3653,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3597,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3653,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3653,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3664,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 3541,
											"end": 3664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3950,
											"end": 3998,
											"name": "PUSH",
											"source": 0,
											"value": "3D602D80600A3D3981F3363D3D373D3D3D363D73000000"
										},
										{
											"begin": 3932,
											"end": 3946,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3926,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3922,
											"end": 3947,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3916,
											"end": 3920,
											"name": "PUSH",
											"source": 0,
											"value": "E8"
										},
										{
											"begin": 3912,
											"end": 3948,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 3909,
											"end": 3999,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3903,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3896,
											"end": 4000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4157,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "5AF43D82803E903D91602B57FD5BF3"
										},
										{
											"begin": 4140,
											"end": 4154,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4134,
											"end": 4138,
											"name": "PUSH",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4130,
											"end": 4155,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4190,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4125,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4114,
											"end": 4191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4243,
											"end": 4247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4241,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4231,
											"end": 4235,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4224,
											"end": 4229,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4216,
											"end": 4248,
											"name": "CREATE2",
											"source": 0
										},
										{
											"begin": 4204,
											"end": 4248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4204,
											"end": 4248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4291,
											"end": 4292,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4271,
											"end": 4293,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4271,
											"end": 4293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4271,
											"end": 4279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4271,
											"end": 4293,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4271,
											"end": 4293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4271,
											"end": 4293,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4267,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 4267,
											"end": 4352,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4316,
											"end": 4341,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4316,
											"end": 4341,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4316,
											"end": 4341,
											"name": "PUSH",
											"source": 0,
											"value": "B06EBF3D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4316,
											"end": 4341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4316,
											"end": 4341,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4316,
											"end": 4341,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4316,
											"end": 4341,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4316,
											"end": 4341,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4316,
											"end": 4341,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4316,
											"end": 4341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4316,
											"end": 4341,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4316,
											"end": 4341,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4316,
											"end": 4341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4316,
											"end": 4341,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4267,
											"end": 4352,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 4267,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4358,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4358,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1952,
											"end": 1958,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1966,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2009,
											"end": 2011,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1997,
											"end": 2006,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 1995,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1984,
											"end": 2007,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2012,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2015,
											"end": 2094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2136,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 2205,
											"end": 2212,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2196,
											"end": 2202,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2203,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2160,
											"end": 2213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2223,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2262,
											"end": 2264,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 2333,
											"end": 2340,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2331,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 2288,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2351,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 2364,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2398,
											"end": 2405,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2446,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2447,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2427,
											"end": 2448,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2416,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2416,
											"end": 2448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2454,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2569,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 2460,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2556,
											"end": 2561,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 2541,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2562,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2541,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2536,
											"end": 2539,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2529,
											"end": 2563,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2569,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2569,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2785,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 2575,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2662,
											"end": 2666,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2700,
											"end": 2702,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2689,
											"end": 2698,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2685,
											"end": 2703,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2703,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2703,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 2775,
											"end": 2776,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2760,
											"end": 2777,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2751,
											"end": 2757,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 2713,
											"end": 2778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2778,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 2713,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2785,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2785,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2909,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 2791,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 2896,
											"end": 2901,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2878,
											"end": 2902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2902,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 2878,
											"end": 2902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2873,
											"end": 2876,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2903,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 3137,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2915,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3008,
											"end": 3012,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3046,
											"end": 3048,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3035,
											"end": 3044,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3031,
											"end": 3049,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3023,
											"end": 3049,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3023,
											"end": 3049,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3059,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 3127,
											"end": 3128,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3125,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3129,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3109,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3059,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 3059,
											"end": 3130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3059,
											"end": 3130,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 3059,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 3137,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 3137,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 3137,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 3137,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 3137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3617,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3143,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3211,
											"end": 3217,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3225,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3270,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3256,
											"end": 3265,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3247,
											"end": 3254,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3243,
											"end": 3266,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3239,
											"end": 3271,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3236,
											"end": 3355,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3236,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 3236,
											"end": 3355,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3274,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 3274,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 3274,
											"end": 3353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3274,
											"end": 3353,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 3274,
											"end": 3353,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3236,
											"end": 3355,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 3236,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3395,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 3464,
											"end": 3471,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3461,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3444,
											"end": 3453,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3440,
											"end": 3462,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3419,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 3419,
											"end": 3472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3419,
											"end": 3472,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 3419,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3409,
											"end": 3472,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3409,
											"end": 3472,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3482,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3521,
											"end": 3523,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3547,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 3592,
											"end": 3599,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3589,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3572,
											"end": 3581,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3590,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3547,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 3547,
											"end": 3600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3547,
											"end": 3600,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 3547,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3537,
											"end": 3600,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3537,
											"end": 3600,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3610,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3617,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3617,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3617,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3617,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3617,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3952,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3623,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3688,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3733,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3719,
											"end": 3728,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3717,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3729,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3702,
											"end": 3734,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3818,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 3699,
											"end": 3818,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 3737,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 3737,
											"end": 3816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3816,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 3737,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3818,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 3699,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3857,
											"end": 3858,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3882,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 3927,
											"end": 3934,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3918,
											"end": 3924,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3907,
											"end": 3916,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3903,
											"end": 3925,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3882,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3882,
											"end": 3935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3882,
											"end": 3935,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 3882,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3872,
											"end": 3935,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3872,
											"end": 3935,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3828,
											"end": 3945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3952,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3952,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3952,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3952,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 4074,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 3958,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4028,
											"end": 4049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 4043,
											"end": 4048,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4028,
											"end": 4049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 4028,
											"end": 4049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4028,
											"end": 4049,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 4028,
											"end": 4049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4021,
											"end": 4026,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 4050,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4008,
											"end": 4068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 4008,
											"end": 4068,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4064,
											"end": 4065,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4054,
											"end": 4066,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4008,
											"end": 4068,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 4008,
											"end": 4068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 4074,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 4074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4213,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 4080,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4123,
											"end": 4128,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4167,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4148,
											"end": 4168,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4139,
											"end": 4168,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4139,
											"end": 4168,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4177,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 4201,
											"end": 4206,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4177,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 4177,
											"end": 4207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4177,
											"end": 4207,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 4177,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4213,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4213,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4219,
											"end": 4542,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 4219,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4281,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4324,
											"end": 4326,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4312,
											"end": 4321,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4303,
											"end": 4310,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 4322,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4295,
											"end": 4327,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4411,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 4292,
											"end": 4411,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 4330,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 4330,
											"end": 4409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4409,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 4330,
											"end": 4409,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4411,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 4292,
											"end": 4411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4451,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4475,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 4517,
											"end": 4524,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4508,
											"end": 4514,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4497,
											"end": 4506,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4493,
											"end": 4515,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4475,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 4475,
											"end": 4525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4475,
											"end": 4525,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 4475,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4465,
											"end": 4525,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4465,
											"end": 4525,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4421,
											"end": 4535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4219,
											"end": 4542,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4219,
											"end": 4542,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4219,
											"end": 4542,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4219,
											"end": 4542,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4219,
											"end": 4542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4548,
											"end": 5016,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 4548,
											"end": 5016,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4613,
											"end": 4619,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4621,
											"end": 4627,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4670,
											"end": 4672,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4658,
											"end": 4667,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4649,
											"end": 4656,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4645,
											"end": 4668,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4641,
											"end": 4673,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4757,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 4638,
											"end": 4757,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4676,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 4676,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 4676,
											"end": 4755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4676,
											"end": 4755,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 4676,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4757,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 4638,
											"end": 4757,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4796,
											"end": 4797,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4821,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 4863,
											"end": 4870,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4854,
											"end": 4860,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4843,
											"end": 4852,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4839,
											"end": 4861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 4821,
											"end": 4871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4871,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 4821,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4811,
											"end": 4871,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4811,
											"end": 4871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4767,
											"end": 4881,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4920,
											"end": 4922,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4946,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 4991,
											"end": 4998,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4982,
											"end": 4988,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4971,
											"end": 4980,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4967,
											"end": 4989,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4946,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 4946,
											"end": 4999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4946,
											"end": 4999,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 4946,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4936,
											"end": 4999,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4936,
											"end": 4999,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4891,
											"end": 5009,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4548,
											"end": 5016,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4548,
											"end": 5016,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4548,
											"end": 5016,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4548,
											"end": 5016,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4548,
											"end": 5016,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4548,
											"end": 5016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5116,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 5022,
											"end": 5116,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5055,
											"end": 5063,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5103,
											"end": 5108,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5099,
											"end": 5101,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5095,
											"end": 5109,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5074,
											"end": 5109,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5074,
											"end": 5109,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5116,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5116,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5116,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5022,
											"end": 5116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5122,
											"end": 5216,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 5122,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5161,
											"end": 5168,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5190,
											"end": 5210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 5204,
											"end": 5209,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5190,
											"end": 5210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 5190,
											"end": 5210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5190,
											"end": 5210,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 5190,
											"end": 5210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5179,
											"end": 5210,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5179,
											"end": 5210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5122,
											"end": 5216,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5122,
											"end": 5216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5122,
											"end": 5216,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5122,
											"end": 5216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5222,
											"end": 5322,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 5222,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5261,
											"end": 5268,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5290,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 5310,
											"end": 5315,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5290,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 5290,
											"end": 5316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5290,
											"end": 5316,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 5290,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5279,
											"end": 5316,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5279,
											"end": 5316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5222,
											"end": 5322,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5222,
											"end": 5322,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5222,
											"end": 5322,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5222,
											"end": 5322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5328,
											"end": 5485,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 5328,
											"end": 5485,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5433,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 5453,
											"end": 5477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 5471,
											"end": 5476,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 5453,
											"end": 5477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5477,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 5453,
											"end": 5477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5433,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 5433,
											"end": 5478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5433,
											"end": 5478,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 5433,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5428,
											"end": 5431,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5479,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5328,
											"end": 5485,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5328,
											"end": 5485,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5328,
											"end": 5485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5491,
											"end": 5888,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 5491,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5631,
											"end": 5634,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5646,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 5717,
											"end": 5720,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5708,
											"end": 5714,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5646,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 5646,
											"end": 5721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5646,
											"end": 5721,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 5646,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5746,
											"end": 5748,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 5741,
											"end": 5744,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5730,
											"end": 5749,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5730,
											"end": 5749,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5759,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 5830,
											"end": 5833,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5821,
											"end": 5827,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5759,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 5759,
											"end": 5834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5759,
											"end": 5834,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 5759,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5859,
											"end": 5861,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 5854,
											"end": 5857,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5850,
											"end": 5862,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5862,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5879,
											"end": 5882,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5872,
											"end": 5882,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5872,
											"end": 5882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5491,
											"end": 5888,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5491,
											"end": 5888,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5491,
											"end": 5888,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5491,
											"end": 5888,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5491,
											"end": 5888,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5491,
											"end": 5888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 6226,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 5894,
											"end": 6226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6015,
											"end": 6019,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6053,
											"end": 6055,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6042,
											"end": 6051,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6038,
											"end": 6056,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6030,
											"end": 6056,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6030,
											"end": 6056,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 6134,
											"end": 6135,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6123,
											"end": 6132,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6119,
											"end": 6136,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6110,
											"end": 6116,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 6066,
											"end": 6137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6137,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 6066,
											"end": 6137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 6215,
											"end": 6217,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6204,
											"end": 6213,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6200,
											"end": 6218,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6191,
											"end": 6197,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 6147,
											"end": 6219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6147,
											"end": 6219,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 6147,
											"end": 6219,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 6226,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 6226,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 6226,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 6226,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 6226,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 6226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6232,
											"end": 6564,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 6232,
											"end": 6564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6353,
											"end": 6357,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6391,
											"end": 6393,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6380,
											"end": 6389,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6394,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6368,
											"end": 6394,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6368,
											"end": 6394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6404,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 6472,
											"end": 6473,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6461,
											"end": 6470,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6457,
											"end": 6474,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6448,
											"end": 6454,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6404,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 6404,
											"end": 6475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6404,
											"end": 6475,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 6404,
											"end": 6475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6485,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 6553,
											"end": 6555,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6542,
											"end": 6551,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6538,
											"end": 6556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6529,
											"end": 6535,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6485,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 6485,
											"end": 6557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6485,
											"end": 6557,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 6485,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6232,
											"end": 6564,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6232,
											"end": 6564,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6232,
											"end": 6564,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6232,
											"end": 6564,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6232,
											"end": 6564,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6232,
											"end": 6564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6570,
											"end": 6902,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 6570,
											"end": 6902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6691,
											"end": 6695,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6729,
											"end": 6731,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6718,
											"end": 6727,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6714,
											"end": 6732,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6732,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6732,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6742,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 6810,
											"end": 6811,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6799,
											"end": 6808,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6795,
											"end": 6812,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6786,
											"end": 6792,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6742,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 6742,
											"end": 6813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6742,
											"end": 6813,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 6742,
											"end": 6813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6823,
											"end": 6895,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 6891,
											"end": 6893,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6880,
											"end": 6889,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6876,
											"end": 6894,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6867,
											"end": 6873,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6823,
											"end": 6895,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 6823,
											"end": 6895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6823,
											"end": 6895,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 6823,
											"end": 6895,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6570,
											"end": 6902,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6570,
											"end": 6902,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6570,
											"end": 6902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6570,
											"end": 6902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6570,
											"end": 6902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6570,
											"end": 6902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"contracts/ValidatorFactory.sol",
								"contracts/interfaces/IValidator.sol",
								"contracts/interfaces/IValidatorFactory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MAX_FEE()": "bc063e1a",
							"allValidators(uint256)": "bcecf81b",
							"allValidatorsLength()": "f64ee765",
							"claimFee()": "99d32fc4",
							"createValidator(address,address)": "830e4eef",
							"customClaimFee(address)": "a74adceb",
							"customDepositFee(address)": "28a6b3ff",
							"depositFee()": "67a52793",
							"feeManager()": "d0fb0203",
							"getValidator(address,address)": "cd1a0dd2",
							"implementation()": "5c60da1b",
							"isPaused()": "b187bd26",
							"isValidatorl(address)": "38ed1793",
							"pauser()": "9fd0506d",
							"setClaimCustomFee(address,uint256)": "984fa01f",
							"setDepositCustomFee(address,uint256)": "2c3de946",
							"setFee(bool,uint256)": "e1f76b44",
							"setFeeManager(address)": "472d35b9",
							"setPauseState(bool)": "cdb88ad1",
							"setPauser(address)": "2d88af4a",
							"setVoter(address)": "4bc2a657",
							"voter()": "46c96aac"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FeeTooHigh\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidValidator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotFeeManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPauser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotVoter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroFee\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"SetClaimCustomFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"SetDepositCustomFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeManager\",\"type\":\"address\"}],\"name\":\"SetFeeManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"SetPauseState\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"}],\"name\":\"SetPauser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"SetVoter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"validatorLength\",\"type\":\"uint256\"}],\"name\":\"ValidatorCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allValidators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allValidatorsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"createValidator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"customClaimFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"customDepositFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getValidator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"isValidatorl\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setClaimCustomFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setDepositCustomFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_type\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeManager\",\"type\":\"address\"}],\"name\":\"setFeeManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"setPauseState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pauser\",\"type\":\"address\"}],\"name\":\"setPauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"setVoter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}]},\"kind\":\"dev\",\"methods\":{\"createValidator(address,address)\":{\"details\":\"token order does not matter\",\"params\":{\"owner\":\".\",\"token\":\".\"}},\"getValidator(address,address)\":{\"params\":{\"owner\":\".\",\"token\":\".\"}},\"isValidatorl(address)\":{\"params\":{\"validator\":\".\"}},\"setClaimCustomFee(address,uint256)\":{\"details\":\"A custom fee of zero means the default fee will be used.\"},\"setDepositCustomFee(address,uint256)\":{\"details\":\"A custom fee of zero means the default fee will be used.\"},\"setFee(bool,uint256)\":{\"details\":\"Throws if higher than maximum fee.      Throws if fee is zero.\",\"params\":{\"_fee\":\".\",\"_type\":\"Stable or volatile pool.\"}},\"setVoter(address)\":{\"details\":\"Only called once to set to Voter.sol - Voter does not have a function      to call this contract method, so once set it's immutable.      This also follows convention of setVoterAndDistributor() in VotingEscrow.sol\",\"params\":{\"_voter\":\".\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allValidatorsLength()\":{\"notice\":\"returns the number of validators created from this factory\"},\"createValidator(address,address)\":{\"notice\":\"Create a validator given token and owner\"},\"getValidator(address,address)\":{\"notice\":\"Return address of validator created by this factory\"},\"isValidatorl(address)\":{\"notice\":\"Is a valid validator created by this factory.\"},\"setClaimCustomFee(address,uint256)\":{\"notice\":\"Set overriding fee for a validator from the default\"},\"setDepositCustomFee(address,uint256)\":{\"notice\":\"Set overriding fee for a validator from the default\"},\"setFee(bool,uint256)\":{\"notice\":\"Set default fee for stable and volatile pools.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ValidatorFactory.sol\":\"ValidatorFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0xf55d01dac75cffdabec6833a79bf3be0c108fc0db10e273daf7adfd3e9e59dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://540002a50a2a1a2b9dafffb976178e55adbf8d3a28db462c69f996921479c6b0\",\"dweb:/ipfs/QmQNAFyMf2FW3U1giM4Yej3zzd1pnxMtAA5GoADj4hTYYD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"contracts/ValidatorFactory.sol\":{\"keccak256\":\"0xf62744cc2d18e48c55dcc33b7f1291e0de57c966b15509f3a42e7953edecf7f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3dd76eddfe64b9c32634912cb1ce01e276a1584eb5d87a84c1ffc0f3f7c255b\",\"dweb:/ipfs/Qme6b4ERyVfAUpDZZq8YHkK2S9nzjtL6zDSuc9Jvdv9Q3Z\"]},\"contracts/interfaces/IValidator.sol\":{\"keccak256\":\"0x27040e8a7f0ee57f7785788f0f5f6113e0ae887ac449094f520aef6ecb386317\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f5cc5ff99c94bb21f0d49c0b328b293e5beca351ee3f9885a2a69d80738ca13\",\"dweb:/ipfs/QmeDEb8msPnWZijmiSehP6E6pQ5jKaK6rhMQ9Swwgvav5B\"]},\"contracts/interfaces/IValidatorFactory.sol\":{\"keccak256\":\"0x678f56fc187f1b47deb3e23ee45600ad3ca0015fc259b1a217f5707afcdcdf09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ac1501989027c317812fd3425d5585d351530670bcee9463d7092373ea64d24\",\"dweb:/ipfs/QmbjRy5SYCkdsXPgnU4GYUQBRHhyjwSLENYstN7XFi2vwX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 195,
								"contract": "contracts/ValidatorFactory.sol:ValidatorFactory",
								"label": "isPaused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 197,
								"contract": "contracts/ValidatorFactory.sol:ValidatorFactory",
								"label": "pauser",
								"offset": 1,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 199,
								"contract": "contracts/ValidatorFactory.sol:ValidatorFactory",
								"label": "depositFee",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 201,
								"contract": "contracts/ValidatorFactory.sol:ValidatorFactory",
								"label": "claimFee",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 206,
								"contract": "contracts/ValidatorFactory.sol:ValidatorFactory",
								"label": "feeManager",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 208,
								"contract": "contracts/ValidatorFactory.sol:ValidatorFactory",
								"label": "voter",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 214,
								"contract": "contracts/ValidatorFactory.sol:ValidatorFactory",
								"label": "_validatorList",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_address))"
							},
							{
								"astId": 217,
								"contract": "contracts/ValidatorFactory.sol:ValidatorFactory",
								"label": "allValidators",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 221,
								"contract": "contracts/ValidatorFactory.sol:ValidatorFactory",
								"label": "_isValidator",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 225,
								"contract": "contracts/ValidatorFactory.sol:ValidatorFactory",
								"label": "customDepositFee",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 229,
								"contract": "contracts/ValidatorFactory.sol:ValidatorFactory",
								"label": "customClaimFee",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_address))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => address))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_address)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"allValidatorsLength()": {
								"notice": "returns the number of validators created from this factory"
							},
							"createValidator(address,address)": {
								"notice": "Create a validator given token and owner"
							},
							"getValidator(address,address)": {
								"notice": "Return address of validator created by this factory"
							},
							"isValidatorl(address)": {
								"notice": "Is a valid validator created by this factory."
							},
							"setClaimCustomFee(address,uint256)": {
								"notice": "Set overriding fee for a validator from the default"
							},
							"setDepositCustomFee(address,uint256)": {
								"notice": "Set overriding fee for a validator from the default"
							},
							"setFee(bool,uint256)": {
								"notice": "Set default fee for stable and volatile pools."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IValidator.sol": {
				"IValidator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"initialize(address,address)": {
								"params": {
									"_owner": "Address of owner",
									"_token": "Address of token"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"initialize(address,address)": "485cc955"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"initialize(address,address)\":{\"params\":{\"_owner\":\"Address of owner\",\"_token\":\"Address of token\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"initialize(address,address)\":{\"notice\":\"Called on pool creation by PoolFactory\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IValidator.sol\":\"IValidator\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IValidator.sol\":{\"keccak256\":\"0x27040e8a7f0ee57f7785788f0f5f6113e0ae887ac449094f520aef6ecb386317\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f5cc5ff99c94bb21f0d49c0b328b293e5beca351ee3f9885a2a69d80738ca13\",\"dweb:/ipfs/QmeDEb8msPnWZijmiSehP6E6pQ5jKaK6rhMQ9Swwgvav5B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"initialize(address,address)": {
								"notice": "Called on pool creation by PoolFactory"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IValidatorFactory.sol": {
				"IValidatorFactory": {
					"abi": [
						{
							"inputs": [],
							"name": "FeeTooHigh",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidValidator",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotFeeManager",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotPauser",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotVoter",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PoolAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroFee",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "validator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "SetClaimCustomFee",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "validator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "SetDepositCustomFee",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "feeManager",
									"type": "address"
								}
							],
							"name": "SetFeeManager",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "state",
									"type": "bool"
								}
							],
							"name": "SetPauseState",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "pauser",
									"type": "address"
								}
							],
							"name": "SetPauser",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "voter",
									"type": "address"
								}
							],
							"name": "SetVoter",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "validator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "validatorLength",
									"type": "uint256"
								}
							],
							"name": "ValidatorCreated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "allValidatorsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "createValidator",
							"outputs": [
								{
									"internalType": "address",
									"name": "validator",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "getValidator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPaused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "validator",
									"type": "address"
								}
							],
							"name": "isValidatorl",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_validator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								}
							],
							"name": "setClaimCustomFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_validator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								}
							],
							"name": "setDepositCustomFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_type",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								}
							],
							"name": "setFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_feeManager",
									"type": "address"
								}
							],
							"name": "setFeeManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_state",
									"type": "bool"
								}
							],
							"name": "setPauseState",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_pauser",
									"type": "address"
								}
							],
							"name": "setPauser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_voter",
									"type": "address"
								}
							],
							"name": "setVoter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "voter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"createValidator(address,address)": {
								"details": "token order does not matter",
								"params": {
									"owner": ".",
									"token": "."
								}
							},
							"getValidator(address,address)": {
								"params": {
									"owner": ".",
									"token": "."
								}
							},
							"isValidatorl(address)": {
								"params": {
									"validator": "."
								}
							},
							"setClaimCustomFee(address,uint256)": {
								"details": "A custom fee of zero means the default fee will be used."
							},
							"setDepositCustomFee(address,uint256)": {
								"details": "A custom fee of zero means the default fee will be used."
							},
							"setFee(bool,uint256)": {
								"details": "Throws if higher than maximum fee.      Throws if fee is zero.",
								"params": {
									"_fee": ".",
									"_type": "Stable or volatile pool."
								}
							},
							"setVoter(address)": {
								"details": "Only called once to set to Voter.sol - Voter does not have a function      to call this contract method, so once set it's immutable.      This also follows convention of setVoterAndDistributor() in VotingEscrow.sol",
								"params": {
									"_voter": "."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allValidatorsLength()": "f64ee765",
							"createValidator(address,address)": "830e4eef",
							"getValidator(address,address)": "cd1a0dd2",
							"implementation()": "5c60da1b",
							"isPaused()": "b187bd26",
							"isValidatorl(address)": "38ed1793",
							"setClaimCustomFee(address,uint256)": "984fa01f",
							"setDepositCustomFee(address,uint256)": "2c3de946",
							"setFee(bool,uint256)": "e1f76b44",
							"setFeeManager(address)": "472d35b9",
							"setPauseState(bool)": "cdb88ad1",
							"setPauser(address)": "2d88af4a",
							"setVoter(address)": "4bc2a657",
							"voter()": "46c96aac"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FeeTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidValidator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotFeeManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPauser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotVoter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroFee\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"SetClaimCustomFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"SetDepositCustomFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeManager\",\"type\":\"address\"}],\"name\":\"SetFeeManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"SetPauseState\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"}],\"name\":\"SetPauser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"SetVoter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"validatorLength\",\"type\":\"uint256\"}],\"name\":\"ValidatorCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"allValidatorsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"createValidator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getValidator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"isValidatorl\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_validator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setClaimCustomFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_validator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setDepositCustomFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_type\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeManager\",\"type\":\"address\"}],\"name\":\"setFeeManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"setPauseState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pauser\",\"type\":\"address\"}],\"name\":\"setPauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"setVoter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createValidator(address,address)\":{\"details\":\"token order does not matter\",\"params\":{\"owner\":\".\",\"token\":\".\"}},\"getValidator(address,address)\":{\"params\":{\"owner\":\".\",\"token\":\".\"}},\"isValidatorl(address)\":{\"params\":{\"validator\":\".\"}},\"setClaimCustomFee(address,uint256)\":{\"details\":\"A custom fee of zero means the default fee will be used.\"},\"setDepositCustomFee(address,uint256)\":{\"details\":\"A custom fee of zero means the default fee will be used.\"},\"setFee(bool,uint256)\":{\"details\":\"Throws if higher than maximum fee.      Throws if fee is zero.\",\"params\":{\"_fee\":\".\",\"_type\":\"Stable or volatile pool.\"}},\"setVoter(address)\":{\"details\":\"Only called once to set to Voter.sol - Voter does not have a function      to call this contract method, so once set it's immutable.      This also follows convention of setVoterAndDistributor() in VotingEscrow.sol\",\"params\":{\"_voter\":\".\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allValidatorsLength()\":{\"notice\":\"returns the number of validators created from this factory\"},\"createValidator(address,address)\":{\"notice\":\"Create a validator given token and owner\"},\"getValidator(address,address)\":{\"notice\":\"Return address of validator created by this factory\"},\"isValidatorl(address)\":{\"notice\":\"Is a valid validator created by this factory.\"},\"setClaimCustomFee(address,uint256)\":{\"notice\":\"Set overriding fee for a validator from the default\"},\"setDepositCustomFee(address,uint256)\":{\"notice\":\"Set overriding fee for a validator from the default\"},\"setFee(bool,uint256)\":{\"notice\":\"Set default fee for stable and volatile pools.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IValidatorFactory.sol\":\"IValidatorFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IValidatorFactory.sol\":{\"keccak256\":\"0x678f56fc187f1b47deb3e23ee45600ad3ca0015fc259b1a217f5707afcdcdf09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ac1501989027c317812fd3425d5585d351530670bcee9463d7092373ea64d24\",\"dweb:/ipfs/QmbjRy5SYCkdsXPgnU4GYUQBRHhyjwSLENYstN7XFi2vwX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"allValidatorsLength()": {
								"notice": "returns the number of validators created from this factory"
							},
							"createValidator(address,address)": {
								"notice": "Create a validator given token and owner"
							},
							"getValidator(address,address)": {
								"notice": "Return address of validator created by this factory"
							},
							"isValidatorl(address)": {
								"notice": "Is a valid validator created by this factory."
							},
							"setClaimCustomFee(address,uint256)": {
								"notice": "Set overriding fee for a validator from the default"
							},
							"setDepositCustomFee(address,uint256)": {
								"notice": "Set overriding fee for a validator from the default"
							},
							"setFee(bool,uint256)": {
								"notice": "Set default fee for stable and volatile pools."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
					"exportedSymbols": {
						"Clones": [
							162
						],
						"Errors": [
							184
						]
					},
					"id": 163,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "../utils/Errors.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 163,
							"sourceUnit": 185,
							"src": "126:43:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 184,
										"src": "134:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Clones",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "171:599:0",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method."
							},
							"fullyImplemented": true,
							"id": 162,
							"linearizedBaseContracts": [
								162
							],
							"name": "Clones",
							"nameLocation": "779:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1064:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 13,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "1087:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1103:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 12,
														"name": "clone",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															18,
															63
														],
														"referencedDeclaration": 63,
														"src": "1081:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,uint256) returns (address)"
														}
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1081:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 11,
												"id": 16,
												"nodeType": "Return",
												"src": "1074:31:0"
											}
										]
									},
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "792:192:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create opcode, which should never revert."
									},
									"id": 18,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "998:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1012:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "1004:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:24:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "1054:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "1046:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1045:18:0"
									},
									"scope": 162,
									"src": "989:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "1594:820:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 30,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1616:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$162",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$162",
																		"typeString": "library Clones"
																	}
																],
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1608:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 28,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1608:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1608:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1622:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1608:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 33,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "1632:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1608:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 47,
												"nodeType": "IfStatement",
												"src": "1604:123:0",
												"trueBody": {
													"id": 46,
													"nodeType": "Block",
													"src": "1639:88:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 40,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1695:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Clones_$162",
																						"typeString": "library Clones"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Clones_$162",
																						"typeString": "library Clones"
																					}
																				],
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1687:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 38,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1687:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 41,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1687:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 42,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1701:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1687:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 43,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 23,
																		"src": "1710:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 35,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 184,
																		"src": "1660:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$184_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 37,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1667:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 172,
																	"src": "1660:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1660:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 45,
															"nodeType": "RevertStatement",
															"src": "1653:63:0"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "1761:553:0",
													"nodeType": "YulBlock",
													"src": "1761:553:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1966:4:0",
																		"nodeType": "YulLiteral",
																		"src": "1966:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1979:4:0",
																						"nodeType": "YulLiteral",
																						"src": "1979:4:0",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1989:4:0",
																								"nodeType": "YulLiteral",
																								"src": "1989:4:0",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nativeSrc": "1995:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "1995:14:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1985:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "1985:3:0"
																						},
																						"nativeSrc": "1985:25:0",
																						"nodeType": "YulFunctionCall",
																						"src": "1985:25:0"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "1975:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "1975:3:0"
																				},
																				"nativeSrc": "1975:36:0",
																				"nodeType": "YulFunctionCall",
																				"src": "1975:36:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2013:48:0",
																				"nodeType": "YulLiteral",
																				"src": "2013:48:0",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "1972:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "1972:2:0"
																		},
																		"nativeSrc": "1972:90:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1972:90:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1959:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1959:6:0"
																},
																"nativeSrc": "1959:104:0",
																"nodeType": "YulFunctionCall",
																"src": "1959:104:0"
															},
															"nativeSrc": "1959:104:0",
															"nodeType": "YulExpressionStatement",
															"src": "1959:104:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2184:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2184:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2197:4:0",
																						"nodeType": "YulLiteral",
																						"src": "2197:4:0",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nativeSrc": "2203:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "2203:14:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2193:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "2193:3:0"
																				},
																				"nativeSrc": "2193:25:0",
																				"nodeType": "YulFunctionCall",
																				"src": "2193:25:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2220:32:0",
																				"nodeType": "YulLiteral",
																				"src": "2220:32:0",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2190:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "2190:2:0"
																		},
																		"nativeSrc": "2190:63:0",
																		"nodeType": "YulFunctionCall",
																		"src": "2190:63:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2177:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2177:6:0"
																},
																"nativeSrc": "2177:77:0",
																"nodeType": "YulFunctionCall",
																"src": "2177:77:0"
															},
															"nativeSrc": "2177:77:0",
															"nodeType": "YulExpressionStatement",
															"src": "2177:77:0"
														},
														{
															"nativeSrc": "2267:37:0",
															"nodeType": "YulAssignment",
															"src": "2267:37:0",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2286:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "2286:5:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2293:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2293:4:0",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2299:4:0",
																		"nodeType": "YulLiteral",
																		"src": "2299:4:0",
																		"type": "",
																		"value": "0x37"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nativeSrc": "2279:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2279:6:0"
																},
																"nativeSrc": "2279:25:0",
																"nodeType": "YulFunctionCall",
																"src": "2279:25:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "2267:8:0",
																	"nodeType": "YulIdentifier",
																	"src": "2267:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": false,
														"src": "1995:14:0",
														"valueSize": 1
													},
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": false,
														"src": "2203:14:0",
														"valueSize": 1
													},
													{
														"declaration": 26,
														"isOffset": false,
														"isSlot": false,
														"src": "2267:8:0",
														"valueSize": 1
													},
													{
														"declaration": 23,
														"isOffset": false,
														"isSlot": false,
														"src": "2286:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 48,
												"nodeType": "InlineAssembly",
												"src": "1736:578:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 49,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "2327:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2347:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2339:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 50,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2339:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2339:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2327:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 61,
												"nodeType": "IfStatement",
												"src": "2323:85:0",
												"trueBody": {
													"id": 60,
													"nodeType": "Block",
													"src": "2351:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 55,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 184,
																		"src": "2372:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$184_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2379:16:0",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 178,
																	"src": "2372:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2372:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 59,
															"nodeType": "RevertStatement",
															"src": "2365:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1118:381:0",
										"text": " @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "1513:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1527:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "1519:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1551:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "1543:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1543:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1518:39:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "1584:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "1576:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1576:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1575:18:0"
									},
									"scope": 162,
									"src": "1504:910:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2891:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 74,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "2927:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 75,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "2943:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "30",
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2949:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 73,
														"name": "cloneDeterministic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															80,
															127
														],
														"referencedDeclaration": 127,
														"src": "2908:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (address,bytes32,uint256) returns (address)"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2908:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 72,
												"id": 78,
												"nodeType": "Return",
												"src": "2901:50:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2420:364:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple time will revert, since\n the clones cannot be deployed twice at the same address."
									},
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "2798:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "2825:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2817:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2817:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2849:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2841:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 67,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2841:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2816:38:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "2881:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2873:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2872:18:0"
									},
									"scope": 162,
									"src": "2789:169:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "3531:827:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 94,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3553:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$162",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$162",
																		"typeString": "library Clones"
																	}
																],
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3545:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 92,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3545:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3545:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 96,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3559:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3545:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 97,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "3569:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3545:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 111,
												"nodeType": "IfStatement",
												"src": "3541:123:0",
												"trueBody": {
													"id": 110,
													"nodeType": "Block",
													"src": "3576:88:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 104,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3632:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Clones_$162",
																						"typeString": "library Clones"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Clones_$162",
																						"typeString": "library Clones"
																					}
																				],
																				"id": 103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3624:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 102,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3624:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3624:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3638:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3624:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 107,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 87,
																		"src": "3647:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 99,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 184,
																		"src": "3597:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$184_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3604:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 172,
																	"src": "3597:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3597:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 109,
															"nodeType": "RevertStatement",
															"src": "3590:63:0"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "3698:560:0",
													"nodeType": "YulBlock",
													"src": "3698:560:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3903:4:0",
																		"nodeType": "YulLiteral",
																		"src": "3903:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3916:4:0",
																						"nodeType": "YulLiteral",
																						"src": "3916:4:0",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3926:4:0",
																								"nodeType": "YulLiteral",
																								"src": "3926:4:0",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nativeSrc": "3932:14:0",
																								"nodeType": "YulIdentifier",
																								"src": "3932:14:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3922:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "3922:3:0"
																						},
																						"nativeSrc": "3922:25:0",
																						"nodeType": "YulFunctionCall",
																						"src": "3922:25:0"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "3912:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "3912:3:0"
																				},
																				"nativeSrc": "3912:36:0",
																				"nodeType": "YulFunctionCall",
																				"src": "3912:36:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3950:48:0",
																				"nodeType": "YulLiteral",
																				"src": "3950:48:0",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3909:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "3909:2:0"
																		},
																		"nativeSrc": "3909:90:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3909:90:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3896:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "3896:6:0"
																},
																"nativeSrc": "3896:104:0",
																"nodeType": "YulFunctionCall",
																"src": "3896:104:0"
															},
															"nativeSrc": "3896:104:0",
															"nodeType": "YulExpressionStatement",
															"src": "3896:104:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4121:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4121:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4134:4:0",
																						"nodeType": "YulLiteral",
																						"src": "4134:4:0",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nativeSrc": "4140:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "4140:14:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "4130:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "4130:3:0"
																				},
																				"nativeSrc": "4130:25:0",
																				"nodeType": "YulFunctionCall",
																				"src": "4130:25:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4157:32:0",
																				"nodeType": "YulLiteral",
																				"src": "4157:32:0",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4127:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "4127:2:0"
																		},
																		"nativeSrc": "4127:63:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4127:63:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4114:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4114:6:0"
																},
																"nativeSrc": "4114:77:0",
																"nodeType": "YulFunctionCall",
																"src": "4114:77:0"
															},
															"nativeSrc": "4114:77:0",
															"nodeType": "YulExpressionStatement",
															"src": "4114:77:0"
														},
														{
															"nativeSrc": "4204:44:0",
															"nodeType": "YulAssignment",
															"src": "4204:44:0",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4224:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "4224:5:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4231:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4231:4:0",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4237:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4237:4:0",
																		"type": "",
																		"value": "0x37"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "4243:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "4243:4:0"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nativeSrc": "4216:7:0",
																	"nodeType": "YulIdentifier",
																	"src": "4216:7:0"
																},
																"nativeSrc": "4216:32:0",
																"nodeType": "YulFunctionCall",
																"src": "4216:32:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nativeSrc": "4204:8:0",
																	"nodeType": "YulIdentifier",
																	"src": "4204:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 83,
														"isOffset": false,
														"isSlot": false,
														"src": "3932:14:0",
														"valueSize": 1
													},
													{
														"declaration": 83,
														"isOffset": false,
														"isSlot": false,
														"src": "4140:14:0",
														"valueSize": 1
													},
													{
														"declaration": 90,
														"isOffset": false,
														"isSlot": false,
														"src": "4204:8:0",
														"valueSize": 1
													},
													{
														"declaration": 85,
														"isOffset": false,
														"isSlot": false,
														"src": "4243:4:0",
														"valueSize": 1
													},
													{
														"declaration": 87,
														"isOffset": false,
														"isSlot": false,
														"src": "4224:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 112,
												"nodeType": "InlineAssembly",
												"src": "3673:585:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 113,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "4271:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4291:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4283:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 114,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4283:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4283:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4271:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 125,
												"nodeType": "IfStatement",
												"src": "4267:85:0",
												"trueBody": {
													"id": 124,
													"nodeType": "Block",
													"src": "4295:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 119,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 184,
																		"src": "4316:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$184_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4323:16:0",
																	"memberName": "FailedDeployment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 178,
																	"src": "4316:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4316:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 123,
															"nodeType": "RevertStatement",
															"src": "4309:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2964:415:0",
										"text": " @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n a `value` parameter to send native currency to the new contract.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."
									},
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "3393:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "3429:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "3421:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3421:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3461:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "3453:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 84,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3483:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "3475:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:83:0"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "3521:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "3513:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3513:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3512:18:0"
									},
									"scope": 162,
									"src": "3384:974:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "4633:537:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4668:496:0",
													"nodeType": "YulBlock",
													"src": "4668:496:0",
													"statements": [
														{
															"nativeSrc": "4682:22:0",
															"nodeType": "YulVariableDeclaration",
															"src": "4682:22:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4699:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4699:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4693:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "4693:5:0"
																},
																"nativeSrc": "4693:11:0",
																"nodeType": "YulFunctionCall",
																"src": "4693:11:0"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "4686:3:0",
																	"nodeType": "YulTypedName",
																	"src": "4686:3:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4728:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "4728:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4733:4:0",
																				"nodeType": "YulLiteral",
																				"src": "4733:4:0",
																				"type": "",
																				"value": "0x38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4724:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4724:3:0"
																		},
																		"nativeSrc": "4724:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4724:14:0"
																	},
																	{
																		"name": "deployer",
																		"nativeSrc": "4740:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "4740:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4717:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4717:6:0"
																},
																"nativeSrc": "4717:32:0",
																"nodeType": "YulFunctionCall",
																"src": "4717:32:0"
															},
															"nativeSrc": "4717:32:0",
															"nodeType": "YulExpressionStatement",
															"src": "4717:32:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4773:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "4773:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4778:4:0",
																				"nodeType": "YulLiteral",
																				"src": "4778:4:0",
																				"type": "",
																				"value": "0x24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4769:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4769:3:0"
																		},
																		"nativeSrc": "4769:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4769:14:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4785:34:0",
																		"nodeType": "YulLiteral",
																		"src": "4785:34:0",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf3ff"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4762:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4762:6:0"
																},
																"nativeSrc": "4762:58:0",
																"nodeType": "YulFunctionCall",
																"src": "4762:58:0"
															},
															"nativeSrc": "4762:58:0",
															"nodeType": "YulExpressionStatement",
															"src": "4762:58:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4844:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "4844:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4849:4:0",
																				"nodeType": "YulLiteral",
																				"src": "4849:4:0",
																				"type": "",
																				"value": "0x14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4840:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:0"
																		},
																		"nativeSrc": "4840:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4840:14:0"
																	},
																	{
																		"name": "implementation",
																		"nativeSrc": "4856:14:0",
																		"nodeType": "YulIdentifier",
																		"src": "4856:14:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4833:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4833:6:0"
																},
																"nativeSrc": "4833:38:0",
																"nodeType": "YulFunctionCall",
																"src": "4833:38:0"
															},
															"nativeSrc": "4833:38:0",
															"nodeType": "YulExpressionStatement",
															"src": "4833:38:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4891:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "4891:3:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4896:42:0",
																		"nodeType": "YulLiteral",
																		"src": "4896:42:0",
																		"type": "",
																		"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4884:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4884:6:0"
																},
																"nativeSrc": "4884:55:0",
																"nodeType": "YulFunctionCall",
																"src": "4884:55:0"
															},
															"nativeSrc": "4884:55:0",
															"nodeType": "YulExpressionStatement",
															"src": "4884:55:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4963:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "4963:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4968:4:0",
																				"nodeType": "YulLiteral",
																				"src": "4968:4:0",
																				"type": "",
																				"value": "0x58"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4959:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4959:3:0"
																		},
																		"nativeSrc": "4959:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4959:14:0"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "4975:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "4975:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4952:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4952:6:0"
																},
																"nativeSrc": "4952:28:0",
																"nodeType": "YulFunctionCall",
																"src": "4952:28:0"
															},
															"nativeSrc": "4952:28:0",
															"nodeType": "YulExpressionStatement",
															"src": "4952:28:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "5004:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "5004:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5009:4:0",
																				"nodeType": "YulLiteral",
																				"src": "5009:4:0",
																				"type": "",
																				"value": "0x78"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5000:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "5000:3:0"
																		},
																		"nativeSrc": "5000:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5000:14:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nativeSrc": "5030:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "5030:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5035:4:0",
																						"nodeType": "YulLiteral",
																						"src": "5035:4:0",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:0"
																				},
																				"nativeSrc": "5026:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:14:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5042:4:0",
																				"nodeType": "YulLiteral",
																				"src": "5042:4:0",
																				"type": "",
																				"value": "0x37"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "5016:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "5016:9:0"
																		},
																		"nativeSrc": "5016:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5016:31:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4993:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4993:6:0"
																},
																"nativeSrc": "4993:55:0",
																"nodeType": "YulFunctionCall",
																"src": "4993:55:0"
															},
															"nativeSrc": "4993:55:0",
															"nodeType": "YulExpressionStatement",
															"src": "4993:55:0"
														},
														{
															"nativeSrc": "5061:93:0",
															"nodeType": "YulAssignment",
															"src": "5061:93:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nativeSrc": "5092:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "5092:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5097:4:0",
																						"nodeType": "YulLiteral",
																						"src": "5097:4:0",
																						"type": "",
																						"value": "0x43"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5088:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "5088:3:0"
																				},
																				"nativeSrc": "5088:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "5088:14:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5104:4:0",
																				"nodeType": "YulLiteral",
																				"src": "5104:4:0",
																				"type": "",
																				"value": "0x55"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "5078:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "5078:9:0"
																		},
																		"nativeSrc": "5078:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5078:31:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5111:42:0",
																		"nodeType": "YulLiteral",
																		"src": "5111:42:0",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5074:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "5074:3:0"
																},
																"nativeSrc": "5074:80:0",
																"nodeType": "YulFunctionCall",
																"src": "5074:80:0"
															},
															"variableNames": [
																{
																	"name": "predicted",
																	"nativeSrc": "5061:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "5061:9:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 134,
														"isOffset": false,
														"isSlot": false,
														"src": "4740:8:0",
														"valueSize": 1
													},
													{
														"declaration": 130,
														"isOffset": false,
														"isSlot": false,
														"src": "4856:14:0",
														"valueSize": 1
													},
													{
														"declaration": 137,
														"isOffset": false,
														"isSlot": false,
														"src": "5061:9:0",
														"valueSize": 1
													},
													{
														"declaration": 132,
														"isOffset": false,
														"isSlot": false,
														"src": "4975:4:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 139,
												"nodeType": "InlineAssembly",
												"src": "4643:521:0"
											}
										]
									},
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "4364:99:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "4477:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "4522:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4514:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4514:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "4554:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4546:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "4576:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4568:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4568:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4504:86:0"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "4622:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4614:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4614:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4613:19:0"
									},
									"scope": 162,
									"src": "4468:702:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "5419:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 152,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "5464:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 153,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "5480:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 156,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5494:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$162",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$162",
																		"typeString": "library Clones"
																	}
																],
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5486:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 154,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5486:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5486:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 151,
														"name": "predictDeterministicAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															141,
															161
														],
														"referencedDeclaration": 141,
														"src": "5436:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,bytes32,address) pure returns (address)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5436:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 150,
												"id": 159,
												"nodeType": "Return",
												"src": "5429:71:0"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "5176:99:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "5289:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "5334:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "5326:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "5366:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "5358:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 145,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5358:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5316:60:0"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "5408:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "5400:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5400:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5399:19:0"
									},
									"scope": 162,
									"src": "5280:227:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 163,
							"src": "771:4738:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:5410:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							184
						]
					},
					"id": 185,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 164,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 165,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:1",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 184,
							"linearizedBaseContracts": [
								184
							],
							"name": "Errors",
							"nameLocation": "419:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:1",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 172,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "557:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "574:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:1"
									},
									"src": "531:59:1"
								},
								{
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:1",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 175,
									"name": "FailedCall",
									"nameLocation": "696:10:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:1"
									},
									"src": "690:19:1"
								},
								{
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:1",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 178,
									"name": "FailedDeployment",
									"nameLocation": "772:16:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:1"
									},
									"src": "766:25:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:1",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 183,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "884:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:1"
									},
									"src": "860:33:1"
								}
							],
							"scope": 185,
							"src": "411:484:1",
							"usedErrors": [
								172,
								175,
								178,
								183
							],
							"usedEvents": []
						}
					],
					"src": "100:796:1"
				},
				"id": 1
			},
			"contracts/ValidatorFactory.sol": {
				"ast": {
					"absolutePath": "contracts/ValidatorFactory.sol",
					"exportedSymbols": {
						"Clones": [
							162
						],
						"Errors": [
							184
						],
						"IValidator": [
							645
						],
						"IValidatorFactory": [
							796
						],
						"ValidatorFactory": [
							634
						]
					},
					"id": 635,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 186,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
							"file": "@openzeppelin/contracts/proxy/Clones.sol",
							"id": 187,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 635,
							"sourceUnit": 163,
							"src": "61:50:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IValidatorFactory.sol",
							"file": "./interfaces/IValidatorFactory.sol",
							"id": 188,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 635,
							"sourceUnit": 797,
							"src": "115:44:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IValidator.sol",
							"file": "./interfaces/IValidator.sol",
							"id": 189,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 635,
							"sourceUnit": 646,
							"src": "161:37:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 190,
										"name": "IValidatorFactory",
										"nameLocations": [
											"232:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 796,
										"src": "232:17:2"
									},
									"id": 191,
									"nodeType": "InheritanceSpecifier",
									"src": "232:17:2"
								}
							],
							"canonicalName": "ValidatorFactory",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 634,
							"linearizedBaseContracts": [
								634,
								796
							],
							"name": "ValidatorFactory",
							"nameLocation": "212:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										795
									],
									"constant": false,
									"functionSelector": "5c60da1b",
									"id": 193,
									"mutability": "immutable",
									"name": "implementation",
									"nameLocation": "282:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 634,
									"src": "257:39:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 192,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "257:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										785
									],
									"constant": false,
									"functionSelector": "b187bd26",
									"id": 195,
									"mutability": "mutable",
									"name": "isPaused",
									"nameLocation": "317:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 634,
									"src": "305:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 194,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "305:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9fd0506d",
									"id": 197,
									"mutability": "mutable",
									"name": "pauser",
									"nameLocation": "347:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 634,
									"src": "332:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 196,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "332:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "67a52793",
									"id": 199,
									"mutability": "mutable",
									"name": "depositFee",
									"nameLocation": "381:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 634,
									"src": "366:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 198,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "366:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "99d32fc4",
									"id": 201,
									"mutability": "mutable",
									"name": "claimFee",
									"nameLocation": "413:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 634,
									"src": "398:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 200,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "398:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "bc063e1a",
									"id": 204,
									"mutability": "constant",
									"name": "MAX_FEE",
									"nameLocation": "452:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 634,
									"src": "428:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 202,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "428:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333030",
										"id": 203,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "462:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_300_by_1",
											"typeString": "int_const 300"
										},
										"value": "300"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d0fb0203",
									"id": 206,
									"mutability": "mutable",
									"name": "feeManager",
									"nameLocation": "495:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 634,
									"src": "480:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 205,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "480:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										790
									],
									"constant": false,
									"functionSelector": "46c96aac",
									"id": 208,
									"mutability": "mutable",
									"name": "voter",
									"nameLocation": "527:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 634,
									"src": "512:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 207,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "512:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 214,
									"mutability": "mutable",
									"name": "_validatorList",
									"nameLocation": "601:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 634,
									"src": "545:70:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
										"typeString": "mapping(address => mapping(address => address))"
									},
									"typeName": {
										"id": 213,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 209,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "553:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "545:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
											"typeString": "mapping(address => mapping(address => address))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 212,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 210,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "572:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "564:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
												"typeString": "mapping(address => address)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 211,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "583:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "bcecf81b",
									"id": 217,
									"mutability": "mutable",
									"name": "allValidators",
									"nameLocation": "639:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 634,
									"src": "622:30:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 215,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "622:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 216,
										"nodeType": "ArrayTypeName",
										"src": "622:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 221,
									"mutability": "mutable",
									"name": "_isValidator",
									"nameLocation": "692:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 634,
									"src": "659:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 220,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 218,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "667:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "659:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 219,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "678:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "28a6b3ff",
									"id": 225,
									"mutability": "mutable",
									"name": "customDepositFee",
									"nameLocation": "746:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 634,
									"src": "711:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 224,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 222,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "719:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "711:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 223,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "730:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a74adceb",
									"id": 229,
									"mutability": "mutable",
									"name": "customClaimFee",
									"nameLocation": "804:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 634,
									"src": "769:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 228,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 226,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "777:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "769:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 227,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "788:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "870:237:2",
										"statements": [
											{
												"expression": {
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 234,
														"name": "implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "881:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 235,
														"name": "_implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "898:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "881:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "881:32:2"
											},
											{
												"expression": {
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 238,
														"name": "voter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "924:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 239,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "932:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "936:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "932:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "924:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "924:18:2"
											},
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 243,
														"name": "pauser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "953:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 244,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "962:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "966:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "962:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "953:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "953:19:2"
											},
											{
												"expression": {
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 248,
														"name": "feeManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "983:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 249,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "996:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1000:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "996:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "983:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "983:23:2"
											},
											{
												"expression": {
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 253,
														"name": "isPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "1017:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1028:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1017:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "1017:16:2"
											},
											{
												"expression": {
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 257,
														"name": "depositFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "1044:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "35",
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1057:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "1044:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "1044:14:2"
											},
											{
												"expression": {
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 261,
														"name": "claimFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "1078:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3330",
														"id": 262,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1089:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_30_by_1",
															"typeString": "int_const 30"
														},
														"value": "30"
													},
													"src": "1078:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 264,
												"nodeType": "ExpressionStatement",
												"src": "1078:13:2"
											}
										]
									},
									"id": 266,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "_implementation",
												"nameLocation": "853:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "845:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "845:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "844:25:2"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "870:0:2"
									},
									"scope": 634,
									"src": "833:274:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										707
									],
									"body": {
										"id": 275,
										"nodeType": "Block",
										"src": "1217:46:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 272,
														"name": "allValidators",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "1235:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1249:6:2",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1235:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 271,
												"id": 274,
												"nodeType": "Return",
												"src": "1228:27:2"
											}
										]
									},
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "1115:33:2",
										"text": "@inheritdoc IValidatorFactory"
									},
									"functionSelector": "f64ee765",
									"id": 276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allValidatorsLength",
									"nameLocation": "1163:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1182:2:2"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "1208:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1208:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1207:9:2"
									},
									"scope": 634,
									"src": "1154:109:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										717
									],
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "1394:54:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 286,
															"name": "_validatorList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "1412:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
																"typeString": "mapping(address => mapping(address => address))"
															}
														},
														"id": 288,
														"indexExpression": {
															"id": 287,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "1427:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1412:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 290,
													"indexExpression": {
														"id": 289,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "1434:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1412:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 285,
												"id": 291,
												"nodeType": "Return",
												"src": "1405:35:2"
											}
										]
									},
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "1271:33:2",
										"text": "@inheritdoc IValidatorFactory"
									},
									"functionSelector": "cd1a0dd2",
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getValidator",
									"nameLocation": "1319:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1340:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "1332:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1355:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "1347:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1347:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1331:30:2"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "1385:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1385:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1384:9:2"
									},
									"scope": 634,
									"src": "1310:138:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										725
									],
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "1560:44:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 301,
														"name": "_isValidator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "1578:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 303,
													"indexExpression": {
														"id": 302,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "1591:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1578:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 300,
												"id": 304,
												"nodeType": "Return",
												"src": "1571:25:2"
											}
										]
									},
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "1456:33:2",
										"text": "@inheritdoc IValidatorFactory"
									},
									"functionSelector": "38ed1793",
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidatorl",
									"nameLocation": "1504:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1525:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "1517:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1517:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1516:14:2"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "1554:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 298,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1554:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1553:6:2"
									},
									"scope": 634,
									"src": "1495:109:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										731
									],
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "1694:118:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 312,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1709:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1713:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1709:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 314,
														"name": "voter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "1723:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1709:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 319,
												"nodeType": "IfStatement",
												"src": "1705:42:2",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 316,
															"name": "NotVoter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "1737:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1737:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 318,
													"nodeType": "RevertStatement",
													"src": "1730:17:2"
												}
											},
											{
												"expression": {
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 320,
														"name": "voter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "1758:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 321,
														"name": "_voter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "1766:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1758:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "1758:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 325,
															"name": "_voter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "1797:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 324,
														"name": "SetVoter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "1788:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1788:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 327,
												"nodeType": "EmitStatement",
												"src": "1783:21:2"
											}
										]
									},
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "1612:33:2",
										"text": "@inheritdoc IValidatorFactory"
									},
									"functionSelector": "4bc2a657",
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setVoter",
									"nameLocation": "1660:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "_voter",
												"nameLocation": "1677:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1669:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1669:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1668:16:2"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:0:2"
									},
									"scope": 634,
									"src": "1651:161:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										736
									],
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "1865:182:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 334,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1880:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1884:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1880:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 336,
														"name": "pauser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "1894:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1880:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 341,
												"nodeType": "IfStatement",
												"src": "1876:44:2",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 338,
															"name": "NotPauser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "1909:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1909:11:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 340,
													"nodeType": "RevertStatement",
													"src": "1902:18:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 342,
														"name": "_pauser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "1935:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1954:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1946:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 343,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1946:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 346,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1946:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1935:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 351,
												"nodeType": "IfStatement",
												"src": "1931:47:2",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 348,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "1965:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1965:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 350,
													"nodeType": "RevertStatement",
													"src": "1958:20:2"
												}
											},
											{
												"expression": {
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 352,
														"name": "pauser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "1989:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 353,
														"name": "_pauser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "1998:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1989:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "1989:16:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 357,
															"name": "_pauser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "2031:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 356,
														"name": "SetPauser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 655,
														"src": "2021:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2021:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "EmitStatement",
												"src": "2016:23:2"
											}
										]
									},
									"functionSelector": "2d88af4a",
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setPauser",
									"nameLocation": "1829:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "_pauser",
												"nameLocation": "1847:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "1839:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:17:2"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:0:2"
									},
									"scope": 634,
									"src": "1820:227:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										741
									],
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "2100:128:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 366,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2115:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2119:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2115:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 368,
														"name": "pauser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "2129:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2115:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "2111:44:2",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 370,
															"name": "NotPauser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "2144:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2144:11:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 372,
													"nodeType": "RevertStatement",
													"src": "2137:18:2"
												}
											},
											{
												"expression": {
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 374,
														"name": "isPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "2166:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 375,
														"name": "_state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "2177:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2166:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "2166:17:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 379,
															"name": "_state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "2213:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 378,
														"name": "SetPauseState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "2199:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2199:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 381,
												"nodeType": "EmitStatement",
												"src": "2194:26:2"
											}
										]
									},
									"functionSelector": "cdb88ad1",
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setPauseState",
									"nameLocation": "2064:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "_state",
												"nameLocation": "2083:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2078:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2078:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2077:13:2"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2100:0:2"
									},
									"scope": 634,
									"src": "2055:173:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										746
									],
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "2289:210:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 388,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2304:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2308:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2304:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 390,
														"name": "feeManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "2318:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2304:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 395,
												"nodeType": "IfStatement",
												"src": "2300:52:2",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 392,
															"name": "NotFeeManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "2337:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2337:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 394,
													"nodeType": "RevertStatement",
													"src": "2330:22:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 396,
														"name": "_feeManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "2367:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2390:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2382:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 397,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2382:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2382:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2367:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 405,
												"nodeType": "IfStatement",
												"src": "2363:51:2",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 402,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "2401:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2401:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 404,
													"nodeType": "RevertStatement",
													"src": "2394:20:2"
												}
											},
											{
												"expression": {
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "feeManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "2425:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 407,
														"name": "_feeManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "2438:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2425:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "2425:24:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 411,
															"name": "_feeManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "2479:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 410,
														"name": "SetFeeManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "2465:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2465:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 413,
												"nodeType": "EmitStatement",
												"src": "2460:31:2"
											}
										]
									},
									"functionSelector": "472d35b9",
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeManager",
									"nameLocation": "2245:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "_feeManager",
												"nameLocation": "2267:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "2259:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2259:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2258:21:2"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2289:0:2"
									},
									"scope": 634,
									"src": "2236:263:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "2601:276:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 423,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2616:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2620:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2616:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 425,
														"name": "feeManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "2630:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2616:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 430,
												"nodeType": "IfStatement",
												"src": "2612:52:2",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 427,
															"name": "NotFeeManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "2649:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2649:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 429,
													"nodeType": "RevertStatement",
													"src": "2642:22:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 431,
														"name": "_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2679:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 432,
														"name": "MAX_FEE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "2686:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2679:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 437,
												"nodeType": "IfStatement",
												"src": "2675:39:2",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 434,
															"name": "FeeTooHigh",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "2702:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2702:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 436,
													"nodeType": "RevertStatement",
													"src": "2695:19:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 438,
														"name": "_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2729:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2737:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2729:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 444,
												"nodeType": "IfStatement",
												"src": "2725:31:2",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 441,
															"name": "ZeroFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "2747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2747:9:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 443,
													"nodeType": "RevertStatement",
													"src": "2740:16:2"
												}
											},
											{
												"condition": {
													"id": 445,
													"name": "_type",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 418,
													"src": "2771:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 455,
													"nodeType": "Block",
													"src": "2828:42:2",
													"statements": [
														{
															"expression": {
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 451,
																	"name": "claimFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "2843:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 452,
																	"name": "_fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "2854:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2843:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 454,
															"nodeType": "ExpressionStatement",
															"src": "2843:15:2"
														}
													]
												},
												"id": 456,
												"nodeType": "IfStatement",
												"src": "2767:103:2",
												"trueBody": {
													"id": 450,
													"nodeType": "Block",
													"src": "2778:44:2",
													"statements": [
														{
															"expression": {
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 446,
																	"name": "depositFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "2793:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 447,
																	"name": "_fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "2806:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2793:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 449,
															"nodeType": "ExpressionStatement",
															"src": "2793:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "2511:33:2",
										"text": "@inheritdoc IValidatorFactory"
									},
									"functionSelector": "e1f76b44",
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setFee",
									"nameLocation": "2559:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "_type",
												"nameLocation": "2571:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2566:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 417,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2566:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "_fee",
												"nameLocation": "2586:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2578:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2578:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2565:26:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2601:0:2"
									},
									"scope": 634,
									"src": "2550:327:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										762
									],
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "2994:364:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 466,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3009:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3013:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3009:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 468,
														"name": "feeManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "3023:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3009:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 473,
												"nodeType": "IfStatement",
												"src": "3005:52:2",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 470,
															"name": "NotFeeManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "3042:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3042:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 472,
													"nodeType": "RevertStatement",
													"src": "3035:22:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 474,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "3153:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 475,
														"name": "MAX_FEE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "3159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3153:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "3149:38:2",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 477,
															"name": "FeeTooHigh",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "3175:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3175:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 479,
													"nodeType": "RevertStatement",
													"src": "3168:19:2"
												}
											},
											{
												"condition": {
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3202:24:2",
													"subExpression": {
														"baseExpression": {
															"id": 481,
															"name": "_isValidator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "3203:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 483,
														"indexExpression": {
															"id": 482,
															"name": "validator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "3216:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3203:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 488,
												"nodeType": "IfStatement",
												"src": "3198:55:2",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 485,
															"name": "InvalidValidator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "3235:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3235:18:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 487,
													"nodeType": "RevertStatement",
													"src": "3228:25:2"
												}
											},
											{
												"expression": {
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 489,
															"name": "customDepositFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "3266:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 491,
														"indexExpression": {
															"id": 490,
															"name": "validator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "3283:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3266:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 492,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "3296:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3266:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "3266:33:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 496,
															"name": "validator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "3335:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "3346:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 495,
														"name": "SetDepositCustomFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "3315:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3315:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "EmitStatement",
												"src": "3310:40:2"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "2885:33:2",
										"text": "@inheritdoc IValidatorFactory"
									},
									"functionSelector": "2c3de946",
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setDepositCustomFee",
									"nameLocation": "2933:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "2961:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "2953:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2953:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "2980:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "2972:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2952:32:2"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2994:0:2"
									},
									"scope": 634,
									"src": "2924:434:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										770
									],
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "3473:360:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 509,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3488:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3492:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3488:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 511,
														"name": "feeManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "3502:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3488:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 516,
												"nodeType": "IfStatement",
												"src": "3484:52:2",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 513,
															"name": "NotFeeManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "3521:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3521:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 515,
													"nodeType": "RevertStatement",
													"src": "3514:22:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 517,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "3632:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 518,
														"name": "MAX_FEE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "3638:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3632:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 523,
												"nodeType": "IfStatement",
												"src": "3628:38:2",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 520,
															"name": "FeeTooHigh",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "3654:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3654:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 522,
													"nodeType": "RevertStatement",
													"src": "3647:19:2"
												}
											},
											{
												"condition": {
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3681:24:2",
													"subExpression": {
														"baseExpression": {
															"id": 524,
															"name": "_isValidator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "3682:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 526,
														"indexExpression": {
															"id": 525,
															"name": "validator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "3695:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3682:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 531,
												"nodeType": "IfStatement",
												"src": "3677:55:2",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 528,
															"name": "InvalidValidator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "3714:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3714:18:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 530,
													"nodeType": "RevertStatement",
													"src": "3707:25:2"
												}
											},
											{
												"expression": {
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 532,
															"name": "customClaimFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "3745:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 534,
														"indexExpression": {
															"id": 533,
															"name": "validator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "3760:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3745:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 535,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "3773:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3745:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "3745:31:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 539,
															"name": "validator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "3810:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "3821:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 538,
														"name": "SetClaimCustomFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "3792:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3792:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "EmitStatement",
												"src": "3787:38:2"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "3366:33:2",
										"text": "@inheritdoc IValidatorFactory"
									},
									"functionSelector": "984fa01f",
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setClaimCustomFee",
									"nameLocation": "3414:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "3440:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "3432:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "3459:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "3451:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:32:2"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3473:0:2"
									},
									"scope": 634,
									"src": "3405:428:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										780
									],
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "3972:650:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "3987:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4005:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3997:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3997:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3997:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3987:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 563,
												"nodeType": "IfStatement",
												"src": "3983:46:2",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 560,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "4016:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4016:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 562,
													"nodeType": "RevertStatement",
													"src": "4009:20:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 564,
																"name": "_validatorList",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "4046:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
																	"typeString": "mapping(address => mapping(address => address))"
																}
															},
															"id": 566,
															"indexExpression": {
																"id": 565,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 547,
																"src": "4061:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4046:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 568,
														"indexExpression": {
															"id": 567,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "4069:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4046:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4088:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4080:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 569,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4080:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 572,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4080:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4046:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "4042:76:2",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 574,
															"name": "PoolAlreadyExists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "4099:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4099:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 576,
													"nodeType": "RevertStatement",
													"src": "4092:26:2"
												}
											},
											{
												"assignments": [
													579
												],
												"declarations": [
													{
														"constant": false,
														"id": 579,
														"mutability": "mutable",
														"name": "salt",
														"nameLocation": "4139:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 632,
														"src": "4131:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 578,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4131:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 587,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 583,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 547,
																	"src": "4173:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 584,
																	"name": "_owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 549,
																	"src": "4181:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 581,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4156:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4160:12:2",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "4156:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4156:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 580,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4146:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4146:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4131:58:2"
											},
											{
												"expression": {
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 588,
														"name": "validator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "4255:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 591,
																"name": "implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "4293:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 592,
																"name": "salt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "4309:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 589,
																"name": "Clones",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 162,
																"src": "4267:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Clones_$162_$",
																	"typeString": "type(library Clones)"
																}
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4274:18:2",
															"memberName": "cloneDeterministic",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 80,
															"src": "4267:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$_t_address_$",
																"typeString": "function (address,bytes32) returns (address)"
															}
														},
														"id": 593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4267:47:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4255:59:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "4255:59:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 600,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "4368:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "4376:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 597,
																	"name": "validator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 552,
																	"src": "4346:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 596,
																"name": "IValidator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "4335:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IValidator_$645_$",
																	"typeString": "type(contract IValidator)"
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4335:21:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IValidator_$645",
																"typeString": "contract IValidator"
															}
														},
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4357:10:2",
														"memberName": "initialize",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 644,
														"src": "4335:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address) external"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4335:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 603,
												"nodeType": "ExpressionStatement",
												"src": "4335:48:2"
											},
											{
												"expression": {
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 604,
																"name": "_validatorList",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "4404:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
																	"typeString": "mapping(address => mapping(address => address))"
																}
															},
															"id": 607,
															"indexExpression": {
																"id": 605,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 547,
																"src": "4419:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4404:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 608,
														"indexExpression": {
															"id": 606,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "4427:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4404:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 609,
														"name": "validator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "4437:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4404:42:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 611,
												"nodeType": "ExpressionStatement",
												"src": "4404:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 615,
															"name": "validator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4478:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 612,
															"name": "allValidators",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "4459:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4473:4:2",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4459:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4459:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "4459:29:2"
											},
											{
												"expression": {
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 618,
															"name": "_isValidator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "4501:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 620,
														"indexExpression": {
															"id": 619,
															"name": "validator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4514:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4501:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 621,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4527:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4501:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "4501:30:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 625,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "4566:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 626,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "4574:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 627,
															"name": "validator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "4582:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 628,
																"name": "allValidators",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "4593:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage",
																	"typeString": "address[] storage ref"
																}
															},
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4607:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4593:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 624,
														"name": "ValidatorCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 685,
														"src": "4549:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4549:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 631,
												"nodeType": "EmitStatement",
												"src": "4544:70:2"
											}
										]
									},
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "3841:33:2",
										"text": "@inheritdoc IValidatorFactory"
									},
									"functionSelector": "830e4eef",
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createValidator",
									"nameLocation": "3889:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "3913:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "3905:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3905:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "3929:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "3921:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3921:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:32:2"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "3961:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "3953:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3953:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3952:19:2"
									},
									"scope": 634,
									"src": "3880:742:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 635,
							"src": "202:4423:2",
							"usedErrors": [
								172,
								178,
								687,
								689,
								691,
								693,
								695,
								697,
								699,
								701
							],
							"usedEvents": [
								651,
								655,
								659,
								663,
								669,
								675,
								685
							]
						}
					],
					"src": "33:4592:2"
				},
				"id": 2
			},
			"contracts/interfaces/IValidator.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IValidator.sol",
					"exportedSymbols": {
						"IValidator": [
							645
						]
					},
					"id": 646,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 636,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IValidator",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 645,
							"linearizedBaseContracts": [
								645
							],
							"name": "IValidator",
							"nameLocation": "71:10:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "8782:130:3",
										"text": "@notice Called on pool creation by PoolFactory\n @param _token Address of token\n @param _owner Address of owner"
									},
									"functionSelector": "485cc955",
									"id": 644,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "8927:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "8946:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "8938:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8938:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "8962:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "8954:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8954:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8937:32:3"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8978:0:3"
									},
									"scope": 645,
									"src": "8918:61:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 646,
							"src": "61:8921:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:8949:3"
				},
				"id": 3
			},
			"contracts/interfaces/IValidatorFactory.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IValidatorFactory.sol",
					"exportedSymbols": {
						"IValidatorFactory": [
							796
						]
					},
					"id": 797,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 647,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IValidatorFactory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 796,
							"linearizedBaseContracts": [
								796
							],
							"name": "IValidatorFactory",
							"nameLocation": "71:17:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "5d0517e3a4eabea892d9750138cd21d4a6cf3b935b43d0598df7055f463819b2",
									"id": 651,
									"name": "SetFeeManager",
									"nameLocation": "102:13:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeManager",
												"nameLocation": "124:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "116:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "116:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "115:20:4"
									},
									"src": "96:40:4"
								},
								{
									"anonymous": false,
									"eventSelector": "e02efb9e8f0fc21546730ab32d594f62d586e1bbb15bb5045edd0b1878a77b35",
									"id": 655,
									"name": "SetPauser",
									"nameLocation": "148:9:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"indexed": false,
												"mutability": "mutable",
												"name": "pauser",
												"nameLocation": "166:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "158:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "158:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "157:16:4"
									},
									"src": "142:32:4"
								},
								{
									"anonymous": false,
									"eventSelector": "0d76538efc408318a051137c2720a9e82902acdbd46b802d488b74ca3a09a116",
									"id": 659,
									"name": "SetPauseState",
									"nameLocation": "186:13:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": false,
												"mutability": "mutable",
												"name": "state",
												"nameLocation": "205:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "200:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 656,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "200:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "199:12:4"
									},
									"src": "180:32:4"
								},
								{
									"anonymous": false,
									"eventSelector": "c6ff127433b785c51da9ae4088ee184c909b1a55b9afd82ae6c64224d3bc15d2",
									"id": 663,
									"name": "SetVoter",
									"nameLocation": "224:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "voter",
												"nameLocation": "241:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "233:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "233:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "232:15:4"
									},
									"src": "218:30:4"
								},
								{
									"anonymous": false,
									"eventSelector": "ce78db41faad8d3a613429389971e6dc25f809f59a4e8467ea2b71c71203ec08",
									"id": 669,
									"name": "SetDepositCustomFee",
									"nameLocation": "260:19:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"indexed": true,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "296:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "280:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "280:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "315:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "307:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "279:40:4"
									},
									"src": "254:66:4"
								},
								{
									"anonymous": false,
									"eventSelector": "6f6bd3c4b38df451f210a585e872b5a0b6de937fda37f0eb0c7731afb4391985",
									"id": 675,
									"name": "SetClaimCustomFee",
									"nameLocation": "332:17:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"indexed": true,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "366:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "350:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "385:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "377:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "377:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "349:40:4"
									},
									"src": "326:64:4"
								},
								{
									"anonymous": false,
									"eventSelector": "9a07b2753aaebe71b96e78f64ccced2e2b9ff13d98b3c7784285ef0c31631dbf",
									"id": 685,
									"name": "ValidatorCreated",
									"nameLocation": "402:16:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "435:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "419:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "458:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "442:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"indexed": false,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "473:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "465:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"indexed": false,
												"mutability": "mutable",
												"name": "validatorLength",
												"nameLocation": "492:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "484:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "418:90:4"
									},
									"src": "396:113:4"
								},
								{
									"errorSelector": "cd4e6167",
									"id": 687,
									"name": "FeeTooHigh",
									"nameLocation": "523:10:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "533:2:4"
									},
									"src": "517:19:4"
								},
								{
									"errorSelector": "682a6e7c",
									"id": 689,
									"name": "InvalidValidator",
									"nameLocation": "548:16:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "564:2:4"
									},
									"src": "542:25:4"
								},
								{
									"errorSelector": "f5d267eb",
									"id": 691,
									"name": "NotFeeManager",
									"nameLocation": "579:13:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "592:2:4"
									},
									"src": "573:22:4"
								},
								{
									"errorSelector": "492f6781",
									"id": 693,
									"name": "NotPauser",
									"nameLocation": "607:9:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "616:2:4"
									},
									"src": "601:18:4"
								},
								{
									"errorSelector": "c18384c1",
									"id": 695,
									"name": "NotVoter",
									"nameLocation": "631:8:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "639:2:4"
									},
									"src": "625:17:4"
								},
								{
									"errorSelector": "03119322",
									"id": 697,
									"name": "PoolAlreadyExists",
									"nameLocation": "654:17:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "671:2:4"
									},
									"src": "648:26:4"
								},
								{
									"errorSelector": "af13986d",
									"id": 699,
									"name": "ZeroFee",
									"nameLocation": "686:7:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "693:2:4"
									},
									"src": "680:16:4"
								},
								{
									"errorSelector": "d92e233d",
									"id": 701,
									"name": "ZeroAddress",
									"nameLocation": "708:11:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "719:2:4"
									},
									"src": "702:20:4"
								},
								{
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "730:70:4",
										"text": "@notice returns the number of validators created from this factory"
									},
									"functionSelector": "f64ee765",
									"id": 707,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allValidatorsLength",
									"nameLocation": "815:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "834:2:4"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "860:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:9:4"
									},
									"scope": 796,
									"src": "806:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "877:111:4",
										"text": "@notice Return address of validator created by this factory\n @param token .\n @param owner ."
									},
									"functionSelector": "cd1a0dd2",
									"id": 717,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getValidator",
									"nameLocation": "1003:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1024:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "1016:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1039:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "1031:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1015:30:4"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "1069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1068:9:4"
									},
									"scope": 796,
									"src": "994:84:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "1086:84:4",
										"text": "@notice Is a valid validator created by this factory.\n @param validator."
									},
									"functionSelector": "38ed1793",
									"id": 725,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isValidatorl",
									"nameLocation": "1185:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "1206:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "1198:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1198:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1197:19:4"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "1240:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 722,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1240:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1239:6:4"
									},
									"scope": 796,
									"src": "1176:70:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "1254:266:4",
										"text": "@dev Only called once to set to Voter.sol - Voter does not have a function\n      to call this contract method, so once set it's immutable.\n      This also follows convention of setVoterAndDistributor() in VotingEscrow.sol\n @param _voter ."
									},
									"functionSelector": "4bc2a657",
									"id": 731,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setVoter",
									"nameLocation": "1535:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "_voter",
												"nameLocation": "1552:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "1544:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1544:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:16:4"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1568:0:4"
									},
									"scope": 796,
									"src": "1526:43:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2d88af4a",
									"id": 736,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPauser",
									"nameLocation": "1586:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "_pauser",
												"nameLocation": "1604:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "1596:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1596:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1595:17:4"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1621:0:4"
									},
									"scope": 796,
									"src": "1577:45:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cdb88ad1",
									"id": 741,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPauseState",
									"nameLocation": "1639:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "_state",
												"nameLocation": "1658:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "1653:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 737,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1653:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1652:13:4"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1674:0:4"
									},
									"scope": 796,
									"src": "1630:45:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "472d35b9",
									"id": 746,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeManager",
									"nameLocation": "1692:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "_feeManager",
												"nameLocation": "1714:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "1706:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1706:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1705:21:4"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1735:0:4"
									},
									"scope": 796,
									"src": "1683:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "1744:214:4",
										"text": "@notice Set default fee for stable and volatile pools.\n @dev Throws if higher than maximum fee.\n      Throws if fee is zero.\n @param _type Stable or volatile pool.\n @param _fee ."
									},
									"functionSelector": "e1f76b44",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFee",
									"nameLocation": "1973:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "_type",
												"nameLocation": "1985:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "1980:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 748,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1980:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "_fee",
												"nameLocation": "2000:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "1992:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1992:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1979:26:4"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2014:0:4"
									},
									"scope": 796,
									"src": "1964:51:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "2023:134:4",
										"text": "@notice Set overriding fee for a validator from the default\n @dev A custom fee of zero means the default fee will be used."
									},
									"functionSelector": "2c3de946",
									"id": 762,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setDepositCustomFee",
									"nameLocation": "2172:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "_validator",
												"nameLocation": "2200:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2192:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2192:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "_fee",
												"nameLocation": "2220:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2212:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2212:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2191:34:4"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2234:0:4"
									},
									"scope": 796,
									"src": "2163:72:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "2243:134:4",
										"text": "@notice Set overriding fee for a validator from the default\n @dev A custom fee of zero means the default fee will be used."
									},
									"functionSelector": "984fa01f",
									"id": 770,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setClaimCustomFee",
									"nameLocation": "2392:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "_validator",
												"nameLocation": "2418:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "2410:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2410:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "_fee",
												"nameLocation": "2438:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "2430:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2430:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:34:4"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2452:0:4"
									},
									"scope": 796,
									"src": "2383:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 771,
										"nodeType": "StructuredDocumentation",
										"src": "2461:142:4",
										"text": "@notice Create a validator given token and owner\n @dev token order does not matter\n @param token .\n @param owner ."
									},
									"functionSelector": "830e4eef",
									"id": 780,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createValidator",
									"nameLocation": "2618:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2642:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "2634:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2634:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2657:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "2649:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2649:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2633:30:4"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "2690:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "2682:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2681:19:4"
									},
									"scope": 796,
									"src": "2609:92:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b187bd26",
									"id": 785,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isPaused",
									"nameLocation": "2718:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:2:4"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "2752:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 782,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2752:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2751:6:4"
									},
									"scope": 796,
									"src": "2709:49:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "46c96aac",
									"id": 790,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "voter",
									"nameLocation": "2775:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2780:2:4"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "2806:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2806:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2805:9:4"
									},
									"scope": 796,
									"src": "2766:49:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c60da1b",
									"id": 795,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "2832:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2846:2:4"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "2872:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2872:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2871:9:4"
									},
									"scope": 796,
									"src": "2823:58:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 797,
							"src": "61:2823:4",
							"usedErrors": [
								687,
								689,
								691,
								693,
								695,
								697,
								699,
								701
							],
							"usedEvents": [
								651,
								655,
								659,
								663,
								669,
								675,
								685
							]
						}
					],
					"src": "33:2851:4"
				},
				"id": 4
			}
		}
	}
}
{
	"compiler": {
		"version": "0.8.28+commit.7893614a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "FeeTooHigh",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidValidator",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NotFeeManager",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NotPauser",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NotVoter",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "PoolAlreadyExists",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ZeroAddress",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ZeroFee",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "validator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "fee",
						"type": "uint256"
					}
				],
				"name": "SetClaimCustomFee",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "validator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "fee",
						"type": "uint256"
					}
				],
				"name": "SetDepositCustomFee",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "feeManager",
						"type": "address"
					}
				],
				"name": "SetFeeManager",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bool",
						"name": "state",
						"type": "bool"
					}
				],
				"name": "SetPauseState",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "pauser",
						"type": "address"
					}
				],
				"name": "SetPauser",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "voter",
						"type": "address"
					}
				],
				"name": "SetVoter",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "validator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "validatorLength",
						"type": "uint256"
					}
				],
				"name": "ValidatorCreated",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "allValidatorsLength",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "createValidator",
				"outputs": [
					{
						"internalType": "address",
						"name": "validator",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "getValidator",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "implementation",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "validator",
						"type": "address"
					}
				],
				"name": "isValidatorl",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_validator",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_fee",
						"type": "uint256"
					}
				],
				"name": "setClaimCustomFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_validator",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_fee",
						"type": "uint256"
					}
				],
				"name": "setDepositCustomFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "_type",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "_fee",
						"type": "uint256"
					}
				],
				"name": "setFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_feeManager",
						"type": "address"
					}
				],
				"name": "setFeeManager",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "_state",
						"type": "bool"
					}
				],
				"name": "setPauseState",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_pauser",
						"type": "address"
					}
				],
				"name": "setPauser",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_voter",
						"type": "address"
					}
				],
				"name": "setVoter",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "voter",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"createValidator(address,address)": {
					"details": "token order does not matter",
					"params": {
						"owner": ".",
						"token": "."
					}
				},
				"getValidator(address,address)": {
					"params": {
						"owner": ".",
						"token": "."
					}
				},
				"isValidatorl(address)": {
					"params": {
						"validator": "."
					}
				},
				"setClaimCustomFee(address,uint256)": {
					"details": "A custom fee of zero means the default fee will be used."
				},
				"setDepositCustomFee(address,uint256)": {
					"details": "A custom fee of zero means the default fee will be used."
				},
				"setFee(bool,uint256)": {
					"details": "Throws if higher than maximum fee.      Throws if fee is zero.",
					"params": {
						"_fee": ".",
						"_type": "Stable or volatile pool."
					}
				},
				"setVoter(address)": {
					"details": "Only called once to set to Voter.sol - Voter does not have a function      to call this contract method, so once set it's immutable.      This also follows convention of setVoterAndDistributor() in VotingEscrow.sol",
					"params": {
						"_voter": "."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"allValidatorsLength()": {
					"notice": "returns the number of validators created from this factory"
				},
				"createValidator(address,address)": {
					"notice": "Create a validator given token and owner"
				},
				"getValidator(address,address)": {
					"notice": "Return address of validator created by this factory"
				},
				"isValidatorl(address)": {
					"notice": "Is a valid validator created by this factory."
				},
				"setClaimCustomFee(address,uint256)": {
					"notice": "Set overriding fee for a validator from the default"
				},
				"setDepositCustomFee(address,uint256)": {
					"notice": "Set overriding fee for a validator from the default"
				},
				"setFee(bool,uint256)": {
					"notice": "Set default fee for stable and volatile pools."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/interfaces/IValidatorFactory.sol": "IValidatorFactory"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/interfaces/IValidatorFactory.sol": {
			"keccak256": "0x678f56fc187f1b47deb3e23ee45600ad3ca0015fc259b1a217f5707afcdcdf09",
			"license": "MIT",
			"urls": [
				"bzz-raw://4ac1501989027c317812fd3425d5585d351530670bcee9463d7092373ea64d24",
				"dweb:/ipfs/QmbjRy5SYCkdsXPgnU4GYUQBRHhyjwSLENYstN7XFi2vwX"
			]
		}
	},
	"version": 1
}